%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Modern_technology_data_04.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 11/7/2018
%%BoundingBox: 0 0 600 450
%%HiResBoundingBox: 0 0 600 450
%%CropBox: 0 0 600 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 26999 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C452A2424244E2424244E2424244E2424244E2424244E2424244E2424
%242A2424232A2424232A2324232A2324232A2324232A2323232A23232329
%232323292323232923230229232301292223012901230129012301290123
%012901230129012201290122012801220128012201280122012801220128
%012201280122012801220023242324232423242324232423242324232423
%242324232423242324232423242324232423242323232423230223232302
%232323022302230223022301230223012301230123012301230123012301
%220123012201230122012201010122010101220101012201010122010100
%220101002201010001000100010001000100012423242424232424242324
%242423242424232424242324242423242424232423242324232423242324
%232423232324FD0A23022323230223232301232323012322230123012301
%230123012301230123012201230122012201220122012201220122012201
%220122012201220122012201220022010100220123242324232423242324
%232423242324232423242324232423242324232423242323022423230223
%232302232323022302230223022301230223012301230123012301230123
%012301230123012201230122012201010122010101220101012201010122
%010100010101000101010001000100010001000100010001000100012423
%2A2424232A2424232A2424232A2424232A2424232A2424232A2424232A23
%24232A2324232A2324232A2324232A232323292323232923232329232323
%292323022923230129232301290123012901230129012301290123012901
%220129012201280122012801220128012201280122012801220128012201
%280122012801232423242324232423242324232423242324232423242324
%232423242324232423232324232323242323022323230223232302230223
%022302230123022301230123012301230123012301230122012301220123
%012201220101012201010122010101220101012201010022010100220101
%000100010001000100010001000124232423242324232423242324232423
%2423242324232423242324232423242324232423242324232423232324FD
%0A2302232323022323230123232301232223012301230123012301230123
%012301220123012201230122012201220122012201220122012201220122
%012201220122002201010022010100022423242324232423242324232423
%242324232423242324232423230224232302242323022323230223022302
%230223022302230123022301230123012301230123012301230123012301
%220123012201220101012201010122010101220101012201010001010100
%01010100010001000100010001000100010001000100012A2324232A2324
%232A2324232A2324232A2324232A2324232A2324232A2324232A2324232A
%2324234E4D23232A23232329232323292323232923232329232302292323
%012923230129222301290123012901230129012301290122012901220129
%012201280122012801220128012201280122012801220128012201280122
%002324232323242324232423242324232423242324232423242324232323
%242323232423230223232353232323022323230223022302230223012301
%230123012301230123012301230123012201230122012301220122012201
%220101012201010122010101220101002201010022010100010001000100
%010001000100010001242324232423242324232423242324232423242324
%2324232423242324232423242324232323242378FD0C2302232323022323
%230123232301232223012301230123012301230123012301220123012201
%230122012201220122012201220122012201220122012201220122002201
%220022010100220123230223232302242323022423230224232302242323
%02242323022323230223232302230223024E292302230223022302230123
%022301230123012301230123012301230123012301220123012201220101
%012201010122010101220101012201010001010100010101000100010001
%0001000100010001000100010001000124232A2324232A2324232A232423
%2A2324232A2324232A2324232A2324232A2324232A232423544E4E232A23
%232329232323292323232923232329232302292323012922230129012301
%290123012901230129012301290122012901220129012201280122012801
%220128012201280122012801220128012201280122002801232302242323
%232423232324232323242323232423232324232302232323022323230223
%232923292323022302230223022301230223012301230123012301232223
%012301230123012201230122012301220122012201220101012201010122
%010101220101012201010022010100010001000100010001000100010001
%000124232423242324232423242324232423242324232423242324232423
%2423232324FD04234D54232AFD0623022323230223232302232323012323
%29779C772901230123012301230123012301230122012301220123012201
%220122012201220122012201220122012201220122012200220122002201
%010022010100022323230223232302232323022323230223232302232323
%022323230223022302230223024E54230223022301230223012301230123
%01230123012301234723014D717101230122012301220122010101220101
%012201010122010101220101000101010001010100010001000100010001
%00010001000100010001000100012A2324232A2324232A2324232A232423
%2A2324232A2324232A2324232A2323232A2323232A297E54292323232923
%2323292323232923230229232301292378012922294D9C4D230129012301
%290123012901230129012201290122012901220128012201280122012801
%220128012201280122012801220128012200280122000223232302232323
%022323230223232302232323022323230223232302232323022323230223
%547E232302230223022301230223012301230123012301234D2201220122
%017271290123012201230122012201220122010101220101012201010122
%010101220101002201010022000100010001000100010001000100010001
%232324232323242323232423232324232323242323232423232324FD0923
%4E48797E7FFD0423022323230223232301232323012323234D2901220129
%0123014D7277222301230123012201230122012301220122012201220122
%012201220122012201220122012201220022012200220101002201010022
%010223022302230223022302230223022302230223022302230223022302
%230223022371A2A2A278A9A8A3784E022301230123012301230123012301
%2301710122012201220122012323724D2201010122010101220101012201
%010122010100010101000101010001000100010001000100010001000100
%01000100010001000123232A2323232A2323232A2323232A2323232A2323
%232A2323232A23232329232377CB774E487379A379A3A34E232923232329
%232302292323012923234D2901290129222901292229224E724D01290123
%012901220129012201290122012801220128012201280122012801220128
%012201280122012801220028012200280123230223232302232323022323
%230223232302232323022323230223232302234DA27E4E484F4873A39D6C
%A94E230123012301230123012301230123222901220122227E0122012201
%220123487222220101012201010122010101220101012201010122010100
%22010100220101000100010001000100010001000100010001FD2023A29C
%2A484F4F734FA39D7372794E230223232301232323012322230177012201
%29014D4DA94D2201282223012923734D2901220123012201220122012201
%220122012201220122012201220122012201220122002201010022010100
%220101000123022302230223022302230223022302230223022302230223
%0223012302234CCB4E4F244F4873789D734E7E2A01230123012301230123
%012301234C2201220122234D23787E280022012201220123484D01010122
%010101220101000101010001010100010001000100010001000100010001
%000100010001000100010001292323232923232329232323292323232923
%23232923232329232323292323234DA1CB79734F4E78A373797E54232302
%2923230129232301292223224D01290129224D474E474E7EA22222012922
%232229487323290122012901220128012201280122012801220128012201
%280122012801220128012200280122002801220002230223022302230223
%0223022302230223022302230223022302230223022301779BA3A3A35378
%7EA3782A2323012301230123012301230123017101220122014D234D234D
%23474DA27701002201220123234948230101012201010122010101220101
%002201010022010100010001000100010001000100010001000100012302
%23232302FD13230223232302232323767771734E4F242A234E2329012323
%2301232323012301230123712201290122234D4771474D234D2378A25301
%22012301292224484E012201220122012201220122012201220122012201
%220122012200220101002201010022010100220102230123022301230223
%0123022301230223012302230123022301230223012301779B774D4E474E
%234D23292323012301230123012301230123224D01220122014D234E7195
%474D2323234753A22222002201230123234F230100010101000101010001
%000100010001000100010001000100010001000100010001000100012323
%292323232923232329232323292323232923232329232323292323232923
%2377A29C9D739773734E4E23290129232301292323012922230171222801
%29014D474E4DA34772A878234E234D23A37E29012822232229234E482901
%220128012201280122012801220128012201280122012801220028012200
%280122002801022301230223012302230123022301230223012302230123
%0223012302230123014D779C72736C734E4E482923230123012301230123
%012301234D2201220122234D234D78A2234E7778234D2323234EA2780022
%012201230123244E01010122010100220101002201010001000100010001
%000100010001000100010001000123232302232323022323230223232302
%23232302232323022323230223232302234D9C729D737372734E4E232923
%2301230123012301230123224D01290122014D474D23A19BCB4D4D54CB78
%4D2347234D4DA34D22012201232223234F23220122012201220122012201
%220122012200220101002201010022010100220101000123012301230123
%012301230123012301230123012301230123012301230123014E72736C73
%6C73484E2323012301230123012301230122014D012201220123234D234D
%A8779A4D2347234D704D2323537823787829002201230123012424230001
%000100010001000100010001000100010001000100010001000100010001
%292323232923232329232323292323232923232329232323292323022923
%23022923977397729C4E734E4E2329232301292223012901230129712801
%290129234E474D70A1A2A8764D234D234D76A0234E4DA94D4E7E7E012801
%232229222A23280122012801220128012201280122012801220028012200
%280122002801220001230123012301230123012301230123012301230123
%0123012301230123012301297373729B9B9B4E4E23230123012301230123
%01230122014D01220122014D234D23A277A04DA9464DFD04234C9A704D23
%4E7E2929A800220123012323240022010100220001000100010001000100
%010001000100010001000100010001230123232301232323012323230123
%232301232323012323230123232301FD04237373739BC2724E484E232301
%230123012301230123014D22290122014D474D234D959CA84E2377704D23
%47234D23712329234E472978220122222322292322012201220122012200
%220122002201010022010100220101002201010022000123012301230123
%012301230123012301230123012301230123012301230123012348734872
%764E484E23230123012301220123012201234D2201220122234D23474DA2
%719553A94DFD0E23A2000101230123230100010001000100010001000100
%010001000100010001000100010001000100012301292323012923230129
%2323022923230229232301292323012923230129232301734E734E734E4E
%244E232301290123012901230129014D01290128014E474D70A97EA9A24E
%4DA3234E234D234E2323234E2323234E7E2201292223222A012201280122
%012801220128012201280122002801220028012200280122002801012301
%230123012301230123012301230123012301230123012301230123012301
%234C4E484E244E242A01290123012301220123012201234D220122012223
%4D23719AA12378787EFD0E23534D01220123012301220101000100010001
%000100010001000100010001000100010001000100010001232223012323
%23012323230123232301232323012323230123232301232223014D767723
%4E4E4E244E232970712223012301230123014D4D9C222201290129234D23
%4D4D4D234D78FF4D47234D2323232923232329237E012222232223232201
%220122012201220022012200220101002201010022010100220101002200
%010001230123012301230123012301230123012301230123012301230123
%01230176762901010022012200010022229B2222012301222278729C7296
%232201220122224D2323234723232378A2FD0B237E010023012301230101
%000100010001000100010001000100010001000100010001000100010001
%000129222301292323012923230129232301292323012923230129222301
%2922774C29222200280022002800220129229B01290129719C9C9C729D96
%9D724D012901292229234E234D234E234E234E2323234E23232329545401
%282223222923220128012201280122012801220128012200280122002801
%220028012200280122000123012301230123012301230123012301230123
%01230123012301230123229A4C2301010001000100010022229B4C22014D
%9B9C719C729C729D72977272222201220122234DFD0F237E010101230123
%232201010001000100010001000100010001000100010001000100010001
%000100010001230123012301230123012301230123012301230123012301
%23012301230123014D764D0122002200220129709B22234C9B9B9C9B9C9B
%9C96784D9D72977397472901290123224D2323234D232323292323232923
%237E2201232223222A012201220122012200220122002201010022010100
%220101002201010022000100220001220123012301230123012301230123
%0123012301230123012301230122012301224C9A22220122014C704D0128
%709B9B9B779C719C714D224D477272736C7348230122012201FD0B232223
%295300220123012302010001000100010001000100010001000100010001
%000100010001000100010001000123012901230129012301292223012922
%23012922230129012301290123012901230129229B70774C9B4C2922779B
%C39BA19B9C9B9C4D4D4C4D224D23727297FD0473232901292229234E2323
%232A2323232923A222280123222923290128012201280122012801220128
%012200280122002801220028012200280122002800012201230123012301
%23012301230123012301230123012301220123012201230122012301224C
%4D01224CA1FD069B7171224C224D224D224D232947736D73497348230122
%012201FD09237E0100220123012401010001000100010001000100010001
%000100010001000100010001000100010001000123012301230123012301
%230123012301230123012301230123012301230123012301230123012301
%4D9BA19BA19BA19B9C774D224D284D4C4D4D4D234D234D23727373497349
%4E012922230129232323292323297E012201232223232201220122012200
%220101002201010022010100220101002200010022000100220001000123
%012201230122012301220123012201230122012301220123012201230122
%01220122012222779AA1FD069B4C4C224C224C4628224D224D224D222323
%734973487349492322012201222223012323782222012201232301000100
%010001000100010001000100010001000100010001000100010001000100
%010001290123012901230129012301290123012901230129012301290123
%0129012301290123012971A19BC39BA19BA29B9C9B9C714D284D4D4D224D
%224D234D474D224D4773497349734973482901292223222923237E280123
%2229222A0128012201280122012801220128012200280122002801220028
%012200280122002800220001230122012301220123012201230122012301
%220123012201230122012301220123014D77FD0B9B779C714D224D464D22
%4D224D224DFD042322484873FD0449482401230122012323530123012301
%232301000100010001000100010001000100010001000100010001000100
%010001000100010001230123012301230123012301230123012301230123
%01230123012301230123012301789B9C9BA29B9B9BA29B9C9B9C9B9C9B9C
%9C78224D224D224D474D234D2329224D222324734949494F494923292223
%012922230129222323290122002201220022010100220101002201010022
%010100220001002200010022000100220001220122012201220122012201
%22012201220122012201220122012201220122010176CA9B9B779B9B9B77
%9C9B9C719C719C719C72964D4D2222222922472323222322232223234824
%482449244924230122012301220123012300010001000100010001000100
%010001000100010001000100010001000100010001000100012301290123
%012901230129012301290123012901230129012301290123012901230177
%A0CAA8A29B9C9B9C9B9C9B9C9C9C969C969D729D724D224D234D224D234D
%224E232923292323234E484F244F244E2329222322292223232801220128
%0122224C2828002801220028012200280122002801220028012200280022
%002800012201220122012201220122012201230122012201220122012201
%2201220122289A4C22229BA2CB9B9C719C719C719C729C72784D724D7272
%732329222322292323222323230123222322232348244E24242323012301
%2322230001000100227076214C704C000100010001000100010001000100
%010001000100010001000123012301230123012301230123012301230123
%012301230123012301230128767622220122004C9BCBA29C729C9C9C729C
%7272729D729772727297484D22292329232323292323222323232229234E
%244E244E242A22230129012200220152764C01010022289B4C2201010022
%010100220001002200010022000100220001000122010101220101012201
%01012201010122010101220101012201010128762801220100000100014C
%A2A2A2719C729C4D72729672977273727248736C4E222323232223232301
%230123222301232324242A2324232A232323010001009A4B010001000100
%01004C4C0100010001000100010001000100010001000100010001290123
%01290123012901230129012301290123014D284D2229012301294C9A2229
%01220028002200282277A2CB9C9D7272729D729D73977397737348737373
%47292329234D23232229232322292229244E244E244E242A232901220128
%767601280122002801287077012200280122002801220028002200280022
%0028000100012201010122012201220122012201220122229A4C2822764C
%220101012228764C220101000100000001002877CBA29672727273729773
%736D736D73484E4873484722FD05232223012301232424242A242A234E7E
%29000100010001289A27010001004C702800010001000100010001000100
%010001000100010001000122012301220123012201230122012301284CA1
%22220123014D9A7101220123014C764C0122012200010022000128A2A9A3
%72974E737397FD0673494E4973494FFD042322232229234E244F244E244E
%2A7F544D2222002201010022017676764C9B4C2201010022010100220001
%002200010022000100220001002200010101220101012201010122010101
%229A28012201010122010146770101012201224C76220101010000000100
%00004D9CA97273727248736D734873484848734949484923230124232323
%482424242A242454A32201219B4C220001000100010022274C0001000100
%010001000100010001000100010001000100010001000122012901220129
%0122012901220129019A7629012201290122229B4C22012901220129229A
%76290122012800220028002871CBA39773734E7373734873497349734973
%4949484E224F484F484F244F24797E5401010028014C704D012201280122
%002801220028012200280122002801220028002200280022002800010028
%00010101220101012201010122010101220128764C010101224C9B222201
%0101220101012201287676FD0401000000010000229CA3A36D73484E4873
%496D4973FD064924492448244E242424A35401FD05000100014C77000100
%010001000100010001000100010001000100010001000100010001000100
%010001220122012201220122012201220122012201224CA14C779A4D0122
%0122012201220122012201224CA028220122000100220001004D9DCB7373
%6D734973497349734949494F4949244F484F244F7E7E0122000100220001
%002201287028010100220101002201010022000100220001002200010022
%000100220001002200010001220101012201010122010101220101012201
%01014C220101220101012201010122010101220101017676220001FD0700
%22479DA3734949484949494849494924492449244824787E29FD07000100
%0100707022000100010001000100010001004C4C28000100010001000100
%010001000100010001000129012201290122012901220129012201290122
%012901220129012201290122012801220128012201280128767722220128
%0022002800222273A3A349734973494F494F494F494F244F4EA953280001
%00280001002801224C9B28220028012200280122002801284C9A28287077
%012200280022002800220028000100280001000122010101220101012201
%010122010101220101012201010122010101220101012201010122010101
%220101229A4C010122000000010000002972A37949494948494849244924
%4E787E01FD080001004C704C000100010001000100010001000127760001
%00014C710001000100010001000100010001000100012201220122012201
%220122012201220122012201220122012201220122012201220122012201
%220122012201220176764C012201010022000100222379A3794949484F49
%4F247F7E2900220001002200010022227770280101002201010022010100
%22010100224C9A284C767000220001002200010022000100220001002200
%010101220101012201010122010101220101012201010122010101220101
%000101010001010100010101000101010022707600010101FD07004878A3
%484924494EA32901FD07000100014C772201000100010001000100010001
%000100010001004C4C280001000100010001000100010001000100010001
%220128012201280122012801220128012201280122012801220128012201
%28012201280122012801220128012201280122229B4C2801280122002800
%0100294EA37FA3A37901280001002800010028014C9A4D01220028012200
%280122002801220028012200280122002800220028002200280001002800
%010028000100280001010122010101220101012201010122010101220101
%01220101012201010122010101220101012201010022010100220101004C
%764C0022000100010000000122482323FD0700010001009B4C2200010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001220122012201220122012201220122012201
%220122012201220122012201220122012201220122012201220122012201
%22012201224C762222012200220001002200010022000100220022002870
%9B2222010100220101002201010022010100220001002200010022000100
%220001002200010022000100220001002200010000010101000101010001
%010100010101000101010001010100010101000101010001010100010101
%000101010001000100010001000101764C280001FD0D0001004C70280001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010000280122012801220128012201
%280122012801220128012201280122012801220128012201280122012801
%22012801220128012201280122014C767601280122002800010028002201
%28289B4C2801220028012200280122002801220028012200280122002801
%220028002200280022002800010028000100280001002800010000220101
%002201010022010100220101002201010022010100220101002201010022
%0101002201010022010100220101002201010022010100014C9A22010001
%FD0500010022707600010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000122012201220122012201220122012201220122012201220122012201
%220122012201220122012201220122012201220122012201220122012201
%22017676280122002201220076764C002201010022010100220101002201
%010022010100220001002200010022000100220001002200010022000100
%220001002200010022000001000101010001010100010101000101010001
%010100010101000100010001000100010001000100010001000100010001
%000100010001000100010022707600010001229A22010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100000001220128012201280122012801
%220128012201280122012801220128012201280122012801220128012201
%280122012801220128012201280122012801220128289B4C777676012801
%220028012200280122002801220028012200280122002801220028002200
%280022002800010028000100280001002800010028000100280001010022
%010100220101002201010022010100220101002201010022010100220101
%002201010022010100010101000100010001000100010001000100010001
%002828280001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100012201220122012201220122012201220122012201220122012201
%220122012201220122012201220122012201220122012201220122012200
%220122002201220022010100220101002201010022010100220101002201
%010022000100220001002200010022000100220001002200010022000100
%220001002200010022000100000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100000001000028012201280122012801
%220128012201280122012801220128012201280122012801220128012201
%280122012801220128012201280122012801220128012201280122002801
%220028012200280122002801220028012200280122002800220028002200
%280022002800010028000100280001002800010028000100280001000001
%000100010101000101010022010100220101000101010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001220122012201220122012201220122012201220122012201
%220122012201220122012201220122012200220122002201220022012200
%220101002201010022010100220101002201010022010100220101002200
%010022000100220001002200010022000100220001002200010022000100
%220001002200010022000100220000010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010000000100000001000000012201280122012801
%220128012201280122012801220128012201280122012801220128012201
%280122012801220128012201280122012801220028012200280122002801
%220028012200280122002801220028012200280122002800220028002200
%280001002800010028000100280001002800010028000100280001002800
%000100010001000100010001000100010001000100010001000100010001
%00010001000100010001000100010001000100010001000100017E7E7EA8
%537E7E53537E7D7E7EA87DA8000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000122012200220122002201220022012200220122002201
%220022012200220122002201220022012200220101002201010022010100
%22010100FF7EFFFFA9FFFF7DA9FFA8FFCBFFA8FF22010100220001002200
%010022000100220001002200010022000100220001002200010022000100
%220001002200010022000100220001000001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%0001000100010001000100014C4D537D287D537D537D5353537D537D0001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010000000100000001000000010000280122012801
%220128012201280122012801220128012201280122012801220128012201
%280122012801220128012200280122002801220028012200280122002801
%220028012200280122002801220028012200280022002800220028000100
%280001002800010028000100280001002800010028000100280001002800
%010000010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010100220101002201010022010100220101002201
%010022010100220101002201010022010100220101002201010022010100
%220101002201010022010100220101002200010022000100220001002200
%010022000100220001002200010022000100220001002200010022000100
%220001002200010022000100220001002200000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000000010000000100000001000000010000000122002801
%220028012201280122012801220128012201280122002801220028012200
%280122002801220028012200280122002801220028012200280122002801
%220028012200280122002800220028002200280022002800010028000100
%280001002800010028000100280001002800010028000100280001002800
%010028000001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001220101002201010022010100220101002201
%010022010100220101002201010022010100220101002201010022010100
%220101002201010022000100220001002200010022000100220001002200
%010022000100220001002200010022000100220001002200010022000100
%220001002200010022000100220001002200010000010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%000100010001000100010001000100010001000100010001000100010001
%00010000000100000001000000010000000100000001000000010000
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 4 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">600_450_clean</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-11-07T15:51:25+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-11-07T15:51:25+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-11-07T15:51:25+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FUthtLuDUp5uX+jXEgKom4WiUbkCB9phWo75KxXm2SlYA7kyyLW&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUHq+s6Vo2nzalqt3FY2EArNczuERa7Dc9ydgO5y&#xA;UISkaiLKsC0H/nIP8uNZ1iTTobi4tYhIYrbUruL0rS4dSARFIWLDY1/eKu3XMyXZ+QRvYnuvf5No&#xA;wSPJies/85B6pY+fV0tLKI6St8+mBDVnmYXJg9ZJVPEUCVofGnE7Nmdpuy4ZMUpGW4Hy2vf3/g9H&#xA;IGCPh8Ru/wAfjve65o3Cdirzf82vzmtfy7udNhn0t9ROopK6skwi4ekVFDVHrXnm47L7JOrEiJcP&#xA;DXS2cYWwD/ocDTf+pZm/6S1/6pZtf9Csv9UH+l/az8LzWn/nMPTR/wBMxN/0lr/1SyEvZiQ/yg+X&#xA;7UeGpt/zmRpg/wCmXm/6S0/6pZTL2dI/j+z9rHgWH/nM3TB/0y03/SYn/VLKj2ER/H9n7WNLT/zm&#xA;jpg/6ZWb/pMT/qjlR7GI/i+xCw/85qaYP+mUn/6TE/6o5A9kn+d9iLe6fl/5vj84eT9N8yx2xs01&#xA;FHdbZnEhThI0dCwC1+xXpmtzY+CRj3JZDlSuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KsR/Mn8tPLnnzR0sdYhdpbYl7G5hkMckLtTky1qjVVaUdSPl1y7DqZ4jcGUavd5LpX/ONVy+o&#xA;C01vzBGnlqzZTDaWkZguZSTt63OqoSx6qzg/s0zOHaEBchH94ep6e78fFy5Z5mIiOXlyR1z/AM45&#xA;ahN55sblL6OPyvYXP1uBeTtdBRKJBAS4blSlA57dd8th2nGOOQEfXOr7thV/sa56kyiAXuMl5A1Y&#xA;4nLTA0KRgFwQe4P2R/rZpS1DGRueStD63pL63H1f2uNafjiLrdhKr2fNX/OXl1Ja635SuI6epClz&#xA;IlelUkhIzrPZw+jIO+v0s4PD/NfnrW/NBtW1QxVs1ZIfSThswUb7mv2BnQafBDDfD1ZjZmPlv8vt&#xA;XXR41v8AyUmrSTMbmG//AEmtswhmijMaMiMdvhLDlQ/ERmu1GuiZenJw9K4bYmTd7pWhafF9Q1Xy&#xA;Pp9nqDoViluPMMcDKs0jPFI0TSAn01YKW7hcx/GnLeOQkf1GNsBj8q6vbXKSx3WkvJE4Kh9R02VC&#xA;VJ+0skzRsNu4pvls88SOUvlJiSiZNP8AMMdjPyudB9FJvrbIJtHkkLA+p+7Cln4fDT0l+H9njvTM&#xA;Uzjf8X+yY2x658wX86XSPFZgXhUzGOxs4yvEAD0ikSmH7O/p8a716nEwA7/mWL7m/wCcd/8AyTHl&#xA;j/jBN/1Ey5zmt/vZMg9GzFS7FUt8yv5iTQrx/LcdrLrapWxivi627PUVEhj+L7NadN+4G+Tx8PEO&#xA;Lkr4u8y6h+c6efoG16TUh5tRuFhEgIND8FLRIP3ZRvGLY/POpwDB4fprh6/tv9LfjNPrb8s7j8wp&#xA;/LyP53t4LfUCB6SxNWYqakmdV/dq3SgU/PfOc1YxCf7vkwycN+lluYzW7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq0UQsrFQWWvFiNxXY0xTZQ+o6lYabaPeX86W1tH9qWQ0FTsAPEnsBucIBPJMYm&#xA;RoJb5X85+W/NFtLcaJeLdLAQJlFQy8q8SQf2W4mhG2x7g5fn0uTFXGK4uTLJilDmneY7W+Xv+cyi&#xA;f0n5WA/3zd/8TizpewJUJ/D9LKL50ijeSRUrx5EDm1aCppU0BOdCcmzMFP7ryzZwPAi6iVlMyRzM&#xA;8RHFS6o0gUEuvBj9lqMadB0zGOefBxkDfkL58zz5fjq5WTTiIu1TzB5PtrAQSQX7XSPJHDKRG3Je&#xA;daN8XFU2XaN2DeNBvkfFBxiRriPS/nXfXWgwzYBGqvz2VrryTps0DJZXDQXcTcCtw3Peu/qKico9&#xA;gTy3XanI9cpBnIRr1GXdyr3nr0r47VvdLRRIqJ9X45933JbNfXGlWf1C60C1aahWO9lhYs1APiUm&#xA;gbah+ntmDLCZSPqPutwpgw2MWLlH8Dl5cd97/wDOO/8A5Jjyx/xhm/6iZc5vWf3smQejZipdirsV&#xA;dQVr3HTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVk88FvE008ixRJu0jsFUD3J2xVD2Wr6Xf&#xA;ErZ3cNww6iN1Y08aA4BIFJiQi8KGDfnVbC4/Ly/R4TPAsls9wgXmfTWdCzcaE7ddht1zJ0plx+k1&#xA;Ktt6397kaYxExxcnnH/OKFjqiDzXqF3HILW6ks4rWeWv7wwfWOYXl8VFEi/fm27ezRlKIB3F39i6&#xA;mfFJ9AZoHHfL3/OZB/3K+WPaC7/4nFnQdiGhL4JD53t2jEqcm4oWHN6VAFdzt4ZvDOt+aQd2V6xq&#xA;0N/C8vFLI3Dq8N1yLDkgSqD0lYjjSv05rI+nhhHilwRIIquZl3nzdjqNQJx7vNsNJ6fqPM0zSEJx&#xA;+xGWjA4sYxtt2Yg/JTvlfiSnMCXIfpO+47+v3kbNXETuTf4/H7EdNfiSRHuV+q3k17DKXB4qIyvB&#xA;zG1WPUVqPnl+GBhcYn/JEUeZINjyltf4LkDLfPaRkPl729XmSCznFxAl1bpPcwqzlQHeNftHYKp+&#xA;NmBTcnbbbMjHOE6BsVjhLhH9KuvPmN72r4tuSqNi4i/uYHq1tDb6te20PwxQzyxxgmtFVyBv8hmL&#xA;gmZY4k8yB9zpcgAkQO99y/8AOPH/AJJry1/xin/6ipc5/W/3smIei5ipdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirG5/JceoavJfa1fS6lbK/Ky05wI7eEf5SJ/eN/lNgItINJpNoGkuFM&#xA;dulvIm8csCiNlPzUDISxgs4ZTFbLqDaTo0l5qhZxbAmRoUaVioNB8KAmv+Zw4+ID1c0ZDEn08knt&#xA;NR8561W4tbWLR9OI/ci9UvcyA92jBog9jhN9FFDmmdhd3NiIrK/to4FrwglthxgNeg4/sZX4pBqX&#xA;zZ+ECLj8kfHd87yS29CVRGoYzstIjXoFb9o+PhltsTjqIlY36dXzJ/zmVX9K+V/+MF3X/g4s33Y5&#xA;2l8Gt4r5Mt9EnkvP0pbPcLDGJI3iYfABUN+6PH1Caj9sUAPXam3BJnEA9fx7vl3OVpYxJJIuhaKN&#xA;1baRdXltDaxSaXfwiJXWVZqyMAw9SRa0aN/2KKdu/U1yGLJkI3Egdvu28j37/Dkz2gSKFHuNpnqH&#xA;mhre+sw8UJSzXkFihHMr6ZbkxXguzb7D5+9c8AOAwr6jzJ63yHNzMucRrYbeSqnmrRG0+S1e1dJL&#xA;2ILOkzKDSUqTJEODKlR9k08DuBu6fDj4CTL14+XPfntz36X8fhT+YgY0RuVHX5bJ9ChsJ3NqlmyP&#xA;K7SAuwkBHOKNuTS1UCtAPFu5FOOE8V5L4p5Nhsf4TykenWrvbl3JzSqHCdq8/u73nszs8jyMS5di&#xA;xkb7RJNan3OXgUHUkvu7/nHj/wAk15a/4xT/APUVLnOa3+9l+OiQ9FzFS7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYqoaheRWNhc3sv91axPNJT+WNSx/AY+5lGNkBjfkfz4nmhZAthNCIgSbxRytXI4/Asm&#xA;x50YHiR075k5tMccRIkb9Ov9jfqtOMcqBtleYzjOxV2KuxV2KuxV2KrZIopABIgcAhgGFaEdDgIB&#xA;5pBI5LsKHjP/ADkB+THmn8xL7Rp9EurG3TTo50nF7JMhJlZCvD0opv5N65sdDq44geK90PJl/wCc&#xA;QPzMUkrqejK3Yie7B39xbDM09qYj0P2frUKlt/ziT+ats4kg1XRUcbEetdFSK1oym1IYexFMjLtL&#xA;FIURL8d2+yYkjkiJf+cU/wA1JDz/AEloqzUVRKLi8LKEIKhCbaq9BvWvvTbAe0oS+riI+H29/wAf&#xA;vbJZZFCz/wDOIv5pzsrS6tozlRxWs91QCpagH1Wg3Yn5nGPaOKPIH8fFrJJ5rT/zh/8Ama1A+qaM&#xA;yqKKDcXZp8q222EdpYu4/Z+tBtZ/0J7+Z1KfpPRfb9/d/wDZLj/KePuP2frRT6X/ACq8p6j5S/L/&#xA;AEjy7qUkMt9p6SLNJbMzREvM8g4l1jbo46qM1OoyCczIdUhleUpdirsVdirsVdirsVdirsVdirsV&#xA;dirsVSnzVa6rd6BeW2lhDdTRsnFzx5IwIZVPQMRsCfwyzEQJAk1uPNu08oCYMuTFfyS0LV9G8o3F&#xA;tqlrLaTSX88kUc9BIYwEjDsB0qYzSvUb982fbWXHPKOAggRHLle5/S2azJGU7jyegZqHFdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVeD/APOS/wCYfnHylfaBH5f1J7BLuK5a4CJG3MxtGFrzVunI9M6b2f0WHMJ+&#xA;JHiqv0tmMA83ip/P382/+pjm/wCRVv8A9U86M9j6P+YPmf1tvDFXX86vztk02bUo9duDY28ixTTi&#xA;K24q7glVP7uu9MxMnZ+iExDhHERdbo4BV0l7f85A/nAOnmSb/kVb/wDVPIS7L038wfb+trICk3/O&#xA;Qf5x9vMs3/Iq3/6pZjS7N0/8372Jbufz6/O63SF5vMNzGtwnqQlobcckqV5CsXSqnMUaTTyJEQNt&#xA;iiUSOfVDH/nIf85v+pmn/wCRVt/1SyJ0WH+awt9hfkrr2ra/+V+g6vq9wbvUruKRri4YKpcrPIgJ&#xA;ChV+yoGwzQ6qAjkIHJIS78/vM+u+Wvy8m1TRLtrK+W6gjWdVVjxdiGFHDDf5Zndi4MeXUCMxcaLZ&#xA;AWXzJ/yv382/+pjm/wCRVv8A9U87P+R9H/qY+Z/W3cMVrfn9+bnbzHN/yKt/+qeVy7I0n8wfM/rQ&#xA;YhRf/nIH83x08yTf8irf/qnmPPsrTfzB9v62BAUm/wCcg/ziHTzLN/yKt/8AqnmNLs3T/wA372BC&#xA;m3/OQv5yf9TNN/yKtv8AqllEuz8H8372JUz/AM5D/nL/ANTNP/yKtv8AqllJ0OH+axt9Ff8AOLnn&#xA;zzb5v0HXLnzJqL6jPa3UUdu7rGnFGj5Efu1Tvmo7QwxhIcIpIe25r0uxV2KuxV2KuxV2KoLVZtSh&#xA;iR7CJZ5ORV4m6UoTyrUdKU+nKc0pgXEW3YYwJqRpG5c0uxVC6tqlnpWl3ep3rFLSyhe4uHALEJGp&#xA;ZiANzsMlCJkQB1SBbzvQ/wA9/LutNrENvby20mnWtzfQSuUkSS3tqAysFNVqW6CvzzN1PZ2TDCMp&#xA;fxkCutn8c7cqekIANhjC/n3rHC4ZktX9FBIggHrF0ZlQbK9RUutPEbrXL8/ZMscYm/q53tW1/oY5&#xA;NOAQAbtGeTv+cgI7vUWTzGiWWnyeottcRo1SysKck5M/2AeXEGh607ubsicaEDxTI3iOnx5fce62&#xA;+eh29J37nstvcQXMEc9vIssMqh45ENVZSKggjNS4BBBoqmKHzD/zmO1NT8r/APGG7/4nFnVezkqj&#xA;P4fpbIF85+pnS+IztPtL157Xy5qOmtbGYXQ9RCQ3FR9n1Nm4njQ0PHY98w88ceSQJNTgduXy/Y5E&#xA;MgGMgjdjdeTBagVNKnYCvjjObiWm3l3T7R9UKXkbXARFeOOJgvxmVEAfnx2IY9x2+R1upymUfSeG&#xA;+pF9CWzFC5VzTz8wLbT7qwTUdPtJCLeVYbm+qQhLpyIZGq3Lkftbb+Na5j6bDLBEQySiZy3AA/h3&#xA;8h8v1N2rjxR4hHYbEvPycuJdc++P+cd//JMeWP8AjBN/1Ey5zWs/vZMglH/OUxp+U9wf+X22/wCJ&#xA;HM7sI1qB7izjzfGXqZ2/iNtuQSyuEiVnc1oqgkmgqdhlc8oAslebOvL1v5ftLICJETXCSDPqSVi4&#xA;qSGNv+wCCKfEK5rDDNmyXfoHSJ3/AM79jsdNCFbfX/S/Qgn0XyzrGvpbwyragqz3DxFY4XZf2Y/U&#xA;NFr/AGDc5maiNRAjvPqjLiwymANu+uSTeatE0iwgSWwm9R1k9KVQ3NaFSVbkBSvwmtGI+WYWeJhO&#xA;rsEd1fj5BwtRjxgXDoaYuTlBLhPrL/nC7/lGPMf/ADGw/wDJrNF2n9Q9yYvozNYydirsVdirsVdi&#xA;rsVdirsVdiqSed9OvNS8n61p9kvO7urOeKBK8eTshCrXtU7ZbhmIzBPJnjNSFvBfyq8iaw2reY7z&#xA;UdKudOs57DULKeaRQr+pcGMhVUg/ZCNU08Pnmd2hq4mMIiXHwcPLlsDzv38nYZ8wly2KS6loWieW&#xA;7K9tbvWAL7UnWSGGRTw5o6yCqJ6hXnxAZ+n3ZXj1WbUZIng9MRw7UDRBHM866Dl5hHGbs773XS2I&#xA;3VleWt6jSILe61C/5K44SxtbzED7RDRuFZe/Q7imbuOescqNxhhiK5HijQ5XYuPd06lux5LJ6SMv&#xA;s2TXyt+afmryhbrc6fIWhueTTW0pMsUjw1U1Mjc4+vxbkn4QD2FmbSYMxPF6eCoiufq3HvHw29Xv&#xA;TkAnG5Dv/H4t9jRsXjRj1YAn6RnIA2HTkUXy9/zma1NT8rf8Ybz/AInFnSdhSoT+H6UgvnONWcFq&#xA;hUWnJj0FenSpzfSy0yD0GL8tvNsFhHf3NtAJo4yiwys/q+kyn9lCB9ltv2s0P57Bmy+HAy4ib+Px&#xA;+f8ANdhHR5ODj2oMdj0ouIH0rT5JIrliFnukWQmhpRR9lQadxX3OXnUc/EkBXdY/afu8mjwtgYxO&#xA;/emKaPBBqQliRtO1qEh4rWRuEDtXqCg+NW32QgHoBkMkuOF4zcOv84fP/fb97ccFS29Mx0KS6/pe&#xA;vKsV9rMH1aK5Z1hKEcSUYrIxoXJIcHY7+GGGYzGxMuGvh3CtgHCywlzlsxqQFWKmtQabih+7LLtx&#xA;S++P+cdv/JMeWP8AjBN/1Ey5zms/vZMxySX/AJyqNPykuP8AmNtf+JHMzsc1nHuLIPi5SzMFUFmY&#xA;0AG5JOdaclMrTK0i1O1mFs0K+neEQyRytxQkGvB3VlKMpoStQfEZh5ssJjiv6d9v0Dq2xEh05ssu&#xA;9Oubby3DLdRmMyO01srBgBH6pU8QxDDdv2h3x0WW9UeHlyPv4b3+X2OfDaG/f+lB6f5Z1iCAanMn&#xA;o20sJaOpBZkdaqStDQMp2r88vx5o5spjH1cJ36de/wAv2Jw4ZfV0opHrYl+oyW4jJkgmBuU/bi9M&#xA;Mp9RPtLu1KkZDX5YnJGj0dYb4CPNjZOYRLjPrP8A5wt/5RjzH/zGw/8AJrNL2n9Q9zKL6MzWMnYq&#xA;7FXYq7FXYq7FXYq7FXYq8z/OX8yNR8opY29kwt2vEkma8May8FheNSvFiftGUDZT8165suytLHNl&#xA;qXLu3359fg5emxwIJkLpjnmj8xdak0Py9f8Aqi1vNY07W2uIoRxQGytWaNmCNI25oV+M0LCnjhjp&#xA;cBnk4STwygI/E7g8vtHTkz4BEmMh7vx+p49pNpqfmnzlDpOl6fbT6kkcrzIzcC1FBaSQyNxYDnvV&#xA;2YkZsc+OENMOe+/F8eQ/s26OXmyQiRsNve9q0v8AKrT/ACv5R1ybWnGusthcy3FkoItImhX1gErx&#xA;cvyiA5BlI8O+af8AOSlljwbVtfVwZz4gOm7yjyn5Es/Per2Oi+q9va6UrXFzDGqAMHdS0KFT9thv&#xA;zqVp3rmynnyaXHKcqlPMRX1XUQR15c+W3ycvPfDXIR58n16AAAAKAbAZoXUvln/nNA01Pyr/AMYL&#xA;z/icWb7sY0JfBXzckzoaoxU9Ns3JIPNbep6h5r1S606BITDLbSq5jZRWBY4m2LW6/uRV/hHJKeK8&#xA;t8o02WGHHZ5ihfv6A94G5ALsssyYijzYZpuqwR3Sy2M3o+mf3cF0yVHflHIw4A1Fd6Edi2Y87qsg&#xA;sHqL+0cz9vwcfDmAlY+1kmjeYvLv1W8fUYVu7kuPWvZKvFycEKGrV+v7R+GvTxLpxAZoiR4IdB7v&#xA;s/T+jMxarHZMhfn+N0D5/wDMV1qGm2cfqOY7V6RN6hcBtzVKBQgpTYffm51unw4oEQ4fWbod2/Pc&#xA;3ve/6mjW5uIbd7AZJHdizmrGm/yFBmo5OsJffP8Azjt/5Jfyx/xgm/6iZc57Wf3pZjkkn/OVpp+U&#xA;dx/zG2v/ABI5kdlGs3wKXxSshUhlNGBqCNiCM6cyW2V+W/NGhQwyJrdqLu6dmENzNV41DKB8UdOP&#xA;IncybtlOPHGOQEnhhtsPf93Th5ObptTAH94L/H435pv5m1641CG3LS+tapDwEgkrHGpcleReiipj&#xA;HwoflU7Zm5cmDAbgBfFyj12589+fM1X2uRmzcX6/x7k2j833LaJpcEKRzemkNnb3EbskauEAAZqP&#xA;KK/tcGTuKA1zB0sxCM5EcyZVz6/Dl3Gx16rLKeAV12YSs2lrBLctCYp76QqFCklxIzep6QV0b0yP&#xA;hUqRueLcuq4GolOWQ0RQJP45/jcV1w4mIjff+Pl/YbY9qtlLZXskDxPCKkxpIVZuBJpUr8JPjTvl&#xA;uPIJRsG3Fyw4ZVVPqn/nCz/lGPMn/MbD/wAms1XaX1D3Ii+jc1rJ2KuxV2KuxV2KuxV2KuxV2KsR&#xA;85WfkrWxHa65ZG++rmsZWqlQwBIDBkqrU3HTCNScZ9JIPkiOXYkcuX2WjptP8rX+grp7wpBp9xC9&#xA;jHCAI2WJ1KNGKVoCp+WVxzURO+GV7FujYJA3pjfkX8kfLPlLXLrWoppb29nX0oHmCgxRbbAjfl8I&#xA;+MUzN1OsyZoiMq4R3bfj9CZ5iWffU7Y28ls0YaCUMJI2qwYP9oGtetcxIxA5NUpE80m8teQ/Kvlu&#xA;4urnR7Fbe4vD++mLM7la1CBnJIUU6DLsmac64iTSykTuU/ypD5X/AOc1DTVPKn/GC8/4nDm67JO0&#xA;vggvmrlm34mKrFe3cKlIZ5IkatVRmUHkOJ2B7rtlUscJGyASyEyORTPQPLkmrrLKuo6dY+g6KU1C&#xA;5S3L8q7qG+0BT4sGTJXQ/Bih9WS40vVWgjubeWWEL/pNhIJYW9RA9BIPtUDcSPmMrERKNEbeaeM3&#xA;YQNze3FxQStVV+yihUQfJFAUfdkgAAiUiVDFi+/P+cdf/JL+WP8AjBN/1Ey5z+r/AL0tg5JF/wA5&#xA;YH/kENx/zG2v/Ejl3Zp/e/BS+JeWdFxMXVwcS2j9KsrjVrhbL67BapGjOj3s4hhHED4Qz/CGbsMr&#xA;lIR3pNlX1zQrjQZICup2N40jFlbTbpbjg0fEguU+z9r4fkcrEhMHY/FFkJRPPNPK0sztJK32ncli&#xA;e25OEAAUEEk7lYzMxqxJPifbFD60/wCcLP8AlGPMn/MbD/yazUdpfUGcX0bmtZOxV2KuxV2KuxV2&#xA;KuxV2KrJ4zJDJGDxLqVB8KimAjZUoW7NgVglteRRVVZFA+IAU6nCTFxIHJEUY2v1NBqFkscdszPI&#xA;QVcjjwNPtV9sBII7wWzJEnkKkCE2UEKATUgUrhDeW8VdirsVYh58/KfyT57ms5fMlnJdPYK6WxSa&#xA;WHiJSpavpstfsDrl+HUTx/SeaKYp/wBCtfkx/wBWmf8A6TLn/mvLv5Qy9/2LTv8AoVn8mP8Aq0z/&#xA;APSZc/8ANeP5/L3rTv8AoVn8mP8Aq0z/APSZc/8ANeD8/l71p3/QrP5Mf9Wmf/pMuf8AmvH8/l71&#xA;4Q7/AKFY/Jj/AKtM/wD0mXP/ADXj+ey968Ia/wChWPyX/wCrTP8A9Jlz/wA14Pz2XvXhD0fyx5a0&#xA;jyzoVpoWjxGHTbJWS3iZ2kIDOXNWclj8THrmNOZkbPNKH85eS/L/AJx0RtF16BrjT3kSVo0keI84&#xA;zVTyQqcliyygbjzVgP8A0K1+TH/Vpn/6TLn/AJrzJ/lDL3/Yinf9Ctfkx/1aZ/8ApMuf+a8f5Qy9&#xA;/wBi07/oVn8mP+rTP/0mXP8AzXg/P5e9ad/0Kz+TH/Vpn/6TLn/mvH8/l714Q7/oVj8mP+rTP/0m&#xA;XP8AzXj+ey968Id/0Kx+S/8A1aZ/+ky5/wCa8H57L3rwhmfkT8tvKXkW0urTy3avawXkiy3CvLJM&#xA;S6rxBrIWptlOXNKZ9SgMnypLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVfMf/OVPmTX9K846&#xA;TDpup3djE+nB3jtp5IlLevIORCMoJoM7H2cxY5YpcUQfV1APQN2Pk8UPnzzp/wBTBqX/AEmT/wDN&#xA;edEdPg/mQ/0obNlN/PnnX/qYNS/6TJ/+a8pnp8P8yPyDE0ov5887/wDUw6n/ANJlx/zXmLPT4v5s&#xA;fkGBUW8++eP+pi1P/pMuP+a8xp4Mf82PyDAqTefvPP8A1MWqf9Jtx/zXmNLBj/mj5MCpnz956/6m&#xA;PVP+k24/5ryk4YfzR8mL7z/KS6ubv8sfK9zdTPPcTabbPLNKxd3YxglmZqkk++c1qRWSVd7MMa/5&#xA;yS1PUNN/LGe50+6ms7gXduomgkaJ6FjUckIO+bTsGEZakCQBFHmzhzfJX+PPOn/Uwal/0lz/APNe&#xA;d1+XwfzIf6UN+ypb+cvPFw0lPMOpKsSNLI31yfZVH+v1J2GU5MGEfwR/0oYmkG3nzzuTQeYdTr/z&#xA;GXH/ADXmPPT4v5kfkGJWXPnXz9A3GTzBqa13Ui9nKsK0qrB6EVHUZiHFiPKMfkGMhSGbz755/wCp&#xA;i1P/AKTbj/mvKJYMf80fINZU28/eev8AqY9U/wCk24/5ryiWGH80fJi+of8AnELW9a1by55gk1S/&#xA;ub+SK8iWN7qaSYqDFUhTIWoM0naUQJChWyQ8X/MTzr5ut/zB8z28GuahFBDq19HFEl1MqIi3LhVV&#xA;Q1AABQAZ2+gwYTggTCN8Eeg7nJjVMdPnzzr/ANTBqX/SZP8A815ky0+H+ZH/AEoTspP5887f9TDq&#xA;X/SZP/zXmPPT4f5kfkGJpoec/P8AJE0sevaoyJXkReT12FSac60A6nt3zDyYsINcMfkGPChG8++e&#xA;f+pi1P8A6TLj/mvKJYMf82PyDWVNvP3nr/qY9U/6Tbj/AJrzHlhx/wA0fJiWQ/lr53853P5j+VLe&#xA;41/UZrebWNPjmhku52R0a6jDKylyCCDQg5i6jFAQlsOR6MX35nNM3Yq7FXYq7FXYq7FXYq7FXyb/&#xA;AM5gNTzxov8A2zB/1ES513s9KsUv636A2QLwbmSaDcnoM35yMrRkuk3KNLEXjNzAC09sCS6BetTT&#xA;gadwrE/jmH+cjIA78J5Hv/T9jM4z8Qh4bVJVZCXWYbqeIMdP8o1HHfvkZZJE+kWPtYRFjzU59MnS&#xA;JZVeOQMaBEb4/wDgTQ4JRN0iWMpexzFkWgqZOUkofob+TX/kqPKf/bLtf+TYzmNT/eS97IMT/wCc&#xA;pjT8prg/8vtt/wASObHsM1qB7izjzfGXqZ23iNlvRPy11a2s9E1NxZwXFxC/OZpFiLPbyRlGjJlj&#xA;m+EHcAAbnevbAzAnKCT6SKG5+q75DvHXyc3Tw4oS8mAtMsmoz3McYhRXeZI4vsxkt+7C8iTxDFR8&#xA;slmn6acG97ZofKFj/h7TJZpEt5r0OE6lXkVqD1UdqDkNw6Mrca0DnbNcNRU5Df0+X3V9v20HLlpy&#xA;IiurCtc0SfTJzHIyMCokjeN1ljkjLFRJG67MpZT1oRmTIAgkdOYLhThSTk5iktL6y/5wu/5RjzH/&#xA;AMxsP/JrNH2n9Q9yYvBfzOen5lebP+2zqH/UVJnY6Gf7iH9SP3N4OzH7S2u724S3tIXnnfZIo1LM&#xA;foGX5M4iLJoM4gyNDcpxe2N7okaW+pWclpNG3J3VY5BKTvwkL8uJHSm6/wCTWpODkjKR4gbjLlz2&#xA;91c/sPn0F8oSxgcQr5b/AI/Ab0KK0uNUQPZiWF9o7USug9WfeMrKp5KU+D7soyGomRP0jn7ubDHD&#xA;jltt+1frPlCf6m+oQxyJGpfnFcKI7lRGAZG4/Cs6pUcnQBu5XDHJEjnY/nDcfj8bsMmOjv8Aj3sP&#xA;mRo3KEgkdx0IIqMhliYmi4shRpkf5W/+TP8AKH/bb07/AKi48wtT/dy9x+5i/RfOYZuxV2KuxV2K&#xA;uxV2KuxV2Kvkj/nMVqeedF/7Zg/6iJc6bsOVY5f1v0JBeI2OlXF5CZY5I1UOUYMWJWgryfircE/y&#xA;moPuObTLqxA0Qfx958g3QxmXJOdOiayEB8yG6TTrqFWtDF8SlduD1NQ0a9KLUj2O2Y+pgeAzxCPE&#xA;D+Pc34THlkJ4fL8cmRQpoFnKJba4tr22C8jMg9UIj7Ult2KttQElSW7HMI5cuaFASh5ctx3TH3HZ&#xA;zMZhjNxIkPn8x+CletXJtbf6prl0tvYwzyT2Wj26VuB6m7CNZavbRPsf3reDBHzYjNGAFWZ0Lv8A&#xA;TWxPu+brMsxxH9DFr17nXbuWeysEt44I6tFERXgCTzcniGY134gDsFAAGYs8wjXEfLvaalM7BJic&#xA;SWp+h35Nf+So8p/9su1/5NjOa1P95L3swxH/AJyrNPykuP8AmNtf+JHM3sc1nHuLIPiznnW8bK2Z&#xA;eRPLV95jDWqt9VtICZJJ45PTllG/ICOhM4Sm9KcQdzuM1et1RxG4k8R6fjl9tuXpcfiGiaH4+afe&#xA;adG0rSA8FppkL20tGmu2JaVj1p8PExAHw6/fkNHPLIXPdz8+GMNhEUev45MU1DU72e2S0F3Jc2qU&#xA;MVtOeTxUFAEJ2pTb4afLN7iwQHqhz7uR/wCPfe4U/I39/wC1KtZd7y49KyjeWOGNIkVFY/BCoDvx&#xA;pUB5CX37nNfnnwg8RriP4Dhzs8klljkikaORSkimjIwIIPgQcxOK+TQQRsX1j/zhb/yjHmP/AJjY&#xA;f+TWabtP6h7kxfP35oN/yEvzb/22tR/6ipM6bST/AHMP6o+5sBTTyN5z1Py/GtkmnVivxxLrD8c4&#xA;rzHx/C+22/IqB+zX4s1+t08MsuMyvh6E8vx9vf0c3T55Qrb7GdXugXR057zU3jvXlQSW9hFJwtGV&#xA;tuXMFhID48if2S7DMKOfJOQEeQ/H4+4Ozjj4o8RPF+Px+svOby4ihvTNHGNNvI3Dp6SkRclNVrEa&#xA;8aU2K/cc6HBjjOJhPax+L/W4UqBv6T9nyVobzU9dbUTcvLdXkluxghiBZeC8XlZKbDaFVYDcqTkT&#xA;pY4IRxwFRv3/ANvP4OPllKZ82EXVpfR1mmt5Yo2OzOjKvxbgVIzDnkBke/ucKUZcyE+/Kz/yZ/lD&#xA;/tt6d/1Fx5jaj+7l7i1h+jGcy2OxV2KuxV2KuxV2KuxV2KvkX/nMk089aJ/2yx/1ES50PZBrGfeh&#xA;4ByzbcS2mmleZ9U02FrVSl1psjcpdNugZIGPQsoqGjen7cZVvfK7INjmzjlI26Iv/FkFs4/Q1j+i&#xA;i7Bprv1BPdICfiW3kZUWH/JYL6n+XSowZckpChsE+IL7gl97dabb31veaM8tVCs/1oBpBMv2m2BW&#xA;jdRvWvhtmFjhMxMclb93d+PwUTlESBh9qE1DUp750MoCiMFUUFmoCan4nZ3O57tlkICPJjkyGXNB&#xA;nCWp+h/5M/8AkqPKX/bLtf8Ak2M5vU/3kve2Bh//ADlcaflFcf8AMba/8SOZfZZ/ffApfGmnamLN&#xA;pCYhJ6gA5g8ZE4mvwOK8a9D4jOgyw4635fL4s4ZOFVj1yUTrI8YCxv6lv6BMMkDcuQMEi/ElG3A3&#xA;Fd6VyueAEbHf537/AMWk5bO4/Z7mYWXnma8gaLU2fUIiPjvYFVb1ABUtcQVCTjbeRGDd2boMu0es&#xA;OA1Ien8dfx5Odh1kgK+ofb+Pclk9z5fjle5swmpyCh5j1beyirUgytIscjNt/doAT2au2Z+s7TxA&#xA;/uY+r8cg05cgkbiPj0SPUNekklLxFHnaqzSrEiQum1IxBTgVUioZhyPU75ppiWQ3M3+O9xpZABQ3&#xA;Pf8AsQOpS2kzxywyyyzOo+sGZVFGAAovEnbsB2FPkIY+IbEBrySB3s2+qP8AnCz/AJRjzJ/zGw/8&#xA;ms1faX1D3Ii+evzRb/kJvm7/ALbWo/8AUXJm+0sv3Uf6o+5NpQ/mDVGcuZgHY8pWCIDI3ErWTb46&#xA;qxB5VrvXqcAwQAqtvu93d8G3x5JvoHnK904NDazLbwyNzl0+bnJYSP8AzBQecDmlOcZ9vhXKeCWO&#xA;XFHf7/2/jm2YtQYnY1937E21TVvL+oqHvXksJyORtpUad3HQG1mhX05Qf8rhv3PXN5h7VwSxnxI+&#xA;ofj4OXl1YkPUPV+OSYeStbitdQvbC2RNNguLOSM+qxe45F04yTsPhiAoaIN6n4uQAOayWolnyRIH&#xA;oiboC7918z+pjpoiUiJbbcv1sS8w6ymoaxqH6SmkjjKosAt4kHMRqBGJGJDMqgbcifmMp1gIykxo&#xA;7/inEyTHEQSad+Vn/kz/ACh/229O/wCouPMfUf3cvcXFD9Gc5tsdirsVdirsVdirsVdirsVfIX/O&#xA;Zhp570T/ALZY/wCoiXN52WfQfexL5/5ZtOJDVcHEqeWp8j/VYvrf6T+t+mfW9L6v6fq1248vi408&#xA;d8qkZ3tSoLWz5e9eP9B/W/q/D979d9Lnzqfs+ltx4064ImXVCW1w2hrIq/RD8mf/ACVHlL/tl2v/&#xA;ACbGc7qP7yXvbByYd/zlh/5KG4/5jbX/AIkcyezT+9+Cl8S8s6HiYtcsHEqYaFbabc33HUNTGkxI&#xA;vNLsxSTfGGFFCxfED1NfbK8kjWwtQUZ5qg0uBrYaf5hGuq3P1StvPbiI/DvSYLyL1NSPDfK8f9Xh&#xA;ZSmTzKQE5O2trAr61/5ws/5RjzJ/zGw/8ms1HaP1BnF87fmmf+Qneb/+23qP/UXJm405/dx/qj7k&#xA;MX5ZdxK6uC1ZpFpHk+3i9OHz2EVmY8VsLwBTQjkNtiwFNt9/CuYkiSbMPtDOOQjkWI299JBFJCVS&#xA;W3lKmSCQEqSteJqCrKRXqpGTyYxI31YxnXuU7q7luGUvQLGvCNFFFVASQoH04xiAs5mXNkX5V/8A&#xA;kz/KH/bb07/qLjyvP/dy9xYB+jWc42uxV2KuxV2KuxV2KuxV2KpF5g8h+TPMVzHda9otnqdzCnpR&#xA;S3UKSMqVLcQWB2qScshmnHaJIVKv+VNflT/1Kel/9Isf9Mn+Zyfziinf8qa/Kj/qU9L/AOkWP+mP&#xA;5nJ/OK07/lTX5Uf9Snpf/SLH/TH8zk/nFad/ypr8qP8AqU9L/wCkWP8Apj+ZyfzitO/5Uz+VH/Up&#xA;aX/0ix/0wfmcn84rTv8AlTP5Uf8AUpaX/wBIsf8ATH8xk/nFaDKtP0+x06xgsLCBLaytkWK3t4lC&#xA;oiKKKqqOgGVEkmylQ1zy/omvWB0/WrGHULFmVzbXCCSMsv2TxbaowwmYmwaVjn/Kmvyp/wCpT0v/&#xA;AKRY/wCmW/mcn84op3/Kmvyo/wCpT0v/AKRY/wCmP5nJ/OK07/lTX5Uf9Snpf/SLH/TH8zk/nFad&#xA;/wAqa/Kj/qU9L/6RY/6Y/mcn84rTv+VM/lR/1KWl/wDSLH/TB+ZyfzitO/5Uz+VH/UpaX/0ix/0x&#xA;/MZP5xWgnnl7yl5Z8twzQaDpdtpkM7B5o7WNYg7AUBYKBU0yE8kpczaUqvfyn/LO+vJ7288sadcX&#xA;d1I81xPJbxs8kkjFndiRuWY1OTGoyAUJFaUP+VNflT/1Kel/9Isf9MP5nJ/OKKd/ypr8qP8AqU9L&#xA;/wCkWP8Apj+ZyfzitO/5U1+VH/Up6X/0ix/0x/M5P5xWnf8AKmfyo/6lLS/+kWP+mP5nJ/OK07/l&#xA;TP5Uf9Slpf8A0ix/0wfmMn84rStZflN+WdjeQXtn5Y023u7WRJraeO3jV45I2DI6kDYqwqMBzzIo&#xA;krTLMqS7FXYq7FXYq7FXYq7FXYq8P/Pn85vNvkTzHp+naKlo1vdWf1iQ3MTSNz9V02Kum1FGdJ2L&#xA;2Vh1OMyyXYlWx8myEQXmR/5ys/Mz/fWm/wDSPJ/1VzdH2b0v9L5/sZ+GFjf85XfmcOkWm/8ASPJ/&#xA;1VyqXs9ph/O+f7EGAUm/5yz/ADRHSLTP+keT/qrmPLsLTj+d8/2MTEKTf85bfmmP91aZ/wBI8n/V&#xA;XKJdjYB/O+f7GJCw/wDOXP5qD/dWl/8ASPJ/1VymXZWId7FYf+cvPzW/3zpf/SNJ/wBVsrPZmLzY&#xA;2+sPy916+8weRtC1u/CC81GyhubgRAqnORAzcQS1B9OaTNARmQOhZJJ+dPnbWPJnkeXW9IWFrxLi&#xA;GICdS6cZCQdgy/rzO7J0kNRnEJ3w0eTKAsvn3/oaz8zP99ab/wBI8n/VXOr/ANDel/pfP9jd4YWt&#xA;/wA5XfmaOkWm/wDSPJ/1VyEvZ3TD+d8/2IOMKTf85Y/mgOkWmf8ASPJ/1VyiXYOnH875/sYGIWzf&#xA;85YfmtEELwaavNeaVt5N1JIB/vfbMc9jYOnF8/2MSFE/85cfmoP91aZ/0jyf9Vcpl2ThHf8ANiVh&#xA;/wCcu/zVH+6tL/6RpP8AqrlR7MxebG3un/OO35p+ZvzC0bV7zXltlmsbmOGH6rG0Y4vHyPIMz1Nc&#xA;1et08cRAikF63mEl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvk//nL5qed9G/7Zg/6iJc7D&#xA;2clWKX9b9AbIF4MZM6E5GdtyRzrEsrRsIm2WQghSd+h6dspOYE1e6kGrQzNlMpMCVgV3JCKWIBJA&#xA;Fdh1O2Ys5gc2Cpf6XqFlHFJdxeiJhyjVivMjcVKV5Dp3GYcdRCZIibpZ45R5oEnElrfoZ+TX/kqP&#xA;Kf8A2y7X/k2M5fU/3kveyDFP+cpTT8p7g/8AL5bf8SObLsE1qR7izhzfGfqZ3HiN1rWkyEsiLROk&#xA;6ZfanerBaW0t1xIeZYlJ4xg/EzHoo9zmNlygdaQATyR/nny9rGjawyX1uyW7BFsrkL+6lhRFVCjC&#xA;qk8QOVDscxMc7jbCQIYyxyuRaypk5TIsX1j/AM4Xf8ox5j/5jYf+TWaPtT6h7kxfRmatk7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXyV/zmI1PPOi/9swf9REudR2FKscv636GQLw2HT76WITJH&#xA;SNvsu7KgahpVeZFRXbbvQd828tVAGid20QJZHp+uXOp6mmm6hCIXnDR3Z+IFgkZIQRtshalOm37I&#xA;UjMDHogP7s31H9vX8Xbl4splLgIq+f4/HkyiHTtDWAqgjtqAgKgCHbpU1HL6TX3xxafKJWbk50ME&#xA;AGI6pLBbmUpHHE8QNJfSRmWuxpyH2j2PUHoRm61WixzwmR2IF86vyNd/47nDziIB6KJTy3LZzTyS&#xA;LNIwojSzUcUagaQnlMzBeyIBtsD+1yZOYSAGw67fd0+ZJ/RRw4jG7s+f4s/L4d8Uufq4nkFuWaCp&#xA;9MvQNx7VpmaCa35uBOr25P0J/Jr/AMlR5T/7Zdr/AMmxnN6n+8l70hiX/OVRp+Utwf8Al9tf+JHM&#xA;7sY1nHuLIPi3nnX8bO2i+RM0W9D/AC3gc6fq9hfW8iRSC3uY+J9GVuBdQQWUiSMVrxO1aEb5iQ1N&#xA;aiEo1LmO+uXydho8JlYPvW/mL5kMujQaULXgqCKMTyMrtxiqRxUA8CSTU8jttt3zNSJRHq5lq1fF&#xA;EUXmhOa4l16wnKyWL6z/AOcLf+UY8x/8xsP/ACazSdp/UPcyi+jM1jJ2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2Kvkb/AJzINPPWif8AbLH/AFES50XY8qxn3q8Vs/MuoWsTRjjJWP0Q7GRWCAUC&#xA;kxsnMAbAPUAbdMzcmlhI35305/EGvhTdDOYpjcajo+nD14Z/0tqNzFGJOSCOCCir8AFKnjSilCtP&#xA;amY2M5py/wBTjEmqPqPn+u7tuOaMd/qkR8lLTL3zJqiyiGRHSAL6sstNuWy1I+JixHv75tM3a5x1&#xA;dWfJOPPlntaV3F3Mt3LbaqrP6blJURgrIymhK0qpI98kNd4g/eeqJ7tq8/7WiWQ8RGRFR6Ve20ba&#xA;xoky31tbqWmZVHrQKwoTLC1WUb/bWo9812p8O+EnY/BTiMfXA8QHzHvCRTSvNK8r05yMWagCirGp&#xA;oFAA+jByFOLI2bfoZ+TP/kqPKX/bLtf+TYzm9T/eS97MMQ/5ytNPyjuP+Y21/wCJHMzso1m+BS+K&#xA;eWdPxraYafBYSwM8jB7kNQW7SrbqEoPjEjgqx6jjtTr8XbHy5Zg0Pp76v7Px8GyAB58/knnl7XI9&#xA;L1Ce7mu2nsAqQRvMWILbP6agipVQCCaAfKoyzS5oQJjL0GQO46ebmafUDHIm7jyQXm7V4NYmkubQ&#xA;L6MbgsifsB68fDbtXx+eWZs0eGMBLjIHPvaNVl8QkjkEo1HSXsovUaeOQcgo4E/FVeXOMkfGnbkO&#xA;+a7Hn4+n48/Noni4RdpaTkyWl9af84Wf8ox5k/5jYf8Ak1mm7S+oe5lF9G5rWTsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVfIf8AzmWaeetE/wC2WP8AqIlze9lH0H3oL5/5ZteJFtcsHEi080ny&#xA;5qF1bLe2+p6fac1eizX8FvMApKsCjOrjl223GUZMg5EE/BIJHJLdW0yTTbs2sk9vcsFDeraTJcRf&#xA;F25xllr4jCJ2GKCWR0rxYrUFTQ0qD1GAra3Ah+iH5M/+So8pf9su1/5NjOc1H95L3tgYd/zlgafl&#xA;Dcf8xtr/AMSOZPZp/e/BS+JuWdHxItrlg4kWmOhW+oX94NNs1gla63aG6ligib0wWBMszxKhArQh&#xA;we3fKMwiRZ6MoypU1/TtT0opZ3UVtbxy/vVitJ4blSVJSrPFJOajegZvl1yGPh5hMpmq5BJicsJa&#xA;2sih9a/84Wf8ox5k/wCY2H/k1mo7S+oM4vo3NaydirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;r5Z/5yz/AMI/400f9NfpD6x+jR6f1L0eHD15PtervWtc3HZ3HwGq5sS8O/5Bl/2u/wDp0zYfvPL7&#xA;UNf8gx/7Xf8A06YP3nl9qu/5Bj/2u/8Ap0wfvPL7UNf8gx/7Xf8A06YP3nkrX/IMP+13/wBOmD95&#xA;5K7/AJBh/wBrv/p0wfvPJD7u/Kb6n/yrPyx9S9T6p+jbf0PW4+pw9MU58fhr8s0Oe+M33tgYp/zk&#xA;3+h/+VWT/pf6x9T+uW1fqnD1eXI0/vPhp45foL8TZS+P/wDkGX/a7/6dM3n7zy+1i7/kGP8A2u/+&#xA;nTH955farX/IMf8Atd/9OmD955K1/wAgx/7Xf/Tpkf3nkhr/AJBh/wBrv/p0wfvPJXf8gw/7Xf8A&#xA;06YP3nkh9Pf84jf4c/w5r/6E+uel9ci9b676XLl6W3H0tqU8c1ev4uIWzi98zAZOxV2KuxV2KuxV&#xA;2KuxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:a6b4b5aa-1e71-ce44-a3fe-d15bc38a38a6</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:a6b4b5aa-1e71-ce44-a3fe-d15bc38a38a6</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:3846131b-4365-ba4b-8eb7-cd52e77d4bab</stRef:instanceID>
            <stRef:documentID>xmp.did:3846131b-4365-ba4b-8eb7-cd52e77d4bab</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a6b4b5aa-1e71-ce44-a3fe-d15bc38a38a6</stEvt:instanceID>
                  <stEvt:when>2018-11-07T15:51:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=248 G=53 B=158</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>248</xmpG:red>
                           <xmpG:green>53</xmpG:green>
                           <xmpG:blue>158</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
600 450 li
600 0 li
cp
clp
600 450 mo
.000300408 450 li
.000300408 .000300408 li
600 .000300408 li
600 450 li
305.884 361.27 mo
307.121 361.985 308.741 362.335 310.429 362.335 cv
312.428 362.335 314.523 361.843 316.194 360.878 cv
428.557 295.046 li
430.312 294.033 431.318 292.624 431.318 291.179 cv
431.318 289.921 430.577 288.8 429.23 288.024 cv
405.595 274.378 li
407.167 273.47 li
408.303 272.815 408.955 272 409.117 271.196 cv
409.122 271.203 li
410.001 267.023 li
410.001 267.023 li
410.167 266.199 409.815 265.386 408.923 264.762 cv
409.086 264.857 li
409.742 265.235 410.416 265.414 411.064 265.414 cv
411.47 265.414 411.866 265.344 412.24 265.207 cv
412.24 265.207 li
414.785 264.313 li
414.778 264.311 li
415.821 263.897 416.679 262.965 417.093 261.62 cv
449.626 155.988 li
450.432 153.369 449.251 150.187 446.99 148.881 cv
303.127 65.8225 li
302.471 65.4437 301.797 65.2646 301.15 65.2646 cv
300.821 65.2646 300.499 65.3109 300.191 65.4007 cv
300.19 65.4007 li
300.177 65.4055 li
297.639 66.2895 li
296.505 66.6589 295.562 67.6265 295.122 69.0589 cv
262.587 174.69 li
261.821 177.18 262.851 180.179 264.898 181.592 cv
264.19 181.183 li
263.236 180.632 261.959 180.362 260.622 180.362 cv
259.008 180.362 257.305 180.756 255.976 181.524 cv
163.28 235.041 li
161.745 235.928 161.074 237.101 161.317 238.151 cv
162.175 242.433 li
162.179 242.431 li
162.293 243.076 162.746 243.682 163.557 244.151 cv
165.39 245.209 li
141.719 259.077 li
139.965 260.09 138.959 261.5 138.959 262.946 cv
138.959 264.203 139.701 265.324 141.047 266.101 cv
305.885 361.27 li
305.884 361.27 li
162.854 176.782 mo
145.39 186.865 li
144.15 187.58 143.41 188.862 143.41 190.293 cv
143.41 191.725 144.15 193.006 145.39 193.722 cv
173.985 210.232 li
176.394 211.623 179.096 212.319 181.797 212.319 cv
184.499 212.319 187.202 211.623 189.611 210.232 cv
218.204 193.723 li
219.445 193.007 220.185 191.726 220.185 190.294 cv
220.185 188.863 219.445 187.581 218.204 186.865 cv
201.993 177.505 li
204.374 175.356 205.564 172.894 205.564 170.432 cv
209.737 121.858 li
210.205 116.406 li
211.872 114.078 212.611 111.581 212.423 109.103 cv
212.426 109.107 li
212.421 109.058 li
212.413 108.975 li
211.98 104.597 li
212.05 101.904 211.01 99.1983 208.856 96.7248 cv
207.489 95.1315 205.657 93.6376 203.359 92.3108 cv
201.387 91.1721 199.202 90.2312 196.878 89.4879 cv
195.071 88.9021 193.18 88.4346 191.24 88.0858 cv
184.713 74.9259 175.913 69.1547 180.24 56.6301 cv
180.24 56.6301 172.456 68.2688 179.73 84.0149 cv
180.286 85.219 180.809 86.321 181.301 87.3318 cv
174.386 87.4942 167.571 89.0706 162.262 92.0734 cv
156.182 95.5131 153.302 100.133 153.634 104.71 cv
153.207 108.738 li
153.194 108.864 153.177 108.988 153.167 109.115 cv
153.16 109.194 li
153.164 109.19 li
153.001 111.638 153.741 114.102 155.386 116.402 cv
160.028 170.433 li
160.028 172.622 160.97 174.812 162.854 176.782 cv
188.49 67.2972 mo
188.49 67.2972 li
188.49 67.2972 li
185.573 57.4641 194.49 37.5471 194.49 37.5471 cv
184.407 48.3802 186.034 59.1301 186.034 59.1301 cv
186.13 61.0472 188.49 67.2972 188.49 67.2972 cv
310.409 360.467 mo
309.047 360.467 307.756 360.202 306.816 359.658 cv
306.815 359.658 li
141.977 264.49 li
141.45 264.185 140.821 263.669 140.821 262.945 cv
140.821 262.195 141.504 261.351 142.656 260.686 cv
167.244 246.28 li
176.41 251.571 li
163.28 259.152 li
160.849 260.555 160.584 262.678 162.69 263.894 cv
307.121 347.281 li
308.074 347.831 309.35 348.101 310.687 348.101 cv
312.301 348.101 314.004 347.708 315.333 346.94 cv
408.03 293.422 li
410.461 292.018 410.725 289.895 408.619 288.68 cv
394.721 280.656 li
403.735 275.452 li
428.3 289.635 li
428.828 289.94 429.456 290.455 429.456 291.179 cv
429.456 291.93 428.773 292.773 427.621 293.438 cv
315.257 359.27 li
313.89 360.06 312.096 360.467 310.409 360.467 cv
181.798 210.458 mo
179.418 210.458 177.038 209.845 174.914 208.62 cv
146.32 192.111 li
145.663 191.731 145.271 191.052 145.271 190.293 cv
145.271 189.534 145.663 188.856 146.32 188.476 cv
164.296 178.097 li
165.007 178.668 165.807 179.213 166.697 179.727 cv
167.819 180.375 169.029 180.941 170.305 181.425 cv
169.414 181.79 168.564 182.203 167.765 182.664 cv
160.094 187.092 160.095 194.272 167.765 198.7 cv
171.6 200.915 176.626 202.022 181.653 202.022 cv
186.679 202.022 191.706 200.915 195.541 198.7 cv
203.211 194.273 203.21 187.093 195.54 182.664 cv
195.053 182.383 194.545 182.119 194.021 181.873 cv
195.573 181.365 197.044 180.743 198.397 180.007 cv
198.4 180.006 198.402 180.005 198.404 180.003 cv
198.416 179.997 198.427 179.991 198.439 179.984 cv
198.445 179.981 198.451 179.978 198.457 179.975 cv
198.466 179.97 198.476 179.964 198.486 179.959 cv
198.494 179.954 198.503 179.949 198.512 179.944 cv
198.519 179.94 198.525 179.937 198.532 179.933 cv
198.549 179.924 198.565 179.915 198.581 179.906 cv
198.581 179.906 li
198.598 179.896 198.616 179.887 198.633 179.877 cv
198.635 179.876 198.635 179.876 198.637 179.875 cv
198.652 179.866 198.668 179.858 198.683 179.849 cv
198.686 179.847 198.69 179.845 198.693 179.843 cv
198.707 179.836 198.72 179.828 198.734 179.82 cv
198.737 179.818 198.741 179.816 198.744 179.814 cv
198.758 179.807 198.771 179.799 198.784 179.792 cv
198.788 179.789 198.792 179.787 198.796 179.785 cv
198.809 179.777 198.823 179.77 198.836 179.762 cv
198.839 179.76 198.843 179.758 198.846 179.756 cv
198.863 179.747 198.879 179.737 198.896 179.728 cv
199.44 179.413 199.951 179.087 200.429 178.75 cv
217.275 188.477 li
217.931 188.857 218.324 189.535 218.324 190.294 cv
218.324 191.053 217.931 191.732 217.275 192.112 cv
188.681 208.62 li
186.558 209.845 184.178 210.458 181.798 210.458 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[796.433 0 0 798.007 66.1882 -102.14 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~c-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(e
c-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(e
c-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(e
c-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(ec-$(e
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8,E7s8,E7s8,E7s8,E7s8,E7s8,E7s8,E6s8,B5s8,B4s8,B3s8,?1s8,<0s85B0s85?-s8>E-s8GH+
s8GE(s8GB%s8G?"s8PE!s8PArs8PAps8PAms8P>js8P8fs8P5bs8P2^s8P,Zs8P&Vs8P#Rs8OuMs8OrI
s8OlCs8Oc;s8O]5s8OW/s8OQ(s8OK"s8OAos8O;hs8O/_s8O#Vs8NlNrr3ZHrr3K?rr3<5qu6g)p\t3q
p&>!no)A[kmeZtbm.:8YkjJKOjQQXEioU4@hr=\:gtr)3g=lT-f[p0(e^a^#e'\3rdEhjnd*2Ojc-$(e
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00396825 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[796.433 0 0 798.007 66.1882 -102.14 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~bfn>Wcd0tbd*U1fdaHUneC<%"f@S[-g"G*5gY:N>h;7&Ii8N\Tj5]4^k3(smlKdg'mHs?1nF?)?oCV_K
p@e7Uq>1!cr;HTmrVc]nrVc`prr2oss8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~b0%oNbfn>Wcd0tbdF$CkeCE.$f@S[.g=k<:h;7&IiSrnYjQ5OekNM0rm-a?3o(2MIq"agbrVliss8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rr2orrVc]nrVc]n
rVc]nrVc]nr;?Kjqtp9fqtp9fqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~zzzzzzzzzzzzzzzz!!!!"!WrT1#7(YE$k3^Y&J>cl'c%Q$(`=52*$$(B+<_pR,:"N\-7:/h-n-Sp.P!#
#/1iG+/h\k30ekF>1GgpG2)R6L2E!HP2`EZT3&ru[3]fDc4?P_h4Ztql5!M7s5X7S"5X7S"5X7S"5s[e
&5s[e&6:+"*6UO4.6psF277BX677BX67Rfj:7Rfj:7n6'>84Z9B84Z9B84Z9B8P)KF8P)KF8P)KF8P)K
F8P)KF8P)KF8P)KF~>
<~zzzzzzzzzzzzz!!!$#!<E3%!<E6'!WiH,"U52;#mq%K%1Wp]&ebrn'bqH!(Dn#/*$$(C+X/-W-7:2j.k
E8)0/,+91c70M3&s#]4?Ykm5XIh+77Kd<8P)NI9MJ8X:f("e;H$Ln<)lq!<``C+=^#$7>[:WA?=.&I?t
!MR@q0%[AS,RfBP;*oC2.O"Ci!s*DJjB2E,]f:EcQ2@F)uGFF`hhLF`hhLG'8%PGB\7TG^+IXG^+IXH$
O[\H$O[\H$O[\H$O[\H$O[\H$O[\~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
265.591 404.134 mo
266.224 404.134 li
266.661 404.134 266.954 404.035 267.103 403.838 cv
267.251 403.641 267.326 403.294 267.326 402.798 cv
267.326 402.544 267.314 402.344 267.292 402.198 cv
267.271 402.051 267.224 401.912 267.152 401.781 cv
267.079 401.651 266.968 401.558 266.818 401.503 cv
266.667 401.448 266.47 401.421 266.224 401.421 cv
265.591 401.421 li
265.591 404.134 li
cp
263.617 409.747 mo
263.617 400.032 li
266.652 400.032 li
268.339 400.032 269.183 400.962 269.183 402.822 cv
269.183 403.325 269.117 403.756 268.984 404.114 cv
268.851 404.471 268.66 404.75 268.41 404.951 cv
268.16 405.153 267.876 405.297 267.56 405.385 cv
267.244 405.473 266.88 405.517 266.47 405.517 cv
265.591 405.517 li
265.591 409.747 li
263.617 409.747 li
cp
0 0 0 0 cmyk
f
272.136 404.169 mo
272.628 404.169 li
273.105 404.169 273.443 404.057 273.642 403.832 cv
273.841 403.608 273.941 403.249 273.941 402.757 cv
273.941 402.277 273.853 401.926 273.679 401.705 cv
273.505 401.485 273.193 401.374 272.74 401.374 cv
272.136 401.374 li
272.136 404.169 li
cp
270.161 409.747 mo
270.161 400.032 li
272.617 400.032 li
273.132 400.032 273.576 400.073 273.947 400.153 cv
274.318 400.233 274.646 400.368 274.933 400.56 cv
275.22 400.751 275.435 401.017 275.578 401.357 cv
275.72 401.697 275.792 402.115 275.792 402.611 cv
275.792 403.236 275.703 403.741 275.525 404.128 cv
275.347 404.515 275.042 404.808 274.609 405.007 cv
275.951 409.747 li
273.935 409.747 li
272.822 405.365 li
272.136 405.365 li
272.136 409.747 li
270.161 409.747 li
cp
f
279.443 408.379 mo
279.548 408.428 279.675 408.452 279.824 408.452 cv
279.972 408.452 280.099 408.428 280.206 408.379 cv
280.314 408.33 280.398 408.269 280.458 408.195 cv
280.519 408.12 280.568 408.023 280.603 407.902 cv
280.638 407.781 280.66 407.664 280.669 407.553 cv
280.679 407.442 280.685 407.308 280.685 407.152 cv
280.685 402.605 li
280.685 402.448 280.679 402.315 280.669 402.203 cv
280.66 402.092 280.638 401.978 280.603 401.861 cv
280.568 401.743 280.519 401.649 280.458 401.576 cv
280.398 401.504 280.314 401.445 280.206 401.398 cv
280.099 401.351 279.972 401.327 279.824 401.327 cv
279.675 401.327 279.548 401.351 279.443 401.398 cv
279.337 401.445 279.255 401.504 279.197 401.576 cv
279.138 401.649 279.091 401.744 279.058 401.864 cv
279.025 401.983 279.003 402.097 278.994 402.206 cv
278.984 402.316 278.98 402.448 278.98 402.605 cv
278.98 407.152 li
278.98 407.308 278.984 407.442 278.994 407.553 cv
279.003 407.664 279.025 407.781 279.058 407.902 cv
279.091 408.023 279.138 408.12 279.197 408.195 cv
279.255 408.269 279.337 408.33 279.443 408.379 cv
cp
279.824 409.876 mo
279.296 409.876 278.847 409.805 278.476 409.662 cv
278.105 409.52 277.808 409.307 277.587 409.024 cv
277.367 408.74 277.206 408.407 277.107 408.025 cv
277.007 407.642 276.958 407.191 276.958 406.671 cv
276.958 403.085 li
276.958 402.566 277.007 402.115 277.107 401.735 cv
277.206 401.354 277.367 401.025 277.587 400.747 cv
277.808 400.47 278.105 400.261 278.476 400.12 cv
278.847 399.98 279.296 399.909 279.824 399.909 cv
280.851 399.909 281.587 400.177 282.035 400.712 cv
282.482 401.247 282.706 402.038 282.706 403.085 cv
282.706 406.671 li
282.706 407.718 282.482 408.514 282.035 409.059 cv
281.587 409.604 280.851 409.876 279.824 409.876 cv
cp
f
286.492 409.882 mo
286.011 409.882 285.599 409.804 285.255 409.648 cv
284.911 409.491 284.638 409.263 284.435 408.962 cv
284.232 408.661 284.083 408.311 283.992 407.91 cv
283.9 407.51 283.855 407.044 283.855 406.513 cv
283.855 403.314 li
283.855 402.876 283.882 402.488 283.939 402.148 cv
283.995 401.808 284.093 401.494 284.23 401.207 cv
284.367 400.92 284.542 400.684 284.757 400.498 cv
284.972 400.313 285.242 400.168 285.568 400.065 cv
285.894 399.961 286.273 399.909 286.703 399.909 cv
287.21 399.909 287.646 399.973 288.009 400.1 cv
288.372 400.227 288.66 400.417 288.872 400.671 cv
289.085 400.925 289.24 401.222 289.335 401.562 cv
289.431 401.902 289.48 402.3 289.48 402.757 cv
289.48 403.308 li
287.564 403.308 li
287.564 402.652 li
287.564 402.472 287.56 402.325 287.552 402.212 cv
287.544 402.099 287.525 401.981 287.494 401.858 cv
287.462 401.735 287.417 401.638 287.359 401.568 cv
287.3 401.497 287.218 401.44 287.115 401.395 cv
287.011 401.35 286.884 401.327 286.732 401.327 cv
286.572 401.327 286.437 401.356 286.328 401.412 cv
286.218 401.469 286.134 401.537 286.076 401.617 cv
286.017 401.698 285.97 401.81 285.937 401.954 cv
285.904 402.099 285.884 402.228 285.878 402.341 cv
285.872 402.454 285.87 402.603 285.87 402.786 cv
285.87 406.999 li
285.87 407.472 285.935 407.831 286.064 408.077 cv
286.193 408.323 286.433 408.447 286.785 408.447 cv
287.14 408.447 287.386 408.315 287.525 408.051 cv
287.663 407.787 287.734 407.411 287.734 406.923 cv
287.734 405.968 li
286.779 405.968 li
286.779 404.749 li
289.515 404.749 li
289.515 409.747 li
288.22 409.747 li
288.091 408.857 li
287.798 409.54 287.265 409.882 286.492 409.882 cv
cp
f
292.826 404.169 mo
293.318 404.169 li
293.794 404.169 294.132 404.057 294.331 403.832 cv
294.531 403.608 294.63 403.249 294.63 402.757 cv
294.63 402.277 294.542 401.926 294.369 401.705 cv
294.195 401.485 293.882 401.374 293.429 401.374 cv
292.826 401.374 li
292.826 404.169 li
cp
290.851 409.747 mo
290.851 400.032 li
293.306 400.032 li
293.822 400.032 294.265 400.073 294.636 400.153 cv
295.007 400.233 295.335 400.368 295.622 400.56 cv
295.91 400.751 296.124 401.017 296.267 401.357 cv
296.41 401.697 296.482 402.115 296.482 402.611 cv
296.482 403.236 296.392 403.741 296.214 404.128 cv
296.036 404.515 295.732 404.808 295.298 405.007 cv
296.64 409.747 li
294.624 409.747 li
293.511 405.365 li
292.826 405.365 li
292.826 409.747 li
290.851 409.747 li
cp
f
299.728 406.372 mo
300.882 406.372 li
300.302 402.505 li
299.728 406.372 li
cp
297.314 409.747 mo
299.212 400.032 li
301.38 400.032 li
303.273 409.747 li
301.439 409.747 li
301.081 407.597 li
299.54 407.597 li
299.183 409.747 li
297.314 409.747 li
cp
f
304.21 409.747 mo
304.369 400.032 li
306.449 400.032 li
307.673 406.232 li
308.962 400.032 li
310.984 400.032 li
311.142 409.747 li
309.695 409.747 li
309.56 403.191 li
308.3 409.747 li
307.093 409.747 li
305.798 403.156 li
305.675 409.747 li
304.21 409.747 li
cp
f
312.536 409.747 mo
312.695 400.032 li
314.775 400.032 li
315.999 406.232 li
317.288 400.032 li
319.31 400.032 li
319.468 409.747 li
318.021 409.747 li
317.886 403.191 li
316.626 409.747 li
315.419 409.747 li
314.124 403.156 li
314.001 409.747 li
312.536 409.747 li
cp
f
320.921 409.747 mo
320.921 400.032 li
322.884 400.032 li
322.884 409.747 li
320.921 409.747 li
cp
f
324.349 409.747 mo
324.349 400.032 li
325.726 400.032 li
327.894 405.077 li
327.894 400.032 li
329.535 400.032 li
329.535 409.747 li
328.216 409.747 li
326.036 404.38 li
326.036 409.747 li
324.349 409.747 li
cp
f
333.466 409.882 mo
332.986 409.882 332.574 409.804 332.23 409.648 cv
331.886 409.491 331.613 409.263 331.41 408.962 cv
331.206 408.661 331.058 408.311 330.966 407.91 cv
330.874 407.51 330.829 407.044 330.829 406.513 cv
330.829 403.314 li
330.829 402.876 330.857 402.488 330.913 402.148 cv
330.97 401.808 331.068 401.494 331.204 401.207 cv
331.341 400.92 331.517 400.684 331.732 400.498 cv
331.947 400.313 332.216 400.168 332.542 400.065 cv
332.869 399.961 333.247 399.909 333.677 399.909 cv
334.185 399.909 334.62 399.973 334.984 400.1 cv
335.347 400.227 335.634 400.417 335.847 400.671 cv
336.06 400.925 336.214 401.222 336.31 401.562 cv
336.406 401.902 336.454 402.3 336.454 402.757 cv
336.454 403.308 li
334.538 403.308 li
334.538 402.652 li
334.538 402.472 334.535 402.325 334.527 402.212 cv
334.519 402.099 334.499 401.981 334.468 401.858 cv
334.437 401.735 334.392 401.638 334.333 401.568 cv
334.275 401.497 334.193 401.44 334.089 401.395 cv
333.986 401.35 333.859 401.327 333.706 401.327 cv
333.546 401.327 333.411 401.356 333.302 401.412 cv
333.193 401.469 333.109 401.537 333.05 401.617 cv
332.992 401.698 332.945 401.81 332.911 401.954 cv
332.878 402.099 332.859 402.228 332.853 402.341 cv
332.847 402.454 332.845 402.603 332.845 402.786 cv
332.845 406.999 li
332.845 407.472 332.91 407.831 333.038 408.077 cv
333.167 408.323 333.408 408.447 333.759 408.447 cv
334.115 408.447 334.361 408.315 334.499 408.051 cv
334.638 407.787 334.708 407.411 334.708 406.923 cv
334.708 405.968 li
333.753 405.968 li
333.753 404.749 li
336.49 404.749 li
336.49 409.747 li
335.195 409.747 li
335.066 408.857 li
334.773 409.54 334.24 409.882 333.466 409.882 cv
cp
f
497.365 299.188 mo
496.482 299.188 495.6 299.414 494.813 299.868 cv
483.077 306.645 li
482.941 306.724 482.92 306.849 482.92 306.915 cv
482.92 306.983 482.941 307.108 483.077 307.187 cv
494.814 313.963 li
494.815 313.963 li
496.387 314.871 498.342 314.871 499.916 313.963 cv
511.653 307.187 li
511.788 307.108 511.809 306.983 511.809 306.915 cv
511.809 306.849 511.788 306.724 511.653 306.645 cv
499.915 299.868 li
499.128 299.414 498.246 299.188 497.365 299.188 cv
cp
497.365 316.505 mo
496.161 316.505 494.957 316.195 493.883 315.574 cv
482.147 308.798 li
481.466 308.406 481.059 307.701 481.059 306.915 cv
481.059 306.13 481.466 305.426 482.147 305.033 cv
493.883 298.257 li
496.03 297.018 498.699 297.017 500.845 298.257 cv
512.582 305.033 li
513.263 305.426 513.67 306.13 513.67 306.915 cv
513.67 307.701 513.263 308.406 512.582 308.798 cv
500.846 315.574 li
499.773 316.195 498.569 316.505 497.365 316.505 cv
cp
level3{
gsave
clp
[32.6113 0 0 32.6113 481.059 306.916 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(NHDS(NZJS(3HDR(3ZJR(3lSS'mZJQ'mcGO'muPP'n2YQ'nDbR'nMeR'SDeR'SVkR'8DbP'8MbO'8_hO
'8hhN'9%qO'9.qN'9A%O'9J"M&s@tL&sS%L&X@qJ&XIqI&X\"I&Xe"H&Y"(H&=dtF&>"%F&"dqD&"mqC
&#+"C&#3tA&#<t@%]*n?%]<t?%]Et>%]X%>%]a%=%BNq;%BWn9%Bj":%'Wk7%'iq7$aWe4$a`h4$aie2
$F`b1$Fib0$Frb/$G&b.$G&\,$G/_,$GAb+$GJ_)$,8V'$,J\'$,S\&#fAS$#fAJ!#fJIu#KACs#KJCr
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[32.6113 0 0 32.6113 481.059 306.916 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GM5q'GM5q'GM5q'GD,n',)#m'+toj&eYfi&eYfi
&eYfi&eYfi&eYfi&eYfi&eYfi&eYcg&J5Te&J5Qc&.fBa&.fBa&.fBa&.fBa&.f?_%hB0]%hB-[%LrsY
%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU%1NaU%1NaU%1NaT$k*OQ$k*OQ$k*OP$O[=M$O[=L$47+I$47+I
$47+I#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#6tJ=#6tJ=#6tJ="pP89
~>
<~E,fl<EcZ;CF*)MHF`qqPGBe@WG^4R[H$Xd`H[L3hI=?WpIt3'"J:W9'JqJ]/KS>,6Knb>:L51P?Ll$tF
M2@+IMi3OQN/WaUNfK0]O,oBaOcbfiPEV5qPa%GuQ'IZ$Q^=),R$a;0R[T_8S"#q<SXl@DSt;RHT:_dL
TV8'RU8"BWUSFT[Unjf_V5C,fVl-GkW2ZbrWiE)"X/i;&XK8M*Xfeh1YHP.6Yd(I=ZEgdBZa7!F['[3J
[C*HO\$riU\@B&Y\[f8]\[f8]]"5Ja]=Y_g]tM+m^:q=q^V@S"_83t(_SX1,_SX1,_o'C0`5KX6`l?$<
~>
<~W2QYmVl$>gVPU,bUna][US=KVTqJ$MSt2FCSXc4?S=?";S!oe7R[KS3R@'A.Q^3r&Q'@MsPEM)kOcYZc
O,o<]NfK*YN/W[QMi3ILLkphAL5(D9KS4u1JqAQ)J:N-!IXZ]nI!g9fH?sj^G^+FVG'8"NFEDSFEcQ/>
E,]c7DJa6,Chmg$C2.KtBkV0mB4baeARo=]@q&nU@:3JM?=$oB>[1N<>?Y03=BAR)<`N*t;c?Um;Gg7d
:JX_\9he;T91qlL8P)HD7n6$<77BX66pj=.5sR\"5!D+m4?P\e3]]8]3&iiU2E!EL1G^dA0ek@8/hS_-
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
459.072 274.932 mo
461.988 276.614 465.607 276.614 468.523 274.932 cv
488.721 263.271 li
489.266 262.955 489.325 262.433 489.325 262.223 cv
489.325 262.013 489.266 261.491 488.721 261.176 cv
468.522 249.515 li
465.606 247.833 461.987 247.833 459.071 249.515 cv
438.873 261.176 li
438.328 261.491 438.269 262.013 438.269 262.223 cv
438.269 262.433 438.328 262.954 438.873 263.27 cv
459.072 274.932 li
cp
463.797 278.054 mo
461.841 278.054 459.886 277.551 458.142 276.543 cv
437.944 264.881 li
436.982 264.326 436.408 263.333 436.408 262.223 cv
436.408 261.113 436.982 260.119 437.944 259.565 cv
458.141 247.904 li
461.627 245.889 465.963 245.888 469.452 247.904 cv
489.651 259.565 li
490.612 260.119 491.186 261.113 491.186 262.222 cv
491.186 263.332 490.613 264.326 489.652 264.882 cv
469.453 276.543 li
467.709 277.55 465.752 278.054 463.797 278.054 cv
cp
level3{
gsave
clp
[54.7783 0 0 54.7783 436.408 262.223 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[54.7783 0 0 54.7783 436.408 262.223 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
102.574 266.606 mo
100.94 266.606 99.306 267.027 97.848 267.867 cv
77.6498 279.529 li
77.1049 279.844 77.0463 280.365 77.0463 280.575 cv
77.0463 280.785 77.1049 281.308 77.6508 281.623 cv
97.849 293.284 li
100.765 294.966 104.384 294.966 107.3 293.284 cv
127.497 281.623 li
128.043 281.308 128.102 280.786 128.102 280.576 cv
128.102 280.366 128.043 279.845 127.497 279.53 cv
107.299 267.867 li
105.841 267.027 104.207 266.606 102.574 266.606 cv
cp
102.575 296.406 mo
100.619 296.406 98.6635 295.904 96.9193 294.896 cv
76.7201 283.235 li
75.7582 282.679 75.1849 281.685 75.1849 280.574 cv
75.1849 279.465 75.7592 278.472 76.7201 277.917 cv
96.9183 266.256 li
100.406 264.24 104.742 264.24 108.229 266.256 cv
128.427 277.918 li
129.389 278.473 129.963 279.466 129.963 280.576 cv
129.963 281.687 129.389 282.68 128.427 283.235 cv
108.23 294.896 li
106.487 295.903 104.53 296.406 102.575 296.406 cv
cp
level3{
gsave
clp
[54.7783 0 0 54.7783 75.1849 280.575 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[54.7783 0 0 54.7783 75.1849 280.575 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
310.687 348.101 mo
309.35 348.101 308.074 347.831 307.121 347.281 cv
162.69 263.894 li
160.584 262.678 160.849 260.555 163.28 259.152 cv
176.41 251.571 li
306.969 326.949 li
307.916 327.496 309.183 327.764 310.51 327.764 cv
312.113 327.764 313.804 327.373 315.124 326.611 cv
394.721 280.656 li
408.619 288.68 li
410.725 289.895 410.461 292.018 408.03 293.422 cv
315.333 346.94 li
314.004 347.708 312.301 348.101 310.687 348.101 cv
level3{
gsave
clp
[796.433 0 0 798.007 66.1882 -102.14 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;i
s8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;i
s8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;i
s8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;is8O;i
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qX.p[qX.p[qX.p[qX.p[qX.p[qX.mZqX.mZqX.mZqX.mZqX.jYqX.jYqX.gXqX.gWqX.dVqX.dVqX7gU
qX7dTqsRjTqs[mSqs[jQqsdmQqsdgNr:3sNr:=!MrUj3Nrq9<Ms7]HLs7oNJs8#QIs8,TGs85WEs85TB
s85Q?s85N=s85K:s8>N8s8>H3s8GK1s8PN/s8PK+s8PE&s8PB"s8PAts8P>ps8P>ns8P;ks8P8gs8P2b
s8P/^s8P)Zs8P&Vs8P#Ss8OuOs8OrKs8OlFs8Of@s8Oc;s8O]5s8OW0s8OQ*s8ON&s8OK!s8OAos8O;i
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00396825 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[796.433 0 0 798.007 66.1882 -102.14 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqrVc]mr;?Kiqtp9fqtp9fqYL'bqYL'bqYL'bqYL'bqYL'b
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqrVc]mr;?Kjr;?Kiqtp9fqtp9f
qtp9fqtp9fqtp9eqYL'aq>'j]q"OOVp@e4Qp%A"Mo^h\Fo()AAnaZ/>nF5r:nF5r:n*f`6n*f`6mdBN2
mdBN2mdBN2mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
~>
<~+sJ6V,U=Z_-RU;j-n$Mn.4H_r.k</%/M/S-0/#"50JG491,:XA1c.'I2)R9M2E!KQ2`E]U3&ioY3]]>a
4$,Pe4Zttm5!D1q5<h@s5<hCu5X7S"5X7S#5s[e'6:4+.6psF377BX77Rfj;7n?0B8P)KG8kM]K91qoO
9MA,S9he>W:/4P[:JXb_:f'tc;,U:j;c?Uo<)lq!<`W7&='&I*=BJ[-=]np3>?b<9>[1N=?!U`A?=$rE
?XI/I?smAM?smAM@:<SQ@:<SQ@U`eU@U`eU@q0"Y@q0"Y@q0"Y@q0"YA7T4]A7T4]A7T4]A7T4]A7T4]
~>
<~,U=Z_-R^Dn.kE8)0/,+91G^jF2E*TU3]]>b4[)(q5sdq,77Kd<84cEH92&&T:/=\_;,L4i;cHas<`W:'
=BSg2>?kH>?=.)J@:<VS@q0%[AS,OeBPD0qCM[g(DJsH4EH6)@F*)MHF`qqPG^4R\H@(!dI!pElIXZ`q
It3'#JV&K+K7no3Knb>;LPLY@Ll$tGMMmCON/W^TNK&pXNfK-\O,o?_OH>QcOH>QcOcbcgP*1ukP*1uk
P*1ukPEV2oPEV2oPEV2oPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%Ds
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
310.429 362.335 mo
308.741 362.335 307.121 361.985 305.884 361.27 cv
305.885 361.27 li
141.047 266.101 li
139.701 265.324 138.959 264.203 138.959 262.946 cv
138.959 261.5 139.965 260.09 141.719 259.077 cv
165.39 245.209 li
167.244 246.28 li
142.656 260.686 li
141.504 261.351 140.821 262.195 140.821 262.945 cv
140.821 263.669 141.45 264.185 141.977 264.49 cv
306.815 359.658 li
306.816 359.658 li
307.756 360.202 309.047 360.467 310.409 360.467 cv
312.096 360.467 313.89 360.06 315.257 359.27 cv
427.621 293.438 li
428.773 292.773 429.456 291.93 429.456 291.179 cv
429.456 290.455 428.828 289.94 428.3 289.635 cv
403.735 275.452 li
405.595 274.378 li
429.23 288.024 li
430.577 288.8 431.318 289.921 431.318 291.179 cv
431.318 292.624 430.312 294.033 428.557 295.046 cv
316.194 360.878 li
314.523 361.843 312.428 362.335 310.429 362.335 cv
level3{
gsave
clp
[292.358 0 0 292.358 138.959 277.062 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[292.358 0 0 292.358 138.959 277.062 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
412.24 265.207 mo
412.24 265.207 li
413.322 264.81 414.216 263.861 414.641 262.478 cv
447.175 156.847 li
447.981 154.228 446.8 151.045 444.538 149.738 cv
300.676 66.68 li
300.02 66.3014 299.346 66.1221 298.698 66.1221 cv
298.334 66.1221 297.978 66.1791 297.639 66.2895 cv
300.177 65.4055 li
300.19 65.4007 li
300.191 65.4007 li
300.499 65.3109 300.821 65.2646 301.15 65.2646 cv
301.797 65.2646 302.471 65.4437 303.127 65.8225 cv
446.99 148.881 li
449.251 150.187 450.432 153.369 449.626 155.988 cv
417.093 261.62 li
416.679 262.965 415.821 263.897 414.778 264.311 cv
414.785 264.313 li
412.24 265.207 li
level3{
gsave
clp
[223.296 0 0 223.296 300.446 60.6073 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(NHDS(j)PR)0VSO)L7eP)gmtP*.F"M*.a%K*J9(H+,,7G+GY=E+H(@B+cUC?+cpF=,EcO:,a;U8-'hX5
-CId4.%Es2.%Wm..A8s+.AJj&.]"m#/#Ois/?'io/?9ck/Zfcg0!Gid0!Yc`0=1i^0t%&^1UmDb2n8ng
3P#1j4hC[o6+d0t7D/[$8\P0)9tpZ.:r!&2<PSS7=ht(<>f$I@@)DsE@`/6HB#O`MBuU,QCrZMUDoVhX
E5qqYF3"=]G/sX`GK9aaH,oscI)l9fIE2BgJB.]jK#dolK?+#mKua5oLWBGqLr]PrMT5\sMoYkuNlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^W?HU^<$?T^<$?T^<$?T]u^6S]u^6S]ZC-R]?($Q]?($Q]#apP\]FgO\]FgO\B+^N\&eUM[`JLL[`JLL
[E/CK[E/CK[)i:J[)i:JZcN1IZcN1IZH3(HZ,ltGYfQkFYfQkFYK6bEY/pYDXiUPCXN:GBXN:GBX2t>A
WlY5@WQ>,?W6##>Vo\o=VTAf<VT8`;V8rW:UrWN9UW<E8U<!<7U<!<7Tu[36TZ@*5T?%!4T#^m3S]Cd2
SB([1S&bR0R`GI/RE,@.R)f7-QcK.,QH0%+Q,iq*PfNh)PK3_(P/mV'OiRM&ON7D%O2h5#O2h5#NlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^W?HU^rZQV_8uZW_TDiY_TVu[_or)\`6A8^`QeG``m4Vba3O_caNsneajC(gajL.hb0p=jbgZUmc.)do
cd`!qd+/0sdF\F!dFeL"e(Od%eCss'e_L3*e_^?,fA?Q.g#)i1g>W)4gZ/>7h;nV:hrat>i91.@ip-RE
jQljHk3`3LkOJTQl1G#Wlh1;ZmJ6e`mem+dnc&RioD\dlp&>!np\t3pqYpU!r;Qm'rr33.s8NE4s8NN:
s8NW?s8N`Ds8NfHs8NlLs8NuRs8O)Ws8O2]s8O>es8ODis8FGns8FJss8FQ$s8FW)s8F].s8=`3s84`7
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7
s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7
s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7
s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.474206 .742063 .801587 ]
/Encode [0 1 1 0 0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[223.296 0 0 223.296 300.446 60.6073 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~()If))&X>2)]K_8*#ot?+!2RH+<VdL+X/-V,UF``-RU8i-n$Jm.4Qet.k<,$/1iG*/M8\10etOB2`NfZ
4[28$7S$-F:/=be<`iO0?=72NA7fIgCM[m,DfB`<F`qqPG^=^aI"$TsJqAW.KnbA<Ll%"HMiEaWO-#Ke
PEV5rQC!u,R[]h<StDXJTqS3UUnsobVl6PnWiN2%Xfek2Yd(I=ZEpmE['d<M\%&rX\[oAa]Y(qk]tV7u
`lZQUf\biYp&>!ks8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~E,p&CG'A4XI!pHoJV&N-KnbD@Mi<[WOHG]jQ'Rc)R[fq?TV8*TUnsrdW2ZetXKJb2Z*UgF[^WcV\[f;_
]=Y_g]tM.o^V@Ou^qde&_Sa:0`5T^8`l?$<`lH-?a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c3>a2c6@
a2c6@a2c6@a2c6@a2c6@a2c6@a2c9BaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HG
cI17shrjG)s8W-!rVZQiqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
~>
<~W2?>_SXc.9QBI>hMMHk:IscNaEc5c/An,4S>$"^%:.n,G5s74d1G:7+,Tn*G((q,d#mLJ4zzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzz!!j8\.Pin<1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$
G1c.$G1c.$G1c.$G~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!=08V.5j.F3&ilW3&ilW3&ilW3&ilW
3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
310.51 327.764 mo
309.183 327.764 307.916 327.496 306.969 326.949 cv
176.41 251.571 li
167.244 246.28 li
165.39 245.209 li
163.557 244.151 li
162.746 243.682 162.293 243.076 162.179 242.431 cv
162.175 242.433 li
161.317 238.151 li
161.459 238.76 161.908 239.328 162.675 239.775 cv
162.676 239.775 162.676 239.775 162.676 239.775 cv
162.681 239.778 162.685 239.781 162.69 239.783 cv
162.69 239.783 li
307.121 323.17 li
307.121 323.17 li
308.074 323.721 309.351 323.991 310.688 323.991 cv
310.688 323.991 li
310.688 323.991 li
312.283 323.991 313.963 323.607 315.285 322.858 cv
315.301 322.849 315.317 322.84 315.333 322.83 cv
315.333 322.83 li
408.03 269.312 li
408.03 269.312 li
408.036 269.308 408.042 269.304 408.048 269.301 cv
408.048 269.301 li
409.181 268.643 409.839 267.828 410.001 267.023 cv
410.001 267.023 li
409.122 271.203 li
409.117 271.196 li
408.955 272 408.303 272.815 407.167 273.47 cv
405.595 274.378 li
403.735 275.452 li
394.721 280.656 li
315.124 326.611 li
313.804 327.373 312.113 327.764 310.51 327.764 cv
level3{
gsave
clp
[244.172 0 0 244.172 163.873 239.93 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(NHDS(j)PR)0VSO)L7eP)gmtP*.F"M*.a%K*J9(H+,,7G+GY=E+H(@B+cUC?+cpF=,EcO:,a;U8-'hX5
-CId4.%Es2.%Wm..A8s+.AJj&.]"m#/#Ois/?'io/?9ck/Zfcg0!Gid0!Yc`0=1i^0t%&^1UmDb2n8ng
3P#1j4hC[o6+d0t7D/[$8\P0)9tpZ.:r!&2<PSS7=ht(<>f$I@@)DsE@`/6HB#O`MBuU,QCrZMUDoVhX
E5qqYF3"=]G/sX`GK9aaH,oscI)l9fIE2BgJB.]jK#dolK?+#mKua5oLWBGqLr]PrMT5\sMoYkuNlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^W?HU^<$?T^<$?T^<$?T]u^6S]u^6S]ZC-R]?($Q]?($Q]#apP\]FgO\]FgO\B+^N\&eUM[`JLL[`JLL
[E/CK[E/CK[)i:J[)i:JZcN1IZcN1IZH3(HZ,ltGYfQkFYfQkFYK6bEY/pYDXiUPCXN:GBXN:GBX2t>A
WlY5@WQ>,?W6##>Vo\o=VTAf<VT8`;V8rW:UrWN9UW<E8U<!<7U<!<7Tu[36TZ@*5T?%!4T#^m3S]Cd2
SB([1S&bR0R`GI/RE,@.R)f7-QcK.,QH0%+Q,iq*PfNh)PK3_(P/mV'OiRM&ON7D%O2h5#O2h5#NlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^W?HU^rZQV_8uZW_TDiY_TVu[_or)\`6A8^`QeG``m4Vba3O_caNsneajC(gajL.hb0p=jbgZUmc.)do
cd`!qd+/0sdF\F!dFeL"e(Od%eCss'e_L3*e_^?,fA?Q.g#)i1g>W)4gZ/>7h;nV:hrat>i91.@ip-RE
jQljHk3`3LkOJTQl1G#Wlh1;ZmJ6e`mem+dnc&RioD\dlp&>!np\t3pqYpU!r;Qm'rr33.s8NE4s8NN:
s8NW?s8N`Ds8NfHs8NlLs8NuRs8O)Ws8O2]s8O>es8ODis8FGns8FJss8FQ$s8FW)s8F].s8=`3s84`7
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7
s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7
s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7
s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7s84`7
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.474206 .68254 .738095 ]
/Encode [0 1 1 0 0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[244.172 0 0 244.172 163.873 239.93 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~()If))&X>2)]K_8*#ot?+!2RH+<VdL+X/-V,UF``-RU8i-n$Jm.4Qet.k<,$/1iG*/M8\10etOB2`NfZ
4[28$7S$-F:/=be<`iO0?=72NA7fIgCM[m,DfB`<F`qqPG^=^aI"$TsJqAW.KnbA<Ll%"HMiEaWOHG]i
Pa.T&R@9V9StD[LTqeE[V5C2jWiN2%Y-5%5Z*L^B['[6L\%&rY]">Vf]tM.q_oU'Ke_K6Pp&>!ks8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~E,p&CG'A4XI!pHoJV&N-KnbD@Mi<[WOHG]jQ'Rc)R[fq?TV8*TUnsrdW2ZetXKJb2Z*UgF[^WcV\[f;_
]=Y_g]tM.o^V@Ou^qde&_Sa:0`5T^8`l?$<`lH-?a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c3>a2c6@
a2c6@a2c6@a2c6@a2c6@aN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDbg=klhW4%us8W-!rVQKh
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
~>
<~W2?>_SXc.9QBI>hMMHk:IscNaEc5c/An,4S>$"^%:.n,G5s74d1G:7+,Tn*G((q,d#mLJ4zzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzz!!j8^.l9(>1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.
$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!='2W/3#UK3&ilW3&ilW3&ilW3&ilW3&il
W3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
310.688 323.991 mo
309.351 323.991 308.074 323.721 307.121 323.17 cv
308.074 323.721 309.351 323.991 310.688 323.991 cv
310.688 323.991 li
310.687 322.866 mo
309.35 322.866 308.074 322.597 307.121 322.046 cv
162.69 238.658 li
161.972 238.244 161.552 237.722 161.376 237.161 cv
161.099 238.125 161.503 239.092 162.675 239.775 cv
161.908 239.328 161.459 238.76 161.317 238.151 cv
161.074 237.101 161.745 235.928 163.28 235.041 cv
255.976 181.524 li
257.305 180.756 259.008 180.362 260.622 180.362 cv
261.959 180.362 263.236 180.632 264.19 181.183 cv
264.898 181.592 li
265.004 181.665 265.113 181.734 265.224 181.798 cv
408.923 264.762 li
409.815 265.386 410.167 266.199 410.001 267.023 cv
409.839 267.828 409.181 268.643 408.048 269.301 cv
409.638 268.376 410.271 267.147 409.933 266.068 cv
409.716 266.821 409.094 267.572 408.03 268.187 cv
315.333 321.705 li
314.004 322.473 312.301 322.866 310.687 322.866 cv
264.834 287.788 mo
265.787 288.338 267.033 288.609 268.334 288.609 cv
269.878 288.609 271.498 288.228 272.79 287.483 cv
292.272 276.235 li
293.598 275.469 294.359 274.414 294.359 273.342 cv
294.358 272.417 293.806 271.589 292.803 271.01 cv
254.958 249.16 li
254.006 248.611 252.759 248.341 251.458 248.341 cv
249.914 248.341 248.294 248.722 247.001 249.467 cv
227.521 260.715 li
226.195 261.481 225.433 262.535 225.434 263.608 cv
225.434 264.533 225.986 265.36 226.989 265.94 cv
264.834 287.789 li
264.834 287.788 li
328.912 282.256 mo
328.912 282.374 328.983 282.486 329.128 282.57 cv
334.56 285.706 li
334.705 285.79 334.9 285.831 335.104 285.831 cv
335.35 285.831 335.609 285.771 335.812 285.654 cv
338.166 284.295 li
338.369 284.178 338.473 284.028 338.473 283.886 cv
338.473 283.768 338.402 283.656 338.256 283.572 cv
332.826 280.436 li
332.68 280.352 332.486 280.311 332.282 280.311 cv
332.036 280.311 331.776 280.371 331.573 280.488 cv
329.219 281.848 li
329.016 281.965 328.912 282.115 328.912 282.256 cv
321.319 277.873 mo
321.32 277.99 321.391 278.103 321.536 278.187 cv
326.967 281.322 li
327.113 281.407 327.307 281.448 327.511 281.448 cv
327.757 281.448 328.017 281.388 328.219 281.271 cv
330.574 279.911 li
330.777 279.794 330.88 279.644 330.88 279.502 cv
330.88 279.385 330.809 279.272 330.663 279.189 cv
325.233 276.053 li
325.087 275.969 324.892 275.928 324.689 275.928 cv
324.443 275.928 324.183 275.988 323.981 276.105 cv
321.626 277.464 li
321.423 277.581 321.319 277.731 321.319 277.873 cv
327.268 271.663 mo
327.268 271.806 327.355 271.943 327.533 272.045 cv
341.894 280.337 li
342.071 280.439 342.309 280.489 342.557 280.489 cv
342.857 280.489 343.174 280.416 343.421 280.274 cv
348.252 277.484 li
348.5 277.341 348.626 277.158 348.627 276.985 cv
348.627 276.842 348.54 276.704 348.363 276.602 cv
334.001 268.311 li
333.824 268.209 333.587 268.158 333.338 268.158 cv
333.038 268.158 332.721 268.232 332.474 268.374 cv
327.643 271.163 li
327.396 271.306 327.269 271.489 327.268 271.663 cv
325.478 275.472 mo
325.478 275.589 325.549 275.702 325.695 275.785 cv
331.126 278.922 li
331.271 279.006 331.466 279.047 331.67 279.047 cv
331.916 279.047 332.175 278.987 332.378 278.869 cv
334.733 277.51 li
334.935 277.393 335.039 277.243 335.039 277.101 cv
335.039 276.984 334.968 276.871 334.823 276.787 cv
329.391 273.652 li
329.245 273.568 329.051 273.526 328.847 273.526 cv
328.601 273.526 328.341 273.586 328.139 273.703 cv
325.785 275.063 li
325.582 275.18 325.478 275.33 325.478 275.472 cv
313.789 273.525 mo
313.789 273.643 313.861 273.755 314.006 273.839 cv
319.437 276.975 li
319.582 277.059 319.777 277.1 319.981 277.1 cv
320.227 277.1 320.486 277.04 320.689 276.923 cv
323.043 275.564 li
323.246 275.447 323.35 275.297 323.35 275.155 cv
323.35 275.037 323.279 274.925 323.133 274.841 cv
317.703 271.705 li
317.557 271.621 317.362 271.58 317.158 271.58 cv
316.912 271.58 316.653 271.64 316.451 271.757 cv
314.096 273.116 li
313.893 273.233 313.789 273.383 313.789 273.525 cv
338.408 269.63 mo
338.408 269.773 338.495 269.91 338.672 270.013 cv
349.312 276.156 li
349.489 276.258 349.726 276.308 349.975 276.308 cv
350.275 276.308 350.592 276.235 350.839 276.092 cv
355.67 273.302 li
355.918 273.159 356.044 272.977 356.044 272.803 cv
356.044 272.66 355.957 272.523 355.78 272.42 cv
345.141 266.278 li
344.964 266.175 344.726 266.125 344.478 266.125 cv
344.177 266.125 343.86 266.198 343.614 266.341 cv
338.782 269.131 li
338.534 269.274 338.408 269.456 338.408 269.63 cv
306.639 269.355 mo
306.638 269.499 306.725 269.636 306.903 269.739 cv
311.78 272.554 li
311.957 272.656 312.194 272.706 312.442 272.706 cv
312.743 272.706 313.06 272.633 313.307 272.49 cv
319.062 269.167 li
319.309 269.025 319.436 268.842 319.436 268.668 cv
319.437 268.525 319.35 268.388 319.172 268.285 cv
314.295 265.47 li
314.118 265.368 313.881 265.318 313.633 265.318 cv
313.332 265.318 313.015 265.391 312.768 265.533 cv
307.013 268.857 li
306.766 268.999 306.639 269.182 306.639 269.355 cv
351.501 268.725 mo
351.501 268.868 351.589 269.005 351.766 269.108 cv
356.642 271.923 li
356.819 272.025 357.057 272.075 357.305 272.075 cv
357.605 272.075 357.922 272.002 358.169 271.86 cv
363 269.071 li
363.248 268.927 363.374 268.745 363.374 268.571 cv
363.374 268.428 363.288 268.291 363.111 268.189 cv
358.234 265.373 li
358.056 265.271 357.819 265.22 357.57 265.22 cv
357.27 265.22 356.954 265.294 356.706 265.437 cv
351.875 268.226 li
351.628 268.368 351.501 268.551 351.501 268.725 cv
319.688 267.286 mo
319.688 267.43 319.775 267.567 319.952 267.669 cv
324.829 270.485 li
325.006 270.587 325.243 270.637 325.492 270.637 cv
325.792 270.637 326.109 270.564 326.357 270.421 cv
331.188 267.632 li
331.435 267.489 331.562 267.306 331.562 267.133 cv
331.562 266.989 331.475 266.852 331.297 266.75 cv
326.421 263.935 li
326.244 263.832 326.006 263.782 325.758 263.782 cv
325.458 263.782 325.141 263.855 324.894 263.998 cv
320.063 266.787 li
319.816 266.93 319.689 267.113 319.688 267.286 cv
330.784 265.228 mo
330.784 265.371 330.871 265.508 331.048 265.611 cv
335.924 268.426 li
336.102 268.529 336.339 268.579 336.588 268.579 cv
336.888 268.579 337.204 268.506 337.452 268.363 cv
342.284 265.573 li
342.531 265.431 342.657 265.248 342.657 265.075 cv
342.657 264.931 342.57 264.794 342.393 264.692 cv
337.517 261.876 li
337.34 261.774 337.102 261.724 336.854 261.724 cv
336.554 261.724 336.237 261.797 335.99 261.94 cv
331.158 264.729 li
330.91 264.872 330.784 265.055 330.784 265.228 cv
296.461 263.479 mo
296.461 263.623 296.547 263.76 296.725 263.863 cv
304.524 268.365 li
304.701 268.467 304.939 268.517 305.187 268.517 cv
305.487 268.517 305.804 268.444 306.051 268.301 cv
311.807 264.979 li
312.054 264.836 312.181 264.653 312.181 264.479 cv
312.181 264.336 312.094 264.199 311.916 264.096 cv
304.118 259.594 li
303.941 259.492 303.704 259.442 303.455 259.442 cv
303.155 259.442 302.838 259.515 302.59 259.657 cv
296.835 262.981 li
296.588 263.123 296.461 263.306 296.461 263.479 cv
354.728 262.123 mo
354.727 262.267 354.814 262.404 354.992 262.506 cv
363.972 267.691 li
364.15 267.793 364.387 267.844 364.636 267.844 cv
364.936 267.844 365.252 267.77 365.499 267.627 cv
370.33 264.838 li
370.578 264.696 370.705 264.513 370.705 264.339 cv
370.705 264.196 370.618 264.059 370.441 263.956 cv
361.46 258.772 li
361.283 258.669 361.046 258.619 360.798 258.619 cv
360.497 258.619 360.18 258.692 359.933 258.835 cv
355.102 261.624 li
354.855 261.767 354.728 261.95 354.728 262.123 cv
343.971 264.377 mo
343.971 264.521 344.058 264.658 344.236 264.76 cv
349.112 267.575 li
349.289 267.678 349.526 267.728 349.774 267.728 cv
350.074 267.728 350.391 267.655 350.639 267.512 cv
355.47 264.723 li
355.717 264.58 355.844 264.397 355.844 264.224 cv
355.844 264.08 355.757 263.943 355.581 263.841 cv
350.704 261.026 li
350.526 260.923 350.289 260.873 350.04 260.873 cv
349.74 260.873 349.423 260.946 349.176 261.089 cv
344.345 263.878 li
344.098 264.021 343.971 264.204 343.971 264.377 cv
312.158 262.939 mo
312.158 263.082 312.245 263.219 312.422 263.322 cv
317.298 266.137 li
317.476 266.239 317.713 266.289 317.962 266.289 cv
318.262 266.289 318.579 266.216 318.827 266.073 cv
323.658 263.284 li
323.905 263.141 324.032 262.958 324.031 262.785 cv
324.031 262.642 323.944 262.505 323.767 262.403 cv
318.891 259.587 li
318.714 259.484 318.476 259.434 318.228 259.434 cv
317.927 259.434 317.611 259.507 317.364 259.651 cv
312.533 262.44 li
312.285 262.582 312.158 262.765 312.158 262.939 cv
323.253 260.88 mo
323.253 261.024 323.34 261.161 323.518 261.263 cv
328.394 264.078 li
328.571 264.181 328.809 264.231 329.057 264.231 cv
329.357 264.231 329.674 264.158 329.921 264.015 cv
334.753 261.226 li
335.001 261.083 335.127 260.9 335.127 260.727 cv
335.127 260.583 335.04 260.446 334.863 260.344 cv
329.987 257.529 li
329.809 257.426 329.572 257.376 329.324 257.376 cv
329.023 257.376 328.707 257.449 328.459 257.592 cv
323.627 260.381 li
323.38 260.524 323.253 260.707 323.253 260.88 cv
336.441 260.029 mo
336.441 260.173 336.528 260.31 336.705 260.412 cv
341.581 263.228 li
341.759 263.33 341.996 263.381 342.245 263.381 cv
342.545 263.381 342.862 263.307 343.109 263.164 cv
347.94 260.375 li
348.187 260.233 348.314 260.05 348.314 259.876 cv
348.314 259.733 348.227 259.596 348.05 259.493 cv
343.173 256.678 li
342.996 256.576 342.759 256.526 342.51 256.526 cv
342.21 256.526 341.893 256.599 341.646 256.741 cv
336.815 259.531 li
336.568 259.673 336.441 259.856 336.441 260.029 cv
267.991 247.272 mo
294.118 262.357 li
294.329 262.478 294.605 262.539 294.88 262.539 cv
295.156 262.539 295.432 262.478 295.642 262.357 cv
301.511 258.968 li
301.722 258.847 301.827 258.688 301.827 258.529 cv
301.827 258.369 301.722 258.21 301.511 258.089 cv
275.374 242.999 li
275.367 242.994 275.359 242.99 275.352 242.986 cv
268.773 239.188 li
267.606 238.514 li
267.553 238.484 li
267.376 238.381 267.138 238.331 266.889 238.331 cv
266.589 238.331 266.273 238.404 266.026 238.546 cv
260.27 241.869 li
260.023 242.012 259.896 242.195 259.896 242.368 cv
259.896 242.512 259.983 242.649 260.161 242.751 cv
267.958 247.254 li
267.969 247.26 267.98 247.266 267.991 247.272 cv
304.628 258.591 mo
304.628 258.735 304.715 258.872 304.892 258.974 cv
309.768 261.789 li
309.945 261.892 310.183 261.942 310.431 261.942 cv
310.732 261.942 311.049 261.868 311.296 261.726 cv
316.127 258.937 li
316.375 258.794 316.501 258.611 316.501 258.438 cv
316.501 258.294 316.414 258.157 316.237 258.055 cv
311.361 255.24 li
311.183 255.137 310.946 255.087 310.697 255.087 cv
310.397 255.087 310.081 255.16 309.833 255.303 cv
305.002 258.092 li
304.755 258.235 304.628 258.418 304.628 258.591 cv
347.536 257.971 mo
347.536 258.115 347.623 258.252 347.8 258.355 cv
352.676 261.169 li
352.854 261.272 353.092 261.322 353.341 261.322 cv
353.641 261.322 353.957 261.249 354.204 261.107 cv
359.035 258.317 li
359.283 258.174 359.409 257.991 359.409 257.818 cv
359.409 257.675 359.322 257.537 359.145 257.435 cv
354.269 254.619 li
354.092 254.517 353.854 254.467 353.606 254.467 cv
353.306 254.467 352.989 254.54 352.741 254.683 cv
347.91 257.473 li
347.663 257.616 347.536 257.798 347.536 257.971 cv
361.195 256.96 mo
361.195 257.104 361.282 257.241 361.459 257.343 cv
366.335 260.158 li
366.513 260.261 366.75 260.311 366.998 260.311 cv
367.298 260.311 367.615 260.238 367.863 260.095 cv
369.459 259.173 li
369.707 259.03 369.834 258.848 369.834 258.674 cv
369.834 258.531 369.747 258.393 369.57 258.291 cv
364.693 255.476 li
364.516 255.374 364.279 255.324 364.03 255.324 cv
363.73 255.324 363.413 255.397 363.165 255.539 cv
361.569 256.461 li
361.321 256.604 361.195 256.787 361.195 256.96 cv
315.723 256.533 mo
315.723 256.676 315.81 256.813 315.988 256.915 cv
320.864 259.731 li
321.041 259.833 321.278 259.884 321.527 259.884 cv
321.827 259.884 322.144 259.81 322.391 259.667 cv
327.223 256.878 li
327.47 256.736 327.597 256.553 327.597 256.379 cv
327.597 256.236 327.51 256.098 327.332 255.996 cv
322.456 253.181 li
322.279 253.079 322.042 253.029 321.793 253.029 cv
321.493 253.029 321.176 253.102 320.929 253.244 cv
316.097 256.033 li
315.85 256.177 315.723 256.359 315.723 256.533 cv
328.911 255.682 mo
328.911 255.826 328.998 255.962 329.175 256.065 cv
334.051 258.88 li
334.229 258.983 334.466 259.033 334.714 259.033 cv
335.015 259.033 335.331 258.96 335.578 258.817 cv
340.409 256.027 li
340.657 255.885 340.783 255.702 340.784 255.529 cv
340.784 255.385 340.697 255.248 340.52 255.146 cv
335.643 252.33 li
335.466 252.228 335.228 252.178 334.98 252.178 cv
334.68 252.178 334.363 252.251 334.116 252.394 cv
329.284 255.183 li
329.037 255.326 328.911 255.509 328.911 255.682 cv
297.098 254.243 mo
297.097 254.387 297.184 254.524 297.362 254.626 cv
302.238 257.442 li
302.415 257.544 302.652 257.594 302.901 257.594 cv
303.202 257.594 303.519 257.521 303.766 257.378 cv
308.597 254.589 li
308.844 254.446 308.971 254.263 308.971 254.09 cv
308.971 253.946 308.884 253.81 308.706 253.707 cv
303.83 250.892 li
303.653 250.789 303.416 250.739 303.167 250.739 cv
302.867 250.739 302.55 250.812 302.303 250.955 cv
297.472 253.744 li
297.225 253.887 297.098 254.07 297.098 254.243 cv
340.006 253.624 mo
340.006 253.767 340.092 253.904 340.27 254.007 cv
345.146 256.821 li
345.323 256.924 345.561 256.975 345.81 256.975 cv
346.111 256.975 346.427 256.902 346.674 256.759 cv
351.505 253.969 li
351.753 253.826 351.879 253.644 351.879 253.471 cv
351.879 253.327 351.792 253.19 351.615 253.087 cv
346.739 250.272 li
346.561 250.17 346.324 250.119 346.076 250.119 cv
345.775 250.119 345.459 250.193 345.211 250.335 cv
340.38 253.125 li
340.133 253.268 340.006 253.45 340.006 253.624 cv
353.733 252.652 mo
353.733 252.796 353.82 252.933 353.997 253.035 cv
358.873 255.851 li
359.051 255.953 359.288 256.003 359.537 256.003 cv
359.837 256.003 360.153 255.93 360.401 255.787 cv
361.998 254.866 li
362.246 254.722 362.372 254.539 362.372 254.366 cv
362.372 254.223 362.285 254.086 362.108 253.984 cv
357.232 251.168 li
357.054 251.066 356.817 251.015 356.568 251.015 cv
356.268 251.015 355.952 251.089 355.704 251.232 cv
354.107 252.154 li
353.86 252.296 353.733 252.479 353.733 252.652 cv
308.193 252.185 mo
308.193 252.328 308.28 252.465 308.457 252.568 cv
313.333 255.383 li
313.511 255.486 313.748 255.536 313.997 255.536 cv
314.297 255.536 314.613 255.463 314.861 255.32 cv
319.693 252.53 li
319.94 252.388 320.067 252.205 320.067 252.032 cv
320.067 251.888 319.98 251.751 319.802 251.649 cv
314.926 248.833 li
314.749 248.731 314.512 248.681 314.263 248.681 cv
313.963 248.681 313.646 248.754 313.399 248.897 cv
308.567 251.686 li
308.319 251.829 308.193 252.012 308.193 252.185 cv
321.38 251.334 mo
321.38 251.478 321.467 251.615 321.645 251.717 cv
326.521 254.532 li
326.698 254.635 326.936 254.685 327.184 254.685 cv
327.484 254.685 327.801 254.612 328.048 254.469 cv
332.879 251.68 li
333.127 251.537 333.253 251.354 333.253 251.181 cv
333.253 251.037 333.167 250.9 332.99 250.798 cv
328.113 247.983 li
327.935 247.88 327.698 247.83 327.449 247.83 cv
327.149 247.83 326.833 247.903 326.585 248.046 cv
321.754 250.835 li
321.507 250.978 321.38 251.161 321.38 251.334 cv
289.567 249.896 mo
289.567 250.039 289.654 250.176 289.831 250.279 cv
294.707 253.094 li
294.885 253.197 295.122 253.247 295.37 253.247 cv
295.671 253.247 295.988 253.173 296.236 253.031 cv
301.067 250.242 li
301.314 250.099 301.441 249.916 301.441 249.743 cv
301.441 249.599 301.354 249.462 301.176 249.36 cv
296.3 246.544 li
296.123 246.442 295.886 246.392 295.638 246.392 cv
295.337 246.392 295.02 246.465 294.773 246.608 cv
289.942 249.397 li
289.694 249.539 289.568 249.722 289.567 249.896 cv
332.476 249.276 mo
332.475 249.42 332.562 249.557 332.74 249.659 cv
337.616 252.474 li
337.793 252.577 338.031 252.627 338.28 252.627 cv
338.58 252.627 338.897 252.554 339.144 252.411 cv
343.975 249.621 li
344.222 249.479 344.349 249.296 344.349 249.123 cv
344.349 248.979 344.262 248.842 344.084 248.739 cv
339.208 245.924 li
339.031 245.822 338.794 245.772 338.545 245.772 cv
338.245 245.772 337.928 245.845 337.681 245.988 cv
332.85 248.778 li
332.603 248.92 332.476 249.103 332.476 249.276 cv
346.271 248.344 mo
346.271 248.488 346.358 248.625 346.536 248.728 cv
351.411 251.542 li
351.589 251.645 351.827 251.695 352.076 251.695 cv
352.376 251.695 352.693 251.622 352.94 251.48 cv
354.536 250.557 li
354.784 250.414 354.91 250.232 354.91 250.058 cv
354.91 249.915 354.823 249.778 354.646 249.675 cv
349.77 246.86 li
349.592 246.757 349.355 246.707 349.107 246.707 cv
348.806 246.707 348.49 246.78 348.243 246.923 cv
346.646 247.845 li
346.399 247.988 346.272 248.171 346.271 248.344 cv
300.663 247.837 mo
300.663 247.981 300.75 248.118 300.927 248.22 cv
305.803 251.035 li
305.981 251.138 306.218 251.188 306.467 251.188 cv
306.767 251.188 307.083 251.115 307.33 250.972 cv
312.162 248.183 li
312.41 248.04 312.536 247.858 312.536 247.684 cv
312.536 247.541 312.449 247.404 312.272 247.301 cv
307.396 244.486 li
307.219 244.383 306.981 244.333 306.733 244.333 cv
306.433 244.333 306.116 244.406 305.868 244.549 cv
301.037 247.338 li
300.789 247.481 300.663 247.664 300.663 247.837 cv
313.85 246.987 mo
313.85 247.13 313.937 247.267 314.115 247.369 cv
318.991 250.185 li
319.168 250.287 319.405 250.338 319.654 250.338 cv
319.954 250.338 320.271 250.264 320.518 250.121 cv
325.349 247.332 li
325.596 247.19 325.723 247.007 325.723 246.833 cv
325.724 246.69 325.637 246.553 325.459 246.45 cv
320.582 243.635 li
320.405 243.533 320.168 243.483 319.919 243.483 cv
319.619 243.483 319.302 243.556 319.055 243.698 cv
314.224 246.487 li
313.977 246.631 313.85 246.814 313.85 246.987 cv
282.037 245.548 mo
282.037 245.692 282.124 245.829 282.301 245.931 cv
287.177 248.746 li
287.354 248.849 287.592 248.899 287.841 248.899 cv
288.141 248.899 288.458 248.826 288.705 248.683 cv
293.537 245.894 li
293.784 245.751 293.91 245.568 293.91 245.395 cv
293.91 245.251 293.823 245.114 293.646 245.012 cv
288.77 242.197 li
288.592 242.094 288.355 242.044 288.107 242.044 cv
287.806 242.044 287.49 242.117 287.243 242.26 cv
282.411 245.049 li
282.164 245.192 282.037 245.375 282.037 245.548 cv
324.945 244.928 mo
324.945 245.072 325.032 245.209 325.209 245.312 cv
330.085 248.127 li
330.263 248.229 330.5 248.279 330.749 248.279 cv
331.049 248.279 331.366 248.206 331.614 248.064 cv
336.445 245.274 li
336.692 245.131 336.819 244.948 336.819 244.775 cv
336.818 244.632 336.731 244.494 336.554 244.392 cv
331.678 241.576 li
331.501 241.474 331.264 241.424 331.015 241.424 cv
330.715 241.424 330.398 241.497 330.151 241.64 cv
325.32 244.43 li
325.072 244.573 324.945 244.755 324.945 244.928 cv
338.81 244.036 mo
338.81 244.18 338.897 244.317 339.075 244.419 cv
343.951 247.235 li
344.128 247.337 344.365 247.387 344.614 247.387 cv
344.914 247.387 345.231 247.314 345.478 247.171 cv
347.075 246.249 li
347.322 246.107 347.449 245.924 347.449 245.75 cv
347.449 245.607 347.362 245.47 347.185 245.367 cv
342.308 242.552 li
342.131 242.45 341.894 242.4 341.645 242.4 cv
341.345 242.4 341.028 242.473 340.781 242.616 cv
339.184 243.537 li
338.937 243.68 338.81 243.863 338.81 244.036 cv
293.132 243.49 mo
293.132 243.633 293.219 243.771 293.397 243.873 cv
298.273 246.688 li
298.45 246.79 298.688 246.841 298.937 246.841 cv
299.237 246.841 299.553 246.768 299.8 246.625 cv
304.632 243.835 li
304.879 243.693 305.006 243.51 305.006 243.337 cv
305.006 243.193 304.919 243.056 304.742 242.953 cv
299.866 240.138 li
299.688 240.036 299.451 239.986 299.203 239.986 cv
298.902 239.986 298.586 240.059 298.338 240.201 cv
293.506 242.991 li
293.259 243.134 293.132 243.317 293.132 243.49 cv
306.32 242.639 mo
306.32 242.783 306.407 242.919 306.584 243.022 cv
311.46 245.837 li
311.638 245.94 311.875 245.99 312.124 245.99 cv
312.424 245.99 312.74 245.917 312.988 245.774 cv
317.819 242.985 li
318.066 242.842 318.193 242.659 318.193 242.486 cv
318.193 242.342 318.107 242.205 317.929 242.103 cv
313.052 239.287 li
312.875 239.185 312.638 239.135 312.389 239.135 cv
312.089 239.135 311.772 239.208 311.525 239.351 cv
306.694 242.14 li
306.446 242.283 306.32 242.466 306.32 242.639 cv
274.507 241.201 mo
274.507 241.344 274.593 241.481 274.771 241.583 cv
279.647 244.399 li
279.824 244.501 280.062 244.552 280.311 244.552 cv
280.611 244.552 280.928 244.478 281.175 244.335 cv
286.006 241.546 li
286.253 241.404 286.38 241.221 286.38 241.047 cv
286.38 240.904 286.293 240.767 286.116 240.664 cv
281.24 237.849 li
281.062 237.747 280.825 237.697 280.576 237.697 cv
280.276 237.697 279.96 237.77 279.712 237.912 cv
274.881 240.701 li
274.634 240.845 274.507 241.027 274.507 241.201 cv
317.415 240.581 mo
317.415 240.724 317.502 240.861 317.679 240.964 cv
322.555 243.78 li
322.732 243.882 322.97 243.932 323.219 243.932 cv
323.519 243.932 323.836 243.859 324.083 243.716 cv
328.914 240.926 li
329.162 240.783 329.288 240.601 329.288 240.428 cv
329.288 240.284 329.201 240.147 329.024 240.044 cv
324.148 237.229 li
323.97 237.127 323.733 237.077 323.485 237.077 cv
323.185 237.077 322.868 237.15 322.621 237.292 cv
317.789 240.082 li
317.542 240.225 317.415 240.408 317.415 240.581 cv
285.602 239.142 mo
285.602 239.286 285.689 239.423 285.867 239.526 cv
290.742 242.34 li
290.92 242.443 291.158 242.493 291.407 242.493 cv
291.707 242.493 292.023 242.42 292.27 242.278 cv
297.102 239.488 li
297.349 239.345 297.476 239.162 297.476 238.989 cv
297.476 238.846 297.389 238.708 297.211 238.606 cv
292.335 235.79 li
292.158 235.688 291.921 235.638 291.672 235.638 cv
291.372 235.638 291.055 235.711 290.808 235.854 cv
285.976 238.644 li
285.729 238.786 285.602 238.969 285.602 239.142 cv
298.79 238.292 mo
298.79 238.435 298.877 238.572 299.054 238.675 cv
303.93 241.489 li
304.108 241.592 304.345 241.643 304.594 241.643 cv
304.894 241.643 305.21 241.569 305.457 241.427 cv
310.288 238.637 li
310.536 238.494 310.663 238.312 310.663 238.138 cv
310.663 237.995 310.576 237.858 310.399 237.755 cv
305.522 234.94 li
305.344 234.837 305.107 234.787 304.859 234.787 cv
304.559 234.787 304.242 234.861 303.995 235.003 cv
299.163 237.792 li
298.916 237.935 298.789 238.118 298.79 238.292 cv
249.032 236.096 mo
249.032 236.239 249.119 236.377 249.296 236.479 cv
257.094 240.981 li
257.272 241.083 257.509 241.134 257.758 241.134 cv
258.058 241.134 258.374 241.061 258.621 240.918 cv
264.377 237.595 li
264.625 237.452 264.751 237.269 264.751 237.096 cv
264.751 236.952 264.664 236.815 264.487 236.713 cv
256.689 232.21 li
256.512 232.108 256.274 232.058 256.026 232.058 cv
255.726 232.058 255.409 232.131 255.161 232.274 cv
249.406 235.597 li
249.158 235.74 249.032 235.922 249.032 236.096 cv
266.977 236.853 mo
266.976 236.996 267.063 237.133 267.241 237.236 cv
272.117 240.051 li
272.294 240.154 272.531 240.204 272.78 240.204 cv
273.081 240.204 273.398 240.131 273.645 239.988 cv
278.476 237.198 li
278.723 237.056 278.85 236.873 278.85 236.7 cv
278.85 236.556 278.763 236.419 278.585 236.317 cv
273.709 233.501 li
273.532 233.399 273.295 233.349 273.046 233.349 cv
272.746 233.349 272.429 233.422 272.182 233.565 cv
267.351 236.354 li
267.104 236.497 266.977 236.68 266.977 236.853 cv
309.885 236.233 mo
309.885 236.377 309.971 236.514 310.149 236.616 cv
315.025 239.432 li
315.202 239.534 315.44 239.584 315.688 239.584 cv
315.989 239.584 316.306 239.511 316.553 239.368 cv
321.384 236.578 li
321.631 236.436 321.758 236.253 321.758 236.08 cv
321.758 235.936 321.671 235.799 321.494 235.697 cv
316.617 232.882 li
316.44 232.779 316.202 232.729 315.954 232.729 cv
315.654 232.729 315.337 232.802 315.09 232.945 cv
310.259 235.735 li
310.012 235.877 309.885 236.06 309.885 236.233 cv
278.072 234.795 mo
278.072 234.938 278.159 235.075 278.336 235.178 cv
283.212 237.992 li
283.39 238.095 283.628 238.146 283.876 238.146 cv
284.176 238.146 284.492 238.072 284.74 237.93 cv
289.572 235.14 li
289.819 234.997 289.946 234.815 289.945 234.641 cv
289.945 234.498 289.858 234.361 289.681 234.258 cv
284.805 231.443 li
284.628 231.34 284.391 231.29 284.142 231.29 cv
283.842 231.29 283.525 231.363 283.278 231.506 cv
278.446 234.296 li
278.198 234.439 278.072 234.621 278.072 234.795 cv
291.259 233.944 mo
291.259 234.088 291.346 234.225 291.524 234.327 cv
296.4 237.142 li
296.577 237.245 296.815 237.295 297.064 237.295 cv
297.364 237.295 297.68 237.222 297.927 237.079 cv
302.758 234.289 li
303.005 234.147 303.132 233.964 303.133 233.791 cv
303.133 233.647 303.046 233.51 302.869 233.407 cv
297.992 230.592 li
297.815 230.49 297.578 230.44 297.329 230.44 cv
297.029 230.44 296.712 230.513 296.464 230.656 cv
291.633 233.446 li
291.386 233.588 291.259 233.771 291.259 233.944 cv
259.446 232.505 mo
259.446 232.649 259.533 232.786 259.71 232.888 cv
264.586 235.703 li
264.764 235.806 265.001 235.856 265.25 235.856 cv
265.551 235.856 265.867 235.783 266.115 235.64 cv
270.946 232.851 li
271.193 232.708 271.32 232.525 271.32 232.352 cv
271.32 232.208 271.233 232.071 271.055 231.969 cv
266.179 229.154 li
266.002 229.051 265.764 229.001 265.516 229.001 cv
265.216 229.001 264.899 229.074 264.652 229.217 cv
259.821 232.006 li
259.573 232.149 259.446 232.332 259.446 232.505 cv
302.354 231.885 mo
302.354 232.029 302.441 232.166 302.618 232.269 cv
307.495 235.084 li
307.672 235.186 307.909 235.236 308.158 235.236 cv
308.459 235.236 308.775 235.163 309.023 235.021 cv
313.854 232.231 li
314.101 232.088 314.228 231.906 314.228 231.732 cv
314.228 231.589 314.141 231.452 313.963 231.349 cv
309.087 228.534 li
308.91 228.432 308.672 228.381 308.423 228.381 cv
308.123 228.381 307.807 228.454 307.56 228.597 cv
302.729 231.387 li
302.482 231.529 302.355 231.712 302.354 231.885 cv
241.501 231.748 mo
241.502 231.892 241.589 232.029 241.766 232.131 cv
246.642 234.947 li
246.819 235.049 247.057 235.099 247.305 235.099 cv
247.605 235.099 247.922 235.026 248.169 234.883 cv
253.925 231.56 li
254.172 231.417 254.299 231.235 254.299 231.061 cv
254.299 230.918 254.212 230.781 254.035 230.678 cv
249.159 227.863 li
248.981 227.76 248.744 227.71 248.496 227.71 cv
248.195 227.71 247.879 227.783 247.631 227.926 cv
241.875 231.249 li
241.628 231.392 241.501 231.575 241.501 231.748 cv
270.542 230.447 mo
270.542 230.591 270.629 230.728 270.806 230.83 cv
275.682 233.646 li
275.859 233.748 276.096 233.798 276.345 233.798 cv
276.645 233.798 276.962 233.725 277.209 233.582 cv
282.041 230.792 li
282.289 230.65 282.415 230.467 282.415 230.294 cv
282.415 230.15 282.328 230.013 282.151 229.91 cv
277.275 227.095 li
277.097 226.993 276.86 226.943 276.612 226.943 cv
276.312 226.943 275.995 227.016 275.747 227.158 cv
270.915 229.949 li
270.668 230.091 270.542 230.274 270.542 230.447 cv
283.729 229.596 mo
283.729 229.74 283.816 229.877 283.993 229.98 cv
288.869 232.794 li
289.047 232.897 289.285 232.947 289.534 232.947 cv
289.834 232.947 290.15 232.874 290.397 232.732 cv
295.228 229.942 li
295.475 229.799 295.602 229.616 295.602 229.443 cv
295.602 229.3 295.516 229.162 295.338 229.06 cv
290.461 226.244 li
290.284 226.142 290.047 226.092 289.799 226.092 cv
289.498 226.092 289.181 226.165 288.934 226.308 cv
284.103 229.098 li
283.856 229.241 283.729 229.423 283.729 229.596 cv
251.916 228.158 mo
251.916 228.301 252.003 228.438 252.18 228.54 cv
257.056 231.356 li
257.233 231.458 257.471 231.509 257.72 231.509 cv
258.02 231.509 258.337 231.435 258.584 231.292 cv
263.415 228.503 li
263.663 228.361 263.789 228.178 263.789 228.004 cv
263.789 227.861 263.702 227.723 263.525 227.621 cv
258.649 224.806 li
258.471 224.704 258.234 224.654 257.986 224.654 cv
257.686 224.654 257.369 224.727 257.121 224.869 cv
252.29 227.658 li
252.043 227.802 251.916 227.984 251.916 228.158 cv
294.824 227.538 mo
294.824 227.681 294.911 227.818 295.088 227.921 cv
299.964 230.736 li
300.142 230.839 300.379 230.889 300.628 230.889 cv
300.928 230.889 301.245 230.816 301.493 230.673 cv
306.324 227.884 li
306.571 227.741 306.697 227.558 306.697 227.385 cv
306.697 227.241 306.61 227.104 306.433 227.001 cv
301.557 224.187 li
301.379 224.084 301.142 224.034 300.893 224.034 cv
300.593 224.034 300.277 224.107 300.03 224.249 cv
295.199 227.039 li
294.951 227.182 294.824 227.364 294.824 227.538 cv
233.971 227.401 mo
233.971 227.544 234.058 227.681 234.236 227.783 cv
239.112 230.599 li
239.289 230.701 239.526 230.751 239.775 230.751 cv
240.075 230.751 240.392 230.678 240.639 230.535 cv
246.395 227.212 li
246.642 227.07 246.769 226.887 246.769 226.714 cv
246.769 226.57 246.682 226.433 246.504 226.33 cv
241.628 223.516 li
241.451 223.413 241.213 223.363 240.964 223.363 cv
240.664 223.363 240.348 223.436 240.101 223.578 cv
234.345 226.902 li
234.098 227.044 233.971 227.227 233.971 227.401 cv
263.011 226.099 mo
263.011 226.243 263.098 226.38 263.276 226.483 cv
268.152 229.298 li
268.329 229.4 268.566 229.45 268.815 229.45 cv
269.115 229.45 269.432 229.377 269.679 229.235 cv
274.511 226.445 li
274.758 226.302 274.885 226.119 274.885 225.946 cv
274.885 225.803 274.798 225.665 274.62 225.563 cv
269.744 222.747 li
269.567 222.645 269.33 222.595 269.081 222.595 cv
268.781 222.595 268.465 222.668 268.217 222.811 cv
263.385 225.601 li
263.138 225.743 263.011 225.926 263.011 226.099 cv
276.011 225.14 mo
276.011 225.284 276.098 225.421 276.276 225.524 cv
281.152 228.339 li
281.329 228.441 281.566 228.491 281.815 228.491 cv
282.115 228.491 282.432 228.418 282.679 228.276 cv
287.511 225.487 li
287.758 225.343 287.884 225.161 287.885 224.987 cv
287.885 224.844 287.798 224.707 287.62 224.605 cv
282.745 221.789 li
282.567 221.687 282.329 221.636 282.081 221.636 cv
281.78 221.636 281.464 221.71 281.216 221.853 cv
276.385 224.642 li
276.138 224.784 276.011 224.967 276.011 225.14 cv
234.757 218.251 mo
234.757 218.395 234.844 218.532 235.022 218.634 cv
249.382 226.925 li
249.56 227.028 249.798 227.078 250.047 227.078 cv
250.347 227.078 250.663 227.005 250.911 226.863 cv
255.742 224.073 li
255.989 223.93 256.116 223.747 256.115 223.574 cv
256.115 223.43 256.028 223.293 255.851 223.191 cv
241.491 214.9 li
241.313 214.797 241.076 214.747 240.828 214.747 cv
240.527 214.747 240.211 214.82 239.963 214.963 cv
235.131 217.752 li
234.884 217.895 234.757 218.078 234.757 218.251 cv
287.294 223.19 mo
287.294 223.334 287.381 223.471 287.558 223.573 cv
292.434 226.389 li
292.611 226.491 292.849 226.541 293.098 226.541 cv
293.398 226.541 293.715 226.468 293.962 226.325 cv
298.793 223.536 li
299.041 223.393 299.167 223.21 299.167 223.037 cv
299.167 222.894 299.08 222.757 298.903 222.654 cv
294.027 219.839 li
293.849 219.736 293.612 219.686 293.363 219.686 cv
293.063 219.686 292.747 219.759 292.499 219.903 cv
287.668 222.692 li
287.421 222.834 287.294 223.017 287.294 223.19 cv
226.441 223.053 mo
226.441 223.197 226.528 223.334 226.705 223.436 cv
231.581 226.251 li
231.759 226.353 231.996 226.404 232.244 226.404 cv
232.545 226.404 232.861 226.33 233.109 226.188 cv
238.865 222.864 li
239.112 222.722 239.239 222.539 239.238 222.366 cv
239.238 222.222 239.151 222.085 238.974 221.983 cv
234.098 219.168 li
233.92 219.065 233.683 219.015 233.434 219.015 cv
233.134 219.015 232.818 219.088 232.571 219.231 cv
226.815 222.554 li
226.568 222.697 226.441 222.879 226.441 223.053 cv
255.369 221.687 mo
255.369 221.83 255.456 221.967 255.633 222.07 cv
260.509 224.885 li
260.687 224.988 260.924 225.038 261.173 225.038 cv
261.473 225.038 261.789 224.965 262.036 224.821 cv
266.868 222.032 li
267.116 221.89 267.242 221.707 267.242 221.534 cv
267.242 221.39 267.155 221.253 266.978 221.151 cv
262.102 218.335 li
261.925 218.233 261.687 218.183 261.439 218.183 cv
261.139 218.183 260.822 218.256 260.575 218.399 cv
255.743 221.188 li
255.495 221.331 255.369 221.514 255.369 221.687 cv
268.293 220.685 mo
268.294 220.828 268.381 220.965 268.558 221.068 cv
273.434 223.883 li
273.611 223.986 273.849 224.036 274.097 224.036 cv
274.398 224.036 274.714 223.963 274.961 223.82 cv
279.793 221.03 li
280.041 220.888 280.167 220.705 280.167 220.532 cv
280.167 220.388 280.08 220.251 279.903 220.149 cv
275.027 217.333 li
274.849 217.231 274.612 217.181 274.364 217.181 cv
274.063 217.181 273.747 217.254 273.499 217.397 cv
268.667 220.186 li
268.42 220.329 268.293 220.512 268.293 220.685 cv
297.153 219.986 mo
297.153 220.129 297.24 220.266 297.417 220.368 cv
302.293 223.184 li
302.471 223.286 302.708 223.337 302.957 223.337 cv
303.257 223.337 303.573 223.264 303.821 223.12 cv
305.418 222.198 li
305.666 222.056 305.792 221.873 305.792 221.7 cv
305.792 221.556 305.705 221.419 305.528 221.317 cv
300.652 218.501 li
300.474 218.399 300.237 218.349 299.989 218.349 cv
299.689 218.349 299.372 218.422 299.124 218.565 cv
297.527 219.487 li
297.279 219.63 297.153 219.813 297.153 219.986 cv
279.764 218.843 mo
279.763 218.986 279.85 219.124 280.028 219.226 cv
284.904 222.041 li
285.081 222.143 285.319 222.194 285.567 222.194 cv
285.868 222.194 286.185 222.12 286.432 221.978 cv
291.263 219.189 li
291.51 219.046 291.637 218.863 291.637 218.69 cv
291.637 218.546 291.55 218.409 291.372 218.307 cv
286.496 215.491 li
286.319 215.389 286.082 215.338 285.833 215.338 cv
285.533 215.338 285.216 215.412 284.969 215.555 cv
280.138 218.344 li
279.891 218.487 279.764 218.669 279.764 218.843 cv
242.088 214.019 mo
242.088 214.163 242.174 214.3 242.352 214.403 cv
252.854 220.465 li
253.031 220.568 253.269 220.618 253.518 220.618 cv
253.818 220.618 254.134 220.545 254.381 220.403 cv
259.213 217.613 li
259.461 217.47 259.587 217.287 259.587 217.114 cv
259.587 216.971 259.5 216.833 259.323 216.731 cv
248.821 210.667 li
248.643 210.565 248.406 210.515 248.158 210.515 cv
247.857 210.515 247.541 210.588 247.293 210.731 cv
242.461 213.521 li
242.215 213.663 242.088 213.846 242.088 214.019 cv
260.576 216.229 mo
260.576 216.373 260.663 216.51 260.84 216.613 cv
265.716 219.427 li
265.894 219.53 266.132 219.58 266.381 219.58 cv
266.681 219.58 266.997 219.507 267.244 219.365 cv
272.076 216.575 li
272.323 216.432 272.449 216.249 272.449 216.076 cv
272.449 215.932 272.362 215.795 272.185 215.693 cv
267.309 212.877 li
267.132 212.775 266.894 212.725 266.646 212.725 cv
266.345 212.725 266.029 212.798 265.782 212.941 cv
260.95 215.731 li
260.703 215.873 260.576 216.056 260.576 216.229 cv
289.691 215.678 mo
289.691 215.822 289.778 215.959 289.955 216.061 cv
294.831 218.876 li
295.009 218.978 295.246 219.029 295.495 219.029 cv
295.795 219.029 296.112 218.955 296.36 218.813 cv
297.956 217.891 li
298.204 217.748 298.33 217.565 298.33 217.392 cv
298.33 217.248 298.243 217.111 298.066 217.009 cv
293.19 214.194 li
293.012 214.091 292.775 214.041 292.526 214.041 cv
292.226 214.041 291.91 214.114 291.662 214.257 cv
290.066 215.179 li
289.819 215.322 289.692 215.504 289.691 215.678 cv
272.271 214.517 mo
272.271 214.66 272.358 214.797 272.536 214.9 cv
277.411 217.715 li
277.589 217.818 277.826 217.868 278.075 217.868 cv
278.375 217.868 278.692 217.795 278.939 217.652 cv
283.77 214.863 li
284.017 214.72 284.144 214.537 284.144 214.364 cv
284.145 214.22 284.058 214.083 283.88 213.981 cv
279.003 211.165 li
278.826 211.063 278.589 211.013 278.341 211.013 cv
278.04 211.013 277.723 211.086 277.476 211.229 cv
272.645 214.018 li
272.398 214.16 272.271 214.343 272.271 214.517 cv
249.418 209.787 mo
249.418 209.93 249.505 210.068 249.682 210.17 cv
258.205 215.091 li
258.382 215.193 258.62 215.243 258.868 215.243 cv
259.168 215.243 259.485 215.17 259.733 215.028 cv
264.564 212.238 li
264.811 212.095 264.938 211.912 264.938 211.739 cv
264.938 211.595 264.851 211.458 264.673 211.356 cv
256.151 206.436 li
255.973 206.333 255.735 206.283 255.487 206.283 cv
255.187 206.283 254.87 206.356 254.623 206.498 cv
249.792 209.288 li
249.545 209.431 249.418 209.614 249.418 209.787 cv
282.23 211.37 mo
282.23 211.513 282.317 211.65 282.494 211.753 cv
287.371 214.569 li
287.548 214.671 287.785 214.721 288.034 214.721 cv
288.334 214.721 288.651 214.648 288.898 214.505 cv
290.494 213.582 li
290.742 213.44 290.869 213.257 290.869 213.084 cv
290.869 212.94 290.782 212.803 290.605 212.7 cv
285.729 209.886 li
285.551 209.783 285.313 209.733 285.064 209.733 cv
284.764 209.733 284.448 209.806 284.201 209.948 cv
282.604 210.871 li
282.357 211.014 282.23 211.197 282.23 211.37 cv
264.778 210.191 mo
264.778 210.334 264.865 210.471 265.042 210.573 cv
269.918 213.389 li
270.096 213.492 270.333 213.542 270.582 213.542 cv
270.882 213.542 271.198 213.469 271.446 213.325 cv
276.278 210.536 li
276.525 210.394 276.652 210.211 276.652 210.037 cv
276.651 209.894 276.564 209.757 276.387 209.654 cv
271.511 206.839 li
271.334 206.737 271.097 206.687 270.848 206.687 cv
270.548 206.687 270.231 206.76 269.984 206.903 cv
265.152 209.692 li
264.904 209.835 264.778 210.018 264.778 210.191 cv
274.768 207.062 mo
274.768 207.205 274.855 207.342 275.033 207.445 cv
279.909 210.26 li
280.086 210.363 280.323 210.413 280.572 210.413 cv
280.872 210.413 281.189 210.34 281.436 210.197 cv
283.034 209.275 li
283.281 209.132 283.407 208.949 283.407 208.776 cv
283.407 208.633 283.32 208.495 283.143 208.393 cv
278.267 205.577 li
278.09 205.475 277.852 205.425 277.604 205.425 cv
277.304 205.425 276.987 205.498 276.74 205.641 cv
275.142 206.563 li
274.895 206.706 274.768 206.889 274.768 207.062 cv
257.285 205.865 mo
257.285 206.008 257.372 206.146 257.549 206.248 cv
262.426 209.063 li
262.603 209.165 262.841 209.216 263.09 209.216 cv
263.39 209.216 263.706 209.143 263.953 209 cv
268.784 206.21 li
269.032 206.068 269.158 205.885 269.158 205.712 cv
269.158 205.568 269.071 205.431 268.894 205.328 cv
264.018 202.513 li
263.841 202.411 263.603 202.361 263.355 202.361 cv
263.055 202.361 262.738 202.434 262.491 202.576 cv
257.659 205.366 li
257.412 205.509 257.285 205.692 257.285 205.865 cv
264.99 201.416 mo
264.99 201.56 265.077 201.697 265.254 201.799 cv
270.13 204.615 li
270.308 204.717 270.545 204.767 270.794 204.767 cv
271.094 204.767 271.411 204.694 271.658 204.551 cv
273.255 203.629 li
273.503 203.487 273.629 203.304 273.629 203.131 cv
273.629 202.987 273.542 202.85 273.365 202.747 cv
268.489 199.932 li
268.311 199.83 268.074 199.78 267.825 199.78 cv
267.525 199.78 267.209 199.853 266.961 199.995 cv
265.364 200.917 li
265.117 201.06 264.99 201.243 264.99 201.416 cv
315.285 322.858 mo
315.301 322.849 315.317 322.84 315.333 322.83 cv
315.317 322.84 315.301 322.849 315.285 322.858 cv
268.317 287.503 mo
267.206 287.503 266.151 287.286 265.381 286.843 cv
227.536 264.992 li
227.075 264.727 226.526 264.271 226.526 263.608 cv
226.526 262.937 227.088 262.227 228.068 261.661 cv
247.548 250.414 li
248.655 249.776 250.108 249.446 251.476 249.446 cv
252.587 249.446 253.643 249.663 254.411 250.108 cv
292.256 271.957 li
292.717 272.223 293.266 272.679 293.266 273.342 cv
293.266 274.014 292.704 274.723 291.725 275.288 cv
272.243 286.535 li
271.138 287.175 269.686 287.503 268.317 287.503 cv
408.03 269.312 mo
408.036 269.308 408.042 269.305 408.048 269.301 cv
408.042 269.304 408.036 269.308 408.03 269.312 cv
162.69 239.783 mo
162.685 239.781 162.681 239.778 162.676 239.775 cv
162.681 239.778 162.685 239.781 162.69 239.783 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(NHDS(j)PR)0VSO)L7eP)gmtP*.F"M*.a%K*J9(H+,,7G+GY=E+H(@B+cUC?+cpF=,EcO:,a;U8-'hX5
-CId4.%Es2.%Wm..A8s+.AJj&.]"m#/#Ois/?'io/?9ck/Zfcg0!Gid0!Yc`0=1i^0t%&^1UmDb2n8ng
3P#1j4hC[o6+d0t7D/[$8\P0)9tpZ.:r!&2<PSS7=ht(<>f$I@@)DsE@`/6HB#O`MBuU,QCrZMUDoVhX
E5qqYF3"=]G/sX`GK9aaH,oscI)l9fIE2BgJB.]jK#dolK?+#mKua5oLWBGqLr]PrMT5\sMoYkuNlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^W?HU^<$?T^<$?T^<$?T]u^6S]u^6S]ZC-R]?($Q]?($Q]#apP\]FgO\]FgO\B+^N\&eUM[`JLL[`JLL
[E/CK[E/CK[)i:J[)i:JZcN1IZcN1IZH3(HZ,ltGYfQkFYfQkFYK6bEY/pYDXiUPCXN:GBXN:GBX2t>A
WlY5@WQ>,?W6##>Vo\o=VTAf<VT8`;V8rW:UrWN9UW<E8U<!<7U<!<7Tu[36TZ@*5T?%!4T#^m3S]Cd2
SB([1S&bR0R`GI/RE,@.R)f7-QcK.,QH0%+Q,iq*PfNh)PK3_(P/mV'OiRM&ON7D%O2h5#O2h5#NlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^W?HU^W?HU^rZQV_8uZW_8uZW_T;cX_TDiY_TDiY_TMoZ_TVu[_or)\_or)\_or)\`6A8^`Q\A_`Q\A_
`m"J`a3FYba3FYbaNabcaNabcaNjhdaj0qeaj:"faj:"fajC(gajC(gb0^1hbL-@jbgHIkbgHIkc-lXm
cI2ancdMjocdVppd*r$qd+&*rdFA3sdFJ9tdFJ9tdFS?udanI!db"O"e(=X#e(F^$eCag%eCjm&e_1!'
e_:'(f%U0)f%U0)fA$?+f\?H,g"cW.g"cW.g>2f0g>2f0gYVu2gtr)3h;A85hV\A6hVeG7hr4V9hr=\:
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.474206 .72619 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~()If))&X>2)]K_8*#ot?+!2RH+<VdL+X/-V,UF``-RU8i-n$Jm.4Qet.k<,$/1iG*/M8\10etOB2`NfZ
4[28$7S$-F:/=be<`iO0?=72NA7fIgCM[m,DfB`<F`qqPG^=^aI"$TsJqAW.KnbA<Ll%"HMiEaWO-#Ke
PE_>uQ^F20S"-%@T:hmOU8+N\V5:&eW2ZetX/rG+YHP18ZEggC['[6K[^WcV\[oAa]Y(qk]tV4p^VIY$
_83t(_SX1,_o0L4`l?'>a2c9BaN2HEb0%oNbg"GYcd0tbd*U.edF-Ile'lgre^`7&f\"m1g"P39h;-rE
~>
<~E,p&CG'A4XI!pHoJV&N-KnbD@Mi<[WOHG]jQ'Rc)R[fq?TV8*TUnsrdW2ZetXKJb2Z*UgF[^WcV\[f;_
]=Y_g]tM.o^V@Ou^qde&_Sa:0`5T^8`l?$<`lH-?a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c3>a2c6@
a2c6@a2c6@a2c6@a2c6@a2c6@a2l?CaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HD
aiV]KbKJ)Pbfn;Tc-=MXc-FV\cd:%cdF$@hdaHRme'umse^`7%f@S[-g"G'4g=k<9gt^`Ah;7#Ghr*JQ
~>
<~W2?>_SXc.9QBI>hMMHk:IscNaEc5c/An,4S>$"^%:.n,G5s74d1G:7+,Tn*G((q,d#mLJ4zzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
408.03 268.187 mo
315.333 321.705 li
312.903 323.109 309.226 323.261 307.121 322.046 cv
162.69 238.658 li
161.972 238.244 161.552 237.722 161.376 237.161 cv
161.098 238.129 161.506 239.1 162.69 239.783 cv
307.121 323.17 li
309.226 324.386 312.903 324.234 315.333 322.83 cv
408.03 269.312 li
409.633 268.386 410.272 267.152 409.933 266.068 cv
409.716 266.821 409.094 267.572 408.03 268.187 cv
0 0 0 0 cmyk
f
232.244 226.404 mo
231.996 226.404 231.759 226.353 231.581 226.251 cv
226.705 223.436 li
226.528 223.334 226.441 223.197 226.441 223.053 cv
226.441 222.879 226.568 222.697 226.815 222.554 cv
232.571 219.231 li
232.818 219.088 233.134 219.015 233.434 219.015 cv
233.683 219.015 233.92 219.065 234.098 219.168 cv
238.974 221.983 li
239.151 222.085 239.238 222.222 239.238 222.366 cv
239.239 222.539 239.112 222.722 238.865 222.864 cv
233.109 226.188 li
232.861 226.33 232.545 226.404 232.244 226.404 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~R_a;XSATSYT#GkZT>u%ZU<%@ZUs!^\VTj!\W6]9]WmPQ]XOCl_Xjq&^YLdA_Z.WY`ZeJq`[GG=b\)1Oa
\`-mb]B!3c^#iKd^ZS]c_<G#e_Wt5e`9gMea6lkeaRE%eb48@fbOeRfc1XmgcM(!ed.p9edJHKee,2]e
ec/)gf)J/efDe2bf`+8agAaGag]'J^h#BM[h>]S[h>]SZhZ#YYhZ#SWhZ#PUhu>VTi;Y\SiVt_QiVt\O
iVtVMir:\Lir:YKir:SIj8UYHj8UVGj8USEjSpYEjSpSBjo6YAjo6V@k5Q\?k5QV=k5QS;k5QM9kPlS8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~q>VHSq>VHSq>VHSq>VHSq#;?Rq#;?Rq#;?Rp\u6Pp\u6Pp\u6Pp\u6PpAZ-OpAZ-OpAZ-NpAZ-NpAZ*M
pAZ*Mp&?!Kp&?!Kp&?!Kp&?!Kp&?!Jp&?!Jo`#mIo`#mIo`#mIo`#mHoD]dGoD]dGo)B[Fo)B[Fo)B[E
nc'RDnc'RDnc'RDnc'RDnGaICnGaICnGaLCn,FCBn,FCBmf+:Amf+:Amf+:@mJe1?mJe1?mJe1?m/J+?
m/J+?m/J+>li/"=li/"=li/"=lMhn<lMhn<l2Me;l2Me;kl2\:kl2\:kl2\:kPlS9kPlS8kPlS8kPlS8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~q>VHSq>VKUqYqTWqYqWXqYqWYqYqZZqYqZZqu7c\qu7c\qu7f^qu7f^r;Ro_r;RrarVn&brVn)drVn,e
rr45grr48hrr48irr4;ks8ODls8OGns8OGns8OJps8OJps8OMrs8OMrs8OMss8OMss8OPus8OPus8OQ!
s8OT"s8OT#s8OT#s8OT$s8OW%s8OW&s8OW&s8OZ(s8OZ(s8O]*s8O]*s8O]+s8O`,s8O`-s8O`-s8Oc/
s8Oc0s8Of1s8Of2s8Oi4s8Oi4s8Oi5s8Ol6s8Ol7s8Ol8s8Oo9s8Oo:s8Or<s8Or<s8Ou>s8Ou>s8P#@
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.474206 .72619 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~R@B_;St;RIU8+N\VPgAlWiN5&Xfek3Z*L^D[^WcW]">Vg^;%J"_8=+.`lH-@ai_cLbg"GZd*U1ge'upu
f%/I)f\,!4gY:N=gt^`Ah;-oDhV[5Ki8EPOi8NYRiSibTio8tWioB(ZjQ,C_jlPUcjlPUck2tggk3(pj
kih9qlK[[#lg*p(m-X3-mdBQ4n*fc8nF5u<nac8BoCMSGo^qeJo_%nMp%A"Op@e4Sp\4IXq"XXZq>'j^
q>0saqYL*dr;?KkrVc]nrr<#us8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~^r""-`Q#s=aND]Mc-FY^dF-Lne^i@)g"P6<hV[8Nj5f=ak3(smlKdg(mI'H4nac;Dp%J.Tq>1!cr;HZq
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~H$FOVF`_\FEH#i6D/=!&Bk_6nAnGUb@q&kS?X@#C>[(B7=BAR)<`N*t;c6Ih:esk^:/";Q8P)HC7Rfg8
6pj:-5s[b#5!;"j4$,Mc3B/uW2`<QO1c$pC0eb:70.nh-/1W5#.Ocbn-71#b,U=TY+X%sM*Zc=B*??.@
*??.@*??.@*??.?*#oq<*#oq<*#fh9)]K_8)]K_8)]K_8)]K_8)]K_9*#oq<*#oq<*#oq<*#ot>*?H7D
+!2RI+<VdM+X/-U,U=Z^,pjrd-R^Ak-n$Mn.4Qes.P!#".kE5'/M/S-/hSe10JG490etL>1,C^C1c7-K
~>
<~?XI,G?!U]>>$>'2='&F&<)cdo;,C%a:/+DS8Ou?@779O26:!n&5<_4m3]T2[2`<NM1GLR:/hJV*.k2tr
-RL,c,U=TY+WqjK+!2OF*??.?*#fh8)AsD0(`4)+(Ddl((D[c%()7Q!'GM2o',(uk&eYcg&J5Qc&J5Te
&J5Te&J5Te&eYfi&eYik',)#n'GM5q'GM5r'bqGu()@Z$()Ic'(Dmu+(`=2/)&X;1)B'M4)B'P6*#ot>
*?H7D+!2RI+<_mP+sS?Y,UF``-7:/h-n$Mn.Olr!/1`A)/M8Y/0/,(70ekF>1GgsH2E!KQ3&ioZ3]fDc
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
239.775 230.751 mo
239.526 230.751 239.289 230.701 239.112 230.599 cv
234.236 227.783 li
234.058 227.681 233.971 227.544 233.971 227.401 cv
233.971 227.227 234.098 227.044 234.345 226.902 cv
240.101 223.578 li
240.348 223.436 240.664 223.363 240.964 223.363 cv
241.213 223.363 241.451 223.413 241.628 223.516 cv
246.504 226.33 li
246.682 226.433 246.769 226.57 246.769 226.714 cv
246.769 226.887 246.642 227.07 246.395 227.212 cv
240.639 230.535 li
240.392 230.678 240.075 230.751 239.775 230.751 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
247.305 235.099 mo
247.057 235.099 246.819 235.049 246.642 234.947 cv
241.766 232.131 li
241.589 232.029 241.502 231.892 241.501 231.748 cv
241.501 231.575 241.628 231.392 241.875 231.249 cv
247.631 227.926 li
247.879 227.783 248.195 227.71 248.496 227.71 cv
248.744 227.71 248.981 227.76 249.159 227.863 cv
254.035 230.678 li
254.212 230.781 254.299 230.918 254.299 231.061 cv
254.299 231.235 254.172 231.417 253.925 231.56 cv
248.169 234.883 li
247.922 235.026 247.605 235.099 247.305 235.099 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
257.72 231.509 mo
257.471 231.509 257.233 231.458 257.056 231.356 cv
252.18 228.54 li
252.003 228.438 251.916 228.301 251.916 228.158 cv
251.916 227.984 252.043 227.802 252.29 227.658 cv
257.121 224.869 li
257.369 224.727 257.686 224.654 257.986 224.654 cv
258.234 224.654 258.471 224.704 258.649 224.806 cv
263.525 227.621 li
263.702 227.723 263.789 227.861 263.789 228.004 cv
263.789 228.178 263.663 228.361 263.415 228.503 cv
258.584 231.292 li
258.337 231.435 258.02 231.509 257.72 231.509 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
265.25 235.856 mo
265.001 235.856 264.764 235.806 264.586 235.703 cv
259.71 232.888 li
259.533 232.786 259.446 232.649 259.446 232.505 cv
259.446 232.332 259.573 232.149 259.821 232.006 cv
264.652 229.217 li
264.899 229.074 265.216 229.001 265.516 229.001 cv
265.764 229.001 266.002 229.051 266.179 229.154 cv
271.055 231.969 li
271.233 232.071 271.32 232.208 271.32 232.352 cv
271.32 232.525 271.193 232.708 270.946 232.851 cv
266.115 235.64 li
265.867 235.783 265.551 235.856 265.25 235.856 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
272.78 240.204 mo
272.531 240.204 272.294 240.154 272.117 240.051 cv
267.241 237.236 li
267.063 237.133 266.976 236.996 266.977 236.853 cv
266.977 236.68 267.104 236.497 267.351 236.354 cv
272.182 233.565 li
272.429 233.422 272.746 233.349 273.046 233.349 cv
273.295 233.349 273.532 233.399 273.709 233.501 cv
278.585 236.317 li
278.763 236.419 278.85 236.556 278.85 236.7 cv
278.85 236.873 278.723 237.056 278.476 237.198 cv
273.645 239.988 li
273.398 240.131 273.081 240.204 272.78 240.204 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
280.311 244.552 mo
280.062 244.552 279.824 244.501 279.647 244.399 cv
274.771 241.583 li
274.593 241.481 274.507 241.344 274.507 241.201 cv
274.507 241.027 274.634 240.845 274.881 240.701 cv
279.712 237.912 li
279.96 237.77 280.276 237.697 280.576 237.697 cv
280.825 237.697 281.062 237.747 281.24 237.849 cv
286.116 240.664 li
286.293 240.767 286.38 240.904 286.38 241.047 cv
286.38 241.221 286.253 241.404 286.006 241.546 cv
281.175 244.335 li
280.928 244.478 280.611 244.552 280.311 244.552 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
287.841 248.899 mo
287.592 248.899 287.354 248.849 287.177 248.746 cv
282.301 245.931 li
282.124 245.829 282.037 245.692 282.037 245.548 cv
282.037 245.375 282.164 245.192 282.411 245.049 cv
287.243 242.26 li
287.49 242.117 287.806 242.044 288.107 242.044 cv
288.355 242.044 288.592 242.094 288.77 242.197 cv
293.646 245.012 li
293.823 245.114 293.91 245.251 293.91 245.395 cv
293.91 245.568 293.784 245.751 293.537 245.894 cv
288.705 248.683 li
288.458 248.826 288.141 248.899 287.841 248.899 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
295.37 253.247 mo
295.122 253.247 294.885 253.197 294.707 253.094 cv
289.831 250.279 li
289.654 250.176 289.567 250.039 289.567 249.896 cv
289.568 249.722 289.694 249.539 289.942 249.397 cv
294.773 246.608 li
295.02 246.465 295.337 246.392 295.638 246.392 cv
295.886 246.392 296.123 246.442 296.3 246.544 cv
301.176 249.36 li
301.354 249.462 301.441 249.599 301.441 249.743 cv
301.441 249.916 301.314 250.099 301.067 250.242 cv
296.236 253.031 li
295.988 253.173 295.671 253.247 295.37 253.247 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
302.901 257.594 mo
302.652 257.594 302.415 257.544 302.238 257.442 cv
297.362 254.626 li
297.184 254.524 297.097 254.387 297.098 254.243 cv
297.098 254.07 297.225 253.887 297.472 253.744 cv
302.303 250.955 li
302.55 250.812 302.867 250.739 303.167 250.739 cv
303.416 250.739 303.653 250.789 303.83 250.892 cv
308.706 253.707 li
308.884 253.81 308.971 253.946 308.971 254.09 cv
308.971 254.263 308.844 254.446 308.597 254.589 cv
303.766 257.378 li
303.519 257.521 303.202 257.594 302.901 257.594 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
310.431 261.942 mo
310.183 261.942 309.945 261.892 309.768 261.789 cv
304.892 258.974 li
304.715 258.872 304.628 258.735 304.628 258.591 cv
304.628 258.418 304.755 258.235 305.002 258.092 cv
309.833 255.303 li
310.081 255.16 310.397 255.087 310.697 255.087 cv
310.946 255.087 311.183 255.137 311.361 255.24 cv
316.237 258.055 li
316.414 258.157 316.501 258.294 316.501 258.438 cv
316.501 258.611 316.375 258.794 316.127 258.937 cv
311.296 261.726 li
311.049 261.868 310.732 261.942 310.431 261.942 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
317.962 266.289 mo
317.713 266.289 317.476 266.239 317.298 266.137 cv
312.422 263.322 li
312.245 263.219 312.158 263.082 312.158 262.939 cv
312.158 262.765 312.285 262.582 312.533 262.44 cv
317.364 259.651 li
317.611 259.507 317.927 259.434 318.228 259.434 cv
318.476 259.434 318.714 259.484 318.891 259.587 cv
323.767 262.403 li
323.944 262.505 324.031 262.642 324.031 262.785 cv
324.032 262.958 323.905 263.141 323.658 263.284 cv
318.827 266.073 li
318.579 266.216 318.262 266.289 317.962 266.289 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
325.492 270.637 mo
325.243 270.637 325.006 270.587 324.829 270.485 cv
319.952 267.669 li
319.775 267.567 319.688 267.43 319.688 267.286 cv
319.689 267.113 319.816 266.93 320.063 266.787 cv
324.894 263.998 li
325.141 263.855 325.458 263.782 325.758 263.782 cv
326.006 263.782 326.244 263.832 326.421 263.935 cv
331.297 266.75 li
331.475 266.852 331.562 266.989 331.562 267.133 cv
331.562 267.306 331.435 267.489 331.188 267.632 cv
326.357 270.421 li
326.109 270.564 325.792 270.637 325.492 270.637 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
268.815 229.45 mo
268.566 229.45 268.329 229.4 268.152 229.298 cv
263.276 226.483 li
263.098 226.38 263.011 226.243 263.011 226.099 cv
263.011 225.926 263.138 225.743 263.385 225.601 cv
268.217 222.811 li
268.465 222.668 268.781 222.595 269.081 222.595 cv
269.33 222.595 269.567 222.645 269.744 222.747 cv
274.62 225.563 li
274.798 225.665 274.885 225.803 274.885 225.946 cv
274.885 226.119 274.758 226.302 274.511 226.445 cv
269.679 229.235 li
269.432 229.377 269.115 229.45 268.815 229.45 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
261.173 225.038 mo
260.924 225.038 260.687 224.988 260.509 224.885 cv
255.633 222.07 li
255.456 221.967 255.369 221.83 255.369 221.687 cv
255.369 221.514 255.495 221.331 255.743 221.188 cv
260.575 218.399 li
260.822 218.256 261.139 218.183 261.439 218.183 cv
261.687 218.183 261.925 218.233 262.102 218.335 cv
266.978 221.151 li
267.155 221.253 267.242 221.39 267.242 221.534 cv
267.242 221.707 267.116 221.89 266.868 222.032 cv
262.036 224.821 li
261.789 224.965 261.473 225.038 261.173 225.038 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
253.518 220.618 mo
253.269 220.618 253.031 220.568 252.854 220.465 cv
242.352 214.403 li
242.174 214.3 242.088 214.163 242.088 214.019 cv
242.088 213.846 242.215 213.663 242.461 213.521 cv
247.293 210.731 li
247.541 210.588 247.857 210.515 248.158 210.515 cv
248.406 210.515 248.643 210.565 248.821 210.667 cv
259.323 216.731 li
259.5 216.833 259.587 216.971 259.587 217.114 cv
259.587 217.287 259.461 217.47 259.213 217.613 cv
254.381 220.403 li
254.134 220.545 253.818 220.618 253.518 220.618 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
258.868 215.243 mo
258.62 215.243 258.382 215.193 258.205 215.091 cv
249.682 210.17 li
249.505 210.068 249.418 209.93 249.418 209.787 cv
249.418 209.614 249.545 209.431 249.792 209.288 cv
254.623 206.498 li
254.87 206.356 255.187 206.283 255.487 206.283 cv
255.735 206.283 255.973 206.333 256.151 206.436 cv
264.673 211.356 li
264.851 211.458 264.938 211.595 264.938 211.739 cv
264.938 211.912 264.811 212.095 264.564 212.238 cv
259.733 215.028 li
259.485 215.17 259.168 215.243 258.868 215.243 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
276.345 233.798 mo
276.096 233.798 275.859 233.748 275.682 233.646 cv
270.806 230.83 li
270.629 230.728 270.542 230.591 270.542 230.447 cv
270.542 230.274 270.668 230.091 270.915 229.949 cv
275.747 227.158 li
275.995 227.016 276.312 226.943 276.612 226.943 cv
276.86 226.943 277.097 226.993 277.275 227.095 cv
282.151 229.91 li
282.328 230.013 282.415 230.15 282.415 230.294 cv
282.415 230.467 282.289 230.65 282.041 230.792 cv
277.209 233.582 li
276.962 233.725 276.645 233.798 276.345 233.798 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
283.876 238.146 mo
283.628 238.146 283.39 238.095 283.212 237.992 cv
278.336 235.178 li
278.159 235.075 278.072 234.938 278.072 234.795 cv
278.072 234.621 278.198 234.439 278.446 234.296 cv
283.278 231.506 li
283.525 231.363 283.842 231.29 284.142 231.29 cv
284.391 231.29 284.628 231.34 284.805 231.443 cv
289.681 234.258 li
289.858 234.361 289.945 234.498 289.945 234.641 cv
289.946 234.815 289.819 234.997 289.572 235.14 cv
284.74 237.93 li
284.492 238.072 284.176 238.146 283.876 238.146 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
291.407 242.493 mo
291.158 242.493 290.92 242.443 290.742 242.34 cv
285.867 239.526 li
285.689 239.423 285.602 239.286 285.602 239.142 cv
285.602 238.969 285.729 238.786 285.976 238.644 cv
290.808 235.854 li
291.055 235.711 291.372 235.638 291.672 235.638 cv
291.921 235.638 292.158 235.688 292.335 235.79 cv
297.211 238.606 li
297.389 238.708 297.476 238.846 297.476 238.989 cv
297.476 239.162 297.349 239.345 297.102 239.488 cv
292.27 242.278 li
292.023 242.42 291.707 242.493 291.407 242.493 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
298.937 246.841 mo
298.688 246.841 298.45 246.79 298.273 246.688 cv
293.397 243.873 li
293.219 243.771 293.132 243.633 293.132 243.49 cv
293.132 243.317 293.259 243.134 293.506 242.991 cv
298.338 240.201 li
298.586 240.059 298.902 239.986 299.203 239.986 cv
299.451 239.986 299.688 240.036 299.866 240.138 cv
304.742 242.953 li
304.919 243.056 305.006 243.193 305.006 243.337 cv
305.006 243.51 304.879 243.693 304.632 243.835 cv
299.8 246.625 li
299.553 246.768 299.237 246.841 298.937 246.841 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
306.467 251.188 mo
306.218 251.188 305.981 251.138 305.803 251.035 cv
300.927 248.22 li
300.75 248.118 300.663 247.981 300.663 247.837 cv
300.663 247.664 300.789 247.481 301.037 247.338 cv
305.868 244.549 li
306.116 244.406 306.433 244.333 306.733 244.333 cv
306.981 244.333 307.219 244.383 307.396 244.486 cv
312.272 247.301 li
312.449 247.404 312.536 247.541 312.536 247.684 cv
312.536 247.858 312.41 248.04 312.162 248.183 cv
307.33 250.972 li
307.083 251.115 306.767 251.188 306.467 251.188 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
313.997 255.536 mo
313.748 255.536 313.511 255.486 313.333 255.383 cv
308.457 252.568 li
308.28 252.465 308.193 252.328 308.193 252.185 cv
308.193 252.012 308.319 251.829 308.567 251.686 cv
313.399 248.897 li
313.646 248.754 313.963 248.681 314.263 248.681 cv
314.512 248.681 314.749 248.731 314.926 248.833 cv
319.802 251.649 li
319.98 251.751 320.067 251.888 320.067 252.032 cv
320.067 252.205 319.94 252.388 319.693 252.53 cv
314.861 255.32 li
314.613 255.463 314.297 255.536 313.997 255.536 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
321.527 259.884 mo
321.278 259.884 321.041 259.833 320.864 259.731 cv
315.988 256.915 li
315.81 256.813 315.723 256.676 315.723 256.533 cv
315.723 256.359 315.85 256.177 316.097 256.033 cv
320.929 253.244 li
321.176 253.102 321.493 253.029 321.793 253.029 cv
322.042 253.029 322.279 253.079 322.456 253.181 cv
327.332 255.996 li
327.51 256.098 327.597 256.236 327.597 256.379 cv
327.597 256.553 327.47 256.736 327.223 256.878 cv
322.391 259.667 li
322.144 259.81 321.827 259.884 321.527 259.884 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
329.057 264.231 mo
328.809 264.231 328.571 264.181 328.394 264.078 cv
323.518 261.263 li
323.34 261.161 323.253 261.024 323.253 260.88 cv
323.253 260.707 323.38 260.524 323.627 260.381 cv
328.459 257.592 li
328.707 257.449 329.023 257.376 329.324 257.376 cv
329.572 257.376 329.809 257.426 329.987 257.529 cv
334.863 260.344 li
335.04 260.446 335.127 260.583 335.127 260.727 cv
335.127 260.9 335.001 261.083 334.753 261.226 cv
329.921 264.015 li
329.674 264.158 329.357 264.231 329.057 264.231 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
336.588 268.579 mo
336.339 268.579 336.102 268.529 335.924 268.426 cv
331.048 265.611 li
330.871 265.508 330.784 265.371 330.784 265.228 cv
330.784 265.055 330.91 264.872 331.158 264.729 cv
335.99 261.94 li
336.237 261.797 336.554 261.724 336.854 261.724 cv
337.102 261.724 337.34 261.774 337.517 261.876 cv
342.393 264.692 li
342.57 264.794 342.657 264.931 342.657 265.075 cv
342.657 265.248 342.531 265.431 342.284 265.573 cv
337.452 268.363 li
337.204 268.506 336.888 268.579 336.588 268.579 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
349.975 276.308 mo
349.726 276.308 349.489 276.258 349.312 276.156 cv
338.672 270.013 li
338.495 269.91 338.408 269.773 338.408 269.63 cv
338.408 269.456 338.534 269.274 338.782 269.131 cv
343.614 266.341 li
343.86 266.198 344.177 266.125 344.478 266.125 cv
344.726 266.125 344.964 266.175 345.141 266.278 cv
355.78 272.42 li
355.957 272.523 356.044 272.66 356.044 272.803 cv
356.044 272.977 355.918 273.159 355.67 273.302 cv
350.839 276.092 li
350.592 276.235 350.275 276.308 349.975 276.308 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
364.636 267.844 mo
364.387 267.844 364.15 267.793 363.972 267.691 cv
354.992 262.506 li
354.814 262.404 354.727 262.267 354.728 262.123 cv
354.728 261.95 354.855 261.767 355.102 261.624 cv
359.933 258.835 li
360.18 258.692 360.497 258.619 360.798 258.619 cv
361.046 258.619 361.283 258.669 361.46 258.772 cv
370.441 263.956 li
370.618 264.059 370.705 264.196 370.705 264.339 cv
370.705 264.513 370.578 264.696 370.33 264.838 cv
365.499 267.627 li
365.252 267.77 364.936 267.844 364.636 267.844 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
289.534 232.947 mo
289.285 232.947 289.047 232.897 288.869 232.794 cv
283.993 229.98 li
283.816 229.877 283.729 229.74 283.729 229.596 cv
283.729 229.423 283.856 229.241 284.103 229.098 cv
288.934 226.308 li
289.181 226.165 289.498 226.092 289.799 226.092 cv
290.047 226.092 290.284 226.142 290.461 226.244 cv
295.338 229.06 li
295.516 229.162 295.602 229.3 295.602 229.443 cv
295.602 229.616 295.475 229.799 295.228 229.942 cv
290.397 232.732 li
290.15 232.874 289.834 232.947 289.534 232.947 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
281.815 228.491 mo
281.566 228.491 281.329 228.441 281.152 228.339 cv
276.276 225.524 li
276.098 225.421 276.011 225.284 276.011 225.14 cv
276.011 224.967 276.138 224.784 276.385 224.642 cv
281.216 221.853 li
281.464 221.71 281.78 221.636 282.081 221.636 cv
282.329 221.636 282.567 221.687 282.745 221.789 cv
287.62 224.605 li
287.798 224.707 287.885 224.844 287.885 224.987 cv
287.884 225.161 287.758 225.343 287.511 225.487 cv
282.679 228.276 li
282.432 228.418 282.115 228.491 281.815 228.491 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
274.097 224.036 mo
273.849 224.036 273.611 223.986 273.434 223.883 cv
268.558 221.068 li
268.381 220.965 268.294 220.828 268.293 220.685 cv
268.293 220.512 268.42 220.329 268.667 220.186 cv
273.499 217.397 li
273.747 217.254 274.063 217.181 274.364 217.181 cv
274.612 217.181 274.849 217.231 275.027 217.333 cv
279.903 220.149 li
280.08 220.251 280.167 220.388 280.167 220.532 cv
280.167 220.705 280.041 220.888 279.793 221.03 cv
274.961 223.82 li
274.714 223.963 274.398 224.036 274.097 224.036 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
266.381 219.58 mo
266.132 219.58 265.894 219.53 265.716 219.427 cv
260.84 216.613 li
260.663 216.51 260.576 216.373 260.576 216.229 cv
260.576 216.056 260.703 215.873 260.95 215.731 cv
265.782 212.941 li
266.029 212.798 266.345 212.725 266.646 212.725 cv
266.894 212.725 267.132 212.775 267.309 212.877 cv
272.185 215.693 li
272.362 215.795 272.449 215.932 272.449 216.076 cv
272.449 216.249 272.323 216.432 272.076 216.575 cv
267.244 219.365 li
266.997 219.507 266.681 219.58 266.381 219.58 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
297.064 237.295 mo
296.815 237.295 296.577 237.245 296.4 237.142 cv
291.524 234.327 li
291.346 234.225 291.259 234.088 291.259 233.944 cv
291.259 233.771 291.386 233.588 291.633 233.446 cv
296.464 230.656 li
296.712 230.513 297.029 230.44 297.329 230.44 cv
297.578 230.44 297.815 230.49 297.992 230.592 cv
302.869 233.407 li
303.046 233.51 303.133 233.647 303.133 233.791 cv
303.132 233.964 303.005 234.147 302.758 234.289 cv
297.927 237.079 li
297.68 237.222 297.364 237.295 297.064 237.295 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
304.594 241.643 mo
304.345 241.643 304.108 241.592 303.93 241.489 cv
299.054 238.675 li
298.877 238.572 298.79 238.435 298.79 238.292 cv
298.789 238.118 298.916 237.935 299.163 237.792 cv
303.995 235.003 li
304.242 234.861 304.559 234.787 304.859 234.787 cv
305.107 234.787 305.344 234.837 305.522 234.94 cv
310.399 237.755 li
310.576 237.858 310.663 237.995 310.663 238.138 cv
310.663 238.312 310.536 238.494 310.288 238.637 cv
305.457 241.427 li
305.21 241.569 304.894 241.643 304.594 241.643 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
312.124 245.99 mo
311.875 245.99 311.638 245.94 311.46 245.837 cv
306.584 243.022 li
306.407 242.919 306.32 242.783 306.32 242.639 cv
306.32 242.466 306.446 242.283 306.694 242.14 cv
311.525 239.351 li
311.772 239.208 312.089 239.135 312.389 239.135 cv
312.638 239.135 312.875 239.185 313.052 239.287 cv
317.929 242.103 li
318.107 242.205 318.193 242.342 318.193 242.486 cv
318.193 242.659 318.066 242.842 317.819 242.985 cv
312.988 245.774 li
312.74 245.917 312.424 245.99 312.124 245.99 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
319.654 250.338 mo
319.405 250.338 319.168 250.287 318.991 250.185 cv
314.115 247.369 li
313.937 247.267 313.85 247.13 313.85 246.987 cv
313.85 246.814 313.977 246.631 314.224 246.487 cv
319.055 243.698 li
319.302 243.556 319.619 243.483 319.919 243.483 cv
320.168 243.483 320.405 243.533 320.582 243.635 cv
325.459 246.45 li
325.637 246.553 325.724 246.69 325.723 246.833 cv
325.723 247.007 325.596 247.19 325.349 247.332 cv
320.518 250.121 li
320.271 250.264 319.954 250.338 319.654 250.338 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
327.184 254.685 mo
326.936 254.685 326.698 254.635 326.521 254.532 cv
321.645 251.717 li
321.467 251.615 321.38 251.478 321.38 251.334 cv
321.38 251.161 321.507 250.978 321.754 250.835 cv
326.585 248.046 li
326.833 247.903 327.149 247.83 327.449 247.83 cv
327.698 247.83 327.935 247.88 328.113 247.983 cv
332.99 250.798 li
333.167 250.9 333.253 251.037 333.253 251.181 cv
333.253 251.354 333.127 251.537 332.879 251.68 cv
328.048 254.469 li
327.801 254.612 327.484 254.685 327.184 254.685 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
334.714 259.033 mo
334.466 259.033 334.229 258.983 334.051 258.88 cv
329.175 256.065 li
328.998 255.962 328.911 255.826 328.911 255.682 cv
328.911 255.509 329.037 255.326 329.284 255.183 cv
334.116 252.394 li
334.363 252.251 334.68 252.178 334.98 252.178 cv
335.228 252.178 335.466 252.228 335.643 252.33 cv
340.52 255.146 li
340.697 255.248 340.784 255.385 340.784 255.529 cv
340.783 255.702 340.657 255.885 340.409 256.027 cv
335.578 258.817 li
335.331 258.96 335.015 259.033 334.714 259.033 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
342.245 263.381 mo
341.996 263.381 341.759 263.33 341.581 263.228 cv
336.705 260.412 li
336.528 260.31 336.441 260.173 336.441 260.029 cv
336.441 259.856 336.568 259.673 336.815 259.531 cv
341.646 256.741 li
341.893 256.599 342.21 256.526 342.51 256.526 cv
342.759 256.526 342.996 256.576 343.173 256.678 cv
348.05 259.493 li
348.227 259.596 348.314 259.733 348.314 259.876 cv
348.314 260.05 348.187 260.233 347.94 260.375 cv
343.109 263.164 li
342.862 263.307 342.545 263.381 342.245 263.381 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
349.774 267.728 mo
349.526 267.728 349.289 267.678 349.112 267.575 cv
344.236 264.76 li
344.058 264.658 343.971 264.521 343.971 264.377 cv
343.971 264.204 344.098 264.021 344.345 263.878 cv
349.176 261.089 li
349.423 260.946 349.74 260.873 350.04 260.873 cv
350.289 260.873 350.526 260.923 350.704 261.026 cv
355.581 263.841 li
355.757 263.943 355.844 264.08 355.844 264.224 cv
355.844 264.397 355.717 264.58 355.47 264.723 cv
350.639 267.512 li
350.391 267.655 350.074 267.728 349.774 267.728 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
357.305 272.075 mo
357.057 272.075 356.819 272.025 356.642 271.923 cv
351.766 269.108 li
351.589 269.005 351.501 268.868 351.501 268.725 cv
351.501 268.551 351.628 268.368 351.875 268.226 cv
356.706 265.437 li
356.954 265.294 357.27 265.22 357.57 265.22 cv
357.819 265.22 358.056 265.271 358.234 265.373 cv
363.111 268.189 li
363.288 268.291 363.374 268.428 363.374 268.571 cv
363.374 268.745 363.248 268.927 363 269.071 cv
358.169 271.86 li
357.922 272.002 357.605 272.075 357.305 272.075 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
285.567 222.194 mo
285.319 222.194 285.081 222.143 284.904 222.041 cv
280.028 219.226 li
279.85 219.124 279.763 218.986 279.764 218.843 cv
279.764 218.669 279.891 218.487 280.138 218.344 cv
284.969 215.555 li
285.216 215.412 285.533 215.338 285.833 215.338 cv
286.082 215.338 286.319 215.389 286.496 215.491 cv
291.372 218.307 li
291.55 218.409 291.637 218.546 291.637 218.69 cv
291.637 218.863 291.51 219.046 291.263 219.189 cv
286.432 221.978 li
286.185 222.12 285.868 222.194 285.567 222.194 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
278.075 217.868 mo
277.826 217.868 277.589 217.818 277.411 217.715 cv
272.536 214.9 li
272.358 214.797 272.271 214.66 272.271 214.517 cv
272.271 214.343 272.398 214.16 272.645 214.018 cv
277.476 211.229 li
277.723 211.086 278.04 211.013 278.341 211.013 cv
278.589 211.013 278.826 211.063 279.003 211.165 cv
283.88 213.981 li
284.058 214.083 284.145 214.22 284.144 214.364 cv
284.144 214.537 284.017 214.72 283.77 214.863 cv
278.939 217.652 li
278.692 217.795 278.375 217.868 278.075 217.868 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
270.582 213.542 mo
270.333 213.542 270.096 213.492 269.918 213.389 cv
265.042 210.573 li
264.865 210.471 264.778 210.334 264.778 210.191 cv
264.778 210.018 264.904 209.835 265.152 209.692 cv
269.984 206.903 li
270.231 206.76 270.548 206.687 270.848 206.687 cv
271.097 206.687 271.334 206.737 271.511 206.839 cv
276.387 209.654 li
276.564 209.757 276.651 209.894 276.652 210.037 cv
276.652 210.211 276.525 210.394 276.278 210.536 cv
271.446 213.325 li
271.198 213.469 270.882 213.542 270.582 213.542 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
263.09 209.216 mo
262.841 209.216 262.603 209.165 262.426 209.063 cv
257.549 206.248 li
257.372 206.146 257.285 206.008 257.285 205.865 cv
257.285 205.692 257.412 205.509 257.659 205.366 cv
262.491 202.576 li
262.738 202.434 263.055 202.361 263.355 202.361 cv
263.603 202.361 263.841 202.411 264.018 202.513 cv
268.894 205.328 li
269.071 205.431 269.158 205.568 269.158 205.712 cv
269.158 205.885 269.032 206.068 268.784 206.21 cv
263.953 209 li
263.706 209.143 263.39 209.216 263.09 209.216 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
270.794 204.767 mo
270.545 204.767 270.308 204.717 270.13 204.615 cv
265.254 201.799 li
265.077 201.697 264.99 201.56 264.99 201.416 cv
264.99 201.243 265.117 201.06 265.364 200.917 cv
266.961 199.995 li
267.209 199.853 267.525 199.78 267.825 199.78 cv
268.074 199.78 268.311 199.83 268.489 199.932 cv
273.365 202.747 li
273.542 202.85 273.629 202.987 273.629 203.131 cv
273.629 203.304 273.503 203.487 273.255 203.629 cv
271.658 204.551 li
271.411 204.694 271.094 204.767 270.794 204.767 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
280.572 210.413 mo
280.323 210.413 280.086 210.363 279.909 210.26 cv
275.033 207.445 li
274.855 207.342 274.768 207.205 274.768 207.062 cv
274.768 206.889 274.895 206.706 275.142 206.563 cv
276.74 205.641 li
276.987 205.498 277.304 205.425 277.604 205.425 cv
277.852 205.425 278.09 205.475 278.267 205.577 cv
283.143 208.393 li
283.32 208.495 283.407 208.633 283.407 208.776 cv
283.407 208.949 283.281 209.132 283.034 209.275 cv
281.436 210.197 li
281.189 210.34 280.872 210.413 280.572 210.413 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
288.034 214.721 mo
287.785 214.721 287.548 214.671 287.371 214.569 cv
282.494 211.753 li
282.317 211.65 282.23 211.513 282.23 211.37 cv
282.23 211.197 282.357 211.014 282.604 210.871 cv
284.201 209.948 li
284.448 209.806 284.764 209.733 285.064 209.733 cv
285.313 209.733 285.551 209.783 285.729 209.886 cv
290.605 212.7 li
290.782 212.803 290.869 212.94 290.869 213.084 cv
290.869 213.257 290.742 213.44 290.494 213.582 cv
288.898 214.505 li
288.651 214.648 288.334 214.721 288.034 214.721 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
295.495 219.029 mo
295.246 219.029 295.009 218.978 294.831 218.876 cv
289.955 216.061 li
289.778 215.959 289.691 215.822 289.691 215.678 cv
289.692 215.504 289.819 215.322 290.066 215.179 cv
291.662 214.257 li
291.91 214.114 292.226 214.041 292.526 214.041 cv
292.775 214.041 293.012 214.091 293.19 214.194 cv
298.066 217.009 li
298.243 217.111 298.33 217.248 298.33 217.392 cv
298.33 217.565 298.204 217.748 297.956 217.891 cv
296.36 218.813 li
296.112 218.955 295.795 219.029 295.495 219.029 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
302.957 223.337 mo
302.708 223.337 302.471 223.286 302.293 223.184 cv
297.417 220.368 li
297.24 220.266 297.153 220.129 297.153 219.986 cv
297.153 219.813 297.279 219.63 297.527 219.487 cv
299.124 218.565 li
299.372 218.422 299.689 218.349 299.989 218.349 cv
300.237 218.349 300.474 218.399 300.652 218.501 cv
305.528 221.317 li
305.705 221.419 305.792 221.556 305.792 221.7 cv
305.792 221.873 305.666 222.056 305.418 222.198 cv
303.821 223.12 li
303.573 223.264 303.257 223.337 302.957 223.337 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
344.614 247.387 mo
344.365 247.387 344.128 247.337 343.951 247.235 cv
339.075 244.419 li
338.897 244.317 338.81 244.18 338.81 244.036 cv
338.81 243.863 338.937 243.68 339.184 243.537 cv
340.781 242.616 li
341.028 242.473 341.345 242.4 341.645 242.4 cv
341.894 242.4 342.131 242.45 342.308 242.552 cv
347.185 245.367 li
347.362 245.47 347.449 245.607 347.449 245.75 cv
347.449 245.924 347.322 246.107 347.075 246.249 cv
345.478 247.171 li
345.231 247.314 344.914 247.387 344.614 247.387 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
352.076 251.695 mo
351.827 251.695 351.589 251.645 351.411 251.542 cv
346.536 248.728 li
346.358 248.625 346.271 248.488 346.271 248.344 cv
346.272 248.171 346.399 247.988 346.646 247.845 cv
348.243 246.923 li
348.49 246.78 348.806 246.707 349.107 246.707 cv
349.355 246.707 349.592 246.757 349.77 246.86 cv
354.646 249.675 li
354.823 249.778 354.91 249.915 354.91 250.058 cv
354.91 250.232 354.784 250.414 354.536 250.557 cv
352.94 251.48 li
352.693 251.622 352.376 251.695 352.076 251.695 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
359.537 256.003 mo
359.288 256.003 359.051 255.953 358.873 255.851 cv
353.997 253.035 li
353.82 252.933 353.733 252.796 353.733 252.652 cv
353.733 252.479 353.86 252.296 354.107 252.154 cv
355.704 251.232 li
355.952 251.089 356.268 251.015 356.568 251.015 cv
356.817 251.015 357.054 251.066 357.232 251.168 cv
362.108 253.984 li
362.285 254.086 362.372 254.223 362.372 254.366 cv
362.372 254.539 362.246 254.722 361.998 254.866 cv
360.401 255.787 li
360.153 255.93 359.837 256.003 359.537 256.003 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
366.998 260.311 mo
366.75 260.311 366.513 260.261 366.335 260.158 cv
361.459 257.343 li
361.282 257.241 361.195 257.104 361.195 256.96 cv
361.195 256.787 361.321 256.604 361.569 256.461 cv
363.165 255.539 li
363.413 255.397 363.73 255.324 364.03 255.324 cv
364.279 255.324 364.516 255.374 364.693 255.476 cv
369.57 258.291 li
369.747 258.393 369.834 258.531 369.834 258.674 cv
369.834 258.848 369.707 259.03 369.459 259.173 cv
367.863 260.095 li
367.615 260.238 367.298 260.311 366.998 260.311 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
293.098 226.541 mo
292.849 226.541 292.611 226.491 292.434 226.389 cv
287.558 223.573 li
287.381 223.471 287.294 223.334 287.294 223.19 cv
287.294 223.017 287.421 222.834 287.668 222.692 cv
292.499 219.903 li
292.747 219.759 293.063 219.686 293.363 219.686 cv
293.612 219.686 293.849 219.736 294.027 219.839 cv
298.903 222.654 li
299.08 222.757 299.167 222.894 299.167 223.037 cv
299.167 223.21 299.041 223.393 298.793 223.536 cv
293.962 226.325 li
293.715 226.468 293.398 226.541 293.098 226.541 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
300.628 230.889 mo
300.379 230.889 300.142 230.839 299.964 230.736 cv
295.088 227.921 li
294.911 227.818 294.824 227.681 294.824 227.538 cv
294.824 227.364 294.951 227.182 295.199 227.039 cv
300.03 224.249 li
300.277 224.107 300.593 224.034 300.893 224.034 cv
301.142 224.034 301.379 224.084 301.557 224.187 cv
306.433 227.001 li
306.61 227.104 306.697 227.241 306.697 227.385 cv
306.697 227.558 306.571 227.741 306.324 227.884 cv
301.493 230.673 li
301.245 230.816 300.928 230.889 300.628 230.889 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
308.158 235.236 mo
307.909 235.236 307.672 235.186 307.495 235.084 cv
302.618 232.269 li
302.441 232.166 302.354 232.029 302.354 231.885 cv
302.355 231.712 302.482 231.529 302.729 231.387 cv
307.56 228.597 li
307.807 228.454 308.123 228.381 308.423 228.381 cv
308.672 228.381 308.91 228.432 309.087 228.534 cv
313.963 231.349 li
314.141 231.452 314.228 231.589 314.228 231.732 cv
314.228 231.906 314.101 232.088 313.854 232.231 cv
309.023 235.021 li
308.775 235.163 308.459 235.236 308.158 235.236 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
315.688 239.584 mo
315.44 239.584 315.202 239.534 315.025 239.432 cv
310.149 236.616 li
309.971 236.514 309.885 236.377 309.885 236.233 cv
309.885 236.06 310.012 235.877 310.259 235.735 cv
315.09 232.945 li
315.337 232.802 315.654 232.729 315.954 232.729 cv
316.202 232.729 316.44 232.779 316.617 232.882 cv
321.494 235.697 li
321.671 235.799 321.758 235.936 321.758 236.08 cv
321.758 236.253 321.631 236.436 321.384 236.578 cv
316.553 239.368 li
316.306 239.511 315.989 239.584 315.688 239.584 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
323.219 243.932 mo
322.97 243.932 322.732 243.882 322.555 243.78 cv
317.679 240.964 li
317.502 240.861 317.415 240.724 317.415 240.581 cv
317.415 240.408 317.542 240.225 317.789 240.082 cv
322.621 237.292 li
322.868 237.15 323.185 237.077 323.485 237.077 cv
323.733 237.077 323.97 237.127 324.148 237.229 cv
329.024 240.044 li
329.201 240.147 329.288 240.284 329.288 240.428 cv
329.288 240.601 329.162 240.783 328.914 240.926 cv
324.083 243.716 li
323.836 243.859 323.519 243.932 323.219 243.932 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
330.749 248.279 mo
330.5 248.279 330.263 248.229 330.085 248.127 cv
325.209 245.312 li
325.032 245.209 324.945 245.072 324.945 244.928 cv
324.945 244.755 325.072 244.573 325.32 244.43 cv
330.151 241.64 li
330.398 241.497 330.715 241.424 331.015 241.424 cv
331.264 241.424 331.501 241.474 331.678 241.576 cv
336.554 244.392 li
336.731 244.494 336.818 244.632 336.819 244.775 cv
336.819 244.948 336.692 245.131 336.445 245.274 cv
331.614 248.064 li
331.366 248.206 331.049 248.279 330.749 248.279 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
338.28 252.627 mo
338.031 252.627 337.793 252.577 337.616 252.474 cv
332.74 249.659 li
332.562 249.557 332.475 249.42 332.476 249.276 cv
332.476 249.103 332.603 248.92 332.85 248.778 cv
337.681 245.988 li
337.928 245.845 338.245 245.772 338.545 245.772 cv
338.794 245.772 339.031 245.822 339.208 245.924 cv
344.084 248.739 li
344.262 248.842 344.349 248.979 344.349 249.123 cv
344.349 249.296 344.222 249.479 343.975 249.621 cv
339.144 252.411 li
338.897 252.554 338.58 252.627 338.28 252.627 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
345.81 256.975 mo
345.561 256.975 345.323 256.924 345.146 256.821 cv
340.27 254.007 li
340.092 253.904 340.006 253.767 340.006 253.624 cv
340.006 253.45 340.133 253.268 340.38 253.125 cv
345.211 250.335 li
345.459 250.193 345.775 250.119 346.076 250.119 cv
346.324 250.119 346.561 250.17 346.739 250.272 cv
351.615 253.087 li
351.792 253.19 351.879 253.327 351.879 253.471 cv
351.879 253.644 351.753 253.826 351.505 253.969 cv
346.674 256.759 li
346.427 256.902 346.111 256.975 345.81 256.975 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
353.341 261.322 mo
353.092 261.322 352.854 261.272 352.676 261.169 cv
347.8 258.355 li
347.623 258.252 347.536 258.115 347.536 257.971 cv
347.536 257.798 347.663 257.616 347.91 257.473 cv
352.741 254.683 li
352.989 254.54 353.306 254.467 353.606 254.467 cv
353.854 254.467 354.092 254.517 354.269 254.619 cv
359.145 257.435 li
359.322 257.537 359.409 257.675 359.409 257.818 cv
359.409 257.991 359.283 258.174 359.035 258.317 cv
354.204 261.107 li
353.957 261.249 353.641 261.322 353.341 261.322 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
250.047 227.078 mo
249.798 227.078 249.56 227.028 249.382 226.925 cv
235.022 218.634 li
234.844 218.532 234.757 218.395 234.757 218.251 cv
234.757 218.078 234.884 217.895 235.131 217.752 cv
239.963 214.963 li
240.211 214.82 240.527 214.747 240.828 214.747 cv
241.076 214.747 241.313 214.797 241.491 214.9 cv
255.851 223.191 li
256.028 223.293 256.115 223.43 256.115 223.574 cv
256.116 223.747 255.989 223.93 255.742 224.073 cv
250.911 226.863 li
250.663 227.005 250.347 227.078 250.047 227.078 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
342.557 280.489 mo
342.309 280.489 342.071 280.439 341.894 280.337 cv
327.533 272.045 li
327.355 271.943 327.268 271.806 327.268 271.663 cv
327.269 271.489 327.396 271.306 327.643 271.163 cv
332.474 268.374 li
332.721 268.232 333.038 268.158 333.338 268.158 cv
333.587 268.158 333.824 268.209 334.001 268.311 cv
348.363 276.602 li
348.54 276.704 348.627 276.842 348.627 276.985 cv
348.626 277.158 348.5 277.341 348.252 277.484 cv
343.421 280.274 li
343.174 280.416 342.857 280.489 342.557 280.489 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
312.442 272.706 mo
312.194 272.706 311.957 272.656 311.78 272.554 cv
306.903 269.739 li
306.725 269.636 306.638 269.499 306.639 269.355 cv
306.639 269.182 306.766 268.999 307.013 268.857 cv
312.768 265.533 li
313.015 265.391 313.332 265.318 313.633 265.318 cv
313.881 265.318 314.118 265.368 314.295 265.47 cv
319.172 268.285 li
319.35 268.388 319.437 268.525 319.436 268.668 cv
319.436 268.842 319.309 269.025 319.062 269.167 cv
313.307 272.49 li
313.06 272.633 312.743 272.706 312.442 272.706 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
257.758 241.134 mo
257.509 241.134 257.272 241.083 257.094 240.981 cv
249.296 236.479 li
249.119 236.377 249.032 236.239 249.032 236.096 cv
249.032 235.922 249.158 235.74 249.406 235.597 cv
255.161 232.274 li
255.409 232.131 255.726 232.058 256.026 232.058 cv
256.274 232.058 256.512 232.108 256.689 232.21 cv
264.487 236.713 li
264.664 236.815 264.751 236.952 264.751 237.096 cv
264.751 237.269 264.625 237.452 264.377 237.595 cv
258.621 240.918 li
258.374 241.061 258.058 241.134 257.758 241.134 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
305.187 268.517 mo
304.939 268.517 304.701 268.467 304.524 268.365 cv
296.725 263.863 li
296.547 263.76 296.461 263.623 296.461 263.479 cv
296.461 263.306 296.588 263.123 296.835 262.981 cv
302.59 259.657 li
302.838 259.515 303.155 259.442 303.455 259.442 cv
303.704 259.442 303.941 259.492 304.118 259.594 cv
311.916 264.096 li
312.094 264.199 312.181 264.336 312.181 264.479 cv
312.181 264.653 312.054 264.836 311.807 264.979 cv
306.051 268.301 li
305.804 268.444 305.487 268.517 305.187 268.517 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
267.991 247.272 mo
267.98 247.266 267.969 247.26 267.958 247.254 cv
260.161 242.751 li
259.983 242.649 259.896 242.512 259.896 242.368 cv
259.896 242.195 260.023 242.012 260.27 241.869 cv
266.026 238.546 li
266.273 238.404 266.589 238.331 266.889 238.331 cv
267.138 238.331 267.376 238.381 267.553 238.484 cv
267.606 238.514 li
260.213 242.781 li
267.991 247.272 li
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
275.374 242.999 mo
268.773 239.188 li
275.352 242.986 li
275.359 242.99 275.367 242.994 275.374 242.999 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
294.88 262.539 mo
294.605 262.539 294.329 262.478 294.118 262.357 cv
267.991 247.272 li
260.213 242.781 li
267.606 238.514 li
275.374 242.999 li
301.511 258.089 li
301.722 258.21 301.827 258.369 301.827 258.529 cv
301.827 258.688 301.722 258.847 301.511 258.968 cv
295.642 262.357 li
295.432 262.478 295.156 262.539 294.88 262.539 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
335.104 285.831 mo
334.9 285.831 334.705 285.79 334.56 285.706 cv
329.128 282.57 li
328.983 282.486 328.912 282.374 328.912 282.256 cv
328.912 282.115 329.016 281.965 329.219 281.848 cv
331.573 280.488 li
331.776 280.371 332.036 280.311 332.282 280.311 cv
332.486 280.311 332.68 280.352 332.826 280.436 cv
338.256 283.572 li
338.402 283.656 338.473 283.768 338.473 283.886 cv
338.473 284.028 338.369 284.178 338.166 284.295 cv
335.812 285.654 li
335.609 285.771 335.35 285.831 335.104 285.831 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
327.511 281.448 mo
327.307 281.448 327.113 281.407 326.967 281.322 cv
321.536 278.187 li
321.391 278.103 321.32 277.99 321.319 277.873 cv
321.319 277.731 321.423 277.581 321.626 277.464 cv
323.981 276.105 li
324.183 275.988 324.443 275.928 324.689 275.928 cv
324.892 275.928 325.087 275.969 325.233 276.053 cv
330.663 279.189 li
330.809 279.272 330.88 279.385 330.88 279.502 cv
330.88 279.644 330.777 279.794 330.574 279.911 cv
328.219 281.271 li
328.017 281.388 327.757 281.448 327.511 281.448 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
319.981 277.1 mo
319.777 277.1 319.582 277.059 319.437 276.975 cv
314.006 273.839 li
313.861 273.755 313.789 273.643 313.789 273.525 cv
313.789 273.383 313.893 273.233 314.096 273.116 cv
316.451 271.757 li
316.653 271.64 316.912 271.58 317.158 271.58 cv
317.362 271.58 317.557 271.621 317.703 271.705 cv
323.133 274.841 li
323.279 274.925 323.35 275.037 323.35 275.155 cv
323.35 275.297 323.246 275.447 323.043 275.564 cv
320.689 276.923 li
320.486 277.04 320.227 277.1 319.981 277.1 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
331.67 279.047 mo
331.466 279.047 331.271 279.006 331.126 278.922 cv
325.695 275.785 li
325.549 275.702 325.478 275.589 325.478 275.472 cv
325.478 275.33 325.582 275.18 325.785 275.063 cv
328.139 273.703 li
328.341 273.586 328.601 273.526 328.847 273.526 cv
329.051 273.526 329.245 273.568 329.391 273.652 cv
334.823 276.787 li
334.968 276.871 335.039 276.984 335.039 277.101 cv
335.039 277.243 334.935 277.393 334.733 277.51 cv
332.378 278.869 li
332.175 278.987 331.916 279.047 331.67 279.047 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
411.064 265.414 mo
410.416 265.414 409.742 265.235 409.086 264.857 cv
408.923 264.762 li
265.224 181.798 li
265.113 181.734 265.004 181.665 264.898 181.592 cv
262.851 180.179 261.821 177.18 262.587 174.69 cv
295.122 69.0589 li
295.562 67.6265 296.505 66.6589 297.639 66.2895 cv
297.978 66.1791 298.334 66.1221 298.698 66.1221 cv
299.346 66.1221 300.02 66.3014 300.676 66.68 cv
444.538 149.738 li
446.8 151.045 447.981 154.228 447.175 156.847 cv
414.641 262.478 li
414.216 263.861 413.322 264.81 412.24 265.207 cv
411.866 265.344 411.47 265.414 411.064 265.414 cv
265.426 175.378 mo
265.425 177.448 266.488 179.544 268.192 180.528 cv
407.73 261.157 li
408.358 261.52 409.003 261.691 409.622 261.691 cv
411.139 261.691 412.498 260.661 413.046 258.881 cv
444.15 157.899 li
444.314 157.365 444.392 156.807 444.392 156.247 cv
444.392 156.247 li
444.392 154.176 443.33 152.08 441.626 151.097 cv
302.088 70.4671 li
301.461 70.1047 300.815 69.9331 300.196 69.9331 cv
298.678 69.9331 297.319 70.9633 296.772 72.7434 cv
265.668 173.726 li
265.504 174.26 265.426 174.818 265.426 175.378 cv
265.426 175.378 li
level3{
gsave
clp
[223.34 0 0 223.34 240.878 107.185 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[223.34 0 0 223.34 240.878 107.185 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
409.622 261.691 mo
409.003 261.691 408.358 261.52 407.73 261.157 cv
268.192 180.528 li
266.488 179.544 265.425 177.448 265.426 175.378 cv
265.426 174.818 265.504 174.26 265.668 173.726 cv
296.772 72.7434 li
297.319 70.9633 298.678 69.9331 300.196 69.9331 cv
300.815 69.9331 301.461 70.1047 302.088 70.4671 cv
441.626 151.097 li
443.33 152.08 444.392 154.176 444.392 156.247 cv
444.392 156.807 444.314 157.365 444.15 157.899 cv
413.046 258.881 li
412.498 260.661 411.139 261.691 409.622 261.691 cv
291.112 173.912 mo
291.115 175.329 291.844 176.762 293.01 177.435 cv
387.47 231.971 li
387.901 232.219 388.344 232.337 388.769 232.337 cv
389.81 232.337 390.742 231.631 391.118 230.409 cv
392.523 225.846 li
400.233 230.297 li
400.663 230.546 401.106 230.663 401.531 230.663 cv
402.572 230.663 403.505 229.957 403.88 228.736 cv
425.242 159.378 li
425.771 157.658 424.996 155.569 423.511 154.711 cv
329.051 100.174 li
328.621 99.9255 328.178 99.8078 327.753 99.8078 cv
326.712 99.8078 325.779 100.514 325.404 101.736 cv
323.998 106.299 li
316.288 101.848 li
315.858 101.599 315.415 101.482 314.99 101.482 cv
313.949 101.482 313.016 102.188 312.641 103.409 cv
291.279 172.768 li
291.165 173.137 291.111 173.524 291.112 173.912 cv
level3{
gsave
clp
[178.966 0 0 178.966 265.426 165.812 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8P#@s8Ou>s8Ou>s8Or<s8Or<s8Oo:s8Oo9s8Ol8s8Ol7s8Ol6s8Oi5s8Oi4s8Oi4s8Of2s8Of1s8Oc0
s8Oc/s8O`-s8O`-s8O`,s8O]+s8O]*s8O]*s8OZ(s8OZ(s8OW&s8OW&s8OW%s8OT$s8OT#s8OT#s8OT"
s8OQ!s8OPus8OPus8OMss8OMss8OMrs8OMrs8OJps8OJps8OGns8OGns8ODlrr4;krr48irr48hrr45g
rVn,erVn)drVn&br;Rrar;Ro_qu7f^qu7f^qu7c\qu7c\qYqZZqYqZZqYqWYqYqWXqYqTWq>VKUq>VHS
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[178.966 0 0 178.966 265.426 165.812 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqrVc]nrVc]nrVc]n
rVc]nr;?Kjr;?Kjr;?Kjqtp9fqtp9fqYL'bqYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j^q>'j^q"XXZ
~>
255 <~2E!HO2Dm?L2)R6K2)I-H1c.$G1c$pD1G^gC1GU^@1,:U?1,:U?1,1L<0ekC;0ekC;0eb:80JG170J>(4
0/"t30/"q1/hSb//hSb//hS_-/M/P+/M/P+/M/M)/1`>'/1`;%.k<,#.k<,#.k<)!.Olnt.Olnt.Olnt
.Olns.4H\p.4H\p.4H\o-n$Jl-n$Jl-n$Jl-n$Jk-RU8h-RU8g-71&d-71&c,pai`,pai_,U=W\,U=W[
,9nEX,9nEX+sJ3T+X&!P+X&!P+<VdL+<VdL+<VdL+!2RH+!2RH+!2RH+!2RH*Zc@D*Zc@D*??.@*??.@
~>
<~4?P_g4?GVd4$,Mc4$#D`3]];_3]T2\3B/uX3&ilW3&`cT2`<QP2E!HO2Dm?L2)R6K2)I-H1c$pD1G^gC
1G^dA1,:R=0ekC;0ek@90JG170JG.50/"t30/"q1/hSb//hS_-/M/P+/M/M)/1`>'/1`;%.k<,#.k<)!
.Olnt.Olns.4H\p.4H\o-n$Jl-n$Jk-RU8h-RU8g-71&d-71&c,pai`,pai_,U=W\,U=W[,9nEW+sJ3T
+sJ3T+X&!P+X&!P+<VdL+<VdL+!2RH+!2RH+!2RH*Zc@D*Zc@D*??.@*??.@*??.@*#oq<*#oq<)]K_8
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
401.531 230.663 mo
401.106 230.663 400.663 230.546 400.233 230.297 cv
392.523 225.846 li
412.48 161.052 li
412.593 160.683 412.647 160.296 412.646 159.908 cv
412.643 158.491 411.915 157.058 410.748 156.385 cv
323.998 106.299 li
325.404 101.736 li
325.779 100.514 326.712 99.8078 327.753 99.8078 cv
328.178 99.8078 328.621 99.9255 329.051 100.174 cv
423.511 154.711 li
424.996 155.569 425.771 157.658 425.242 159.378 cv
403.88 228.736 li
403.505 229.957 402.572 230.663 401.531 230.663 cv
level3{
gsave
clp
[178.966 0 0 178.966 265.426 165.812 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8PJss8PJss8PJrs8PGqs8PGqs8PGps8PGps8PGps8PDns8PDns8PDns8PDms8PDms8PDms8PDms8PAl
s8PAks8PAks8PAks8PAks8PAks8PAks8P>is8P>is8P>is8P>is8P>is8P;hs8P;gs8P;gs8P;gs8P8f
s8P8es8P8es8P8es8P8es8P5cs8P5cs8P5cs8P5bs8P5bs8P2as8P2`s8P2`s8P2`s8P2_s8P/^s8P/^
s8P/]s8P/]s8P,[s8P,[s8P,[s8P)Ys8P)Ys8P)Ys8P)Ys8P)Xs8P&Ws8P&Ws8P&Ws8P&Vs8P&Vs8P&V
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[178.966 0 0 178.966 265.426 165.812 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 255 <~6UO4.6UO4.6UO4.6UF++6:+"*6:+"*6:+"*6:+"*6:!n'5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5sR\#
5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7Ou5<h@s5<h@s5<h@s5<h@s5<h=q5!D.o5!D.o5!D.o5!D+m
4Ztqk4Ztqk4Ztqk4Ztqk4Ztqj4?P_g4?P_g4?P_g4?P_g4?P_f4$,Mc4$,Mc4$,Mc4$,Mc4$,Mb3]];_
3]];_3]];_3]];_3B9)[3B9)[3B9)[3&ilW3&ilW3&ilW3&ilW3&ilW2`EZS2`EZS2`EZS2`EZS2`EZS
~>
<~@U`eU@U`eU@UW\R@:<SQ@:<SQ@:3JN?smAM?smAM?sd8J?XI/I?XI/I?X@&F?=$rE?=$rE?=$rE?=$rE
?=$oC?!U`A?!U`A?!U`A?!U`A?!U`A?!U]?>[1N=>[1N=>[1N=>[1N=>[1N=>[1K;>?b<9>?b<9>?b<9
>?b<8>$>*5>$>*5>$>*5>$>*4=]nm1=]nm1=]nm0=BJ[-=BJ[-=BJ[,='&I)='&I)='&I(<`W7%<`W7%
<`W7%<E3%!<E3%!<)cgr<)cgr<)cgr;c?Un;c?Un;c?Un;c?Un;GpCj;GpCj;GpCj;GpCj;,L1f;,L1f
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
388.769 232.337 mo
388.344 232.337 387.901 232.219 387.47 231.971 cv
293.01 177.435 li
291.844 176.762 291.115 175.329 291.112 173.912 cv
291.111 173.524 291.165 173.137 291.279 172.768 cv
312.641 103.409 li
313.016 102.188 313.949 101.482 314.99 101.482 cv
315.415 101.482 315.858 101.599 316.288 101.848 cv
410.748 156.385 li
411.915 157.058 412.643 158.491 412.646 159.908 cv
412.647 160.296 412.593 160.683 412.48 161.052 cv
392.523 225.846 li
391.118 230.409 li
390.742 231.631 389.81 232.337 388.769 232.337 cv
level3{
gsave
clp
[307.777 162.084 -162.084 307.777 159.346 59.4915 ]ct
/9 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~G-$]qGHZlpH*N)pHF&2mI'nJoI^a\nJ@TqmK"H1mKYDLmL;7amLr+$mMo9BnN5oWoO3(uoOiq2mPKmPn
Q-`hoQdT+oRFG@nSCU^nT%R'oT\E<nUYS]nV;FunVr:8oWT-MmX6)hmXli%lYN\=lZ0ORkZgBgi[I6'h
[dc6g\aqTg](I`f]_3re^A'/c^\K8b_##Gb_>GPa_Yt\`_uCe^`W$n\a8["[a8ZqXaSuqVao;tUb5W"S
bPr%RbPqtPbl8"Nbl7qLbl7nKc2RtKc2RqJc2RnIcMmtIci4"Hci3tGci3tGci3tGci3tGd/O(Hd/O(H
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~mf*7hmf*7hmf*7hmJd.gmJd.gmJd.gmJd.gm/I%fm/I%fm/I%fli-qeli-qeli-qelMghdlMghdl2L_c
l2L_ckl1Vbkl1VbkPkMakPkMakPkMak5PD`k5PD`jo5;_jSo2^jSo2^j8T)\j8T)\ir8u[ir8u[iVrlZ
iVrlZi;WcYi;WcYhu<ZXhu<ZXhZ!QVhZ!QVh>[HUh>[HUh#@?Th#@?Tg]%6Sg]%6SgA_-RgA_-Rg&D$Q
g&D$Qf`(pPf`(pPfDbgOf)G^Nf)G^Nec,UMec,UMec,UMeGfLLe,KCKdf0:Jdf0:JdJj1IdJj1Id/O(H
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~mf*7hn,E@in,E@inG`LknG`Llnc&Umnc&Xno)Adpo)AdpoD\pso`#'uo`#'up&>4#p&>7$pAYC'pAYF(
pAYF)p\tR+p\tU-p\tU.p\tX/p\t[1p\t^2q#:g4q#:j5q#:j5q>V!8q>V!8q>V$:qYq-;qYq0<qYq0=
qYq0=qYq3?qYq3?qu7?Aqu7BCqu7BCqu7EEqu7EEqu7HFqu7KHqu7NIqu7QKr;RZMr;R]Or;R`Qr;R`Q
rVmlTrVmoVrr4&Yrr4)[s8O2\s8O5^s8O5^s8O8`s8O;as8O;bs8O>cs8OAes8OAfs8ODgs8OGis8OGj
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.474206 .72619 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[307.777 162.084 -162.084 307.777 159.346 59.4915 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~F`qtRH$O^_I!pHnJ:W<)KS>/9M2I4LNK0'^P*;,qQC!u,S"-%@T:hpRUnsrdW2ZetXKJb2Z*L^C[C*HQ
\[f;`]Y2%n^V@S"_84"*`5Ta9`lH-@aN;QHb0%lMbKJ)PbKS2Sbfn>VcHa_\cHa_\cHab^cd0tbdF$Ck
eC<!ue^i@(f\"m1g=k<9gt^`Ah;7#Ghr*GOiSrkWj5f=`k2tghkNM-ol0@R!lg*m'm-O*+mHs?0mdKW6
nF?&>oCMSGo_%nMp@e4Rp@e4Sp\4IXq"X[\q>'j^qYL'bqYL'bqYL*dqtp9gr;HTns8W-!s8W-!s8W-!
~>
<~X0&S0Z*L^C[C3QS\[oDd^;%J"_Sa@4a2lBGbg+P]dF-Lne^iC+g=tE=hV[8MioK4`k32'plg4$,n*ol<
oCV_Kp@n@Wq>1!cr;HWos8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~NJiXKKnFr,IslZhG]n4NEc>r7Chmd"B4b[_?sd5G>[(B6<`N*t;,C%`9h\2O84H$96U<t%4Zkbc2`<NL
1,(@6/1N(s-RL,b+sA'N*?,n6(D[`!&ePZc%LigS$4-tC#6kA9"U"o0!W`9$zzzzzzzzzzzzzzzzzzzz
!<N<)"9\i2"pYD>#mq"H$OdIR%Ls![&.fBb&J5Wg',2,p'bqK#(`=20)]K_9*?H:E+<VgN+sJ6W,UFca
~>
<~84Z6@7n,p977BU36:*t'5<h=p4?P\e3]T/X2)I-G1,1I9/hJV).Oc_l,pX`[+WqjJ*?,n7(`*o$'+tlg
%hB-Z$k!CL#mgkC#6tG:"9S`.!s/N*!WiE(!<E3%!<<*"zzzzzzzzzzzz!!**$!<E3%!<E3&!WiE)!Wi
E)!WiE)!WiE)!WiE)!WiE)!WiE)!WiH+!s8W."9\i2"U5/9#7(VB#mq"I$O[@O%1NaU%Ls![%hK9`&J5
Tf&ebro()@Z%(`=51)]Kb:*$$%@+!2UK~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
410.748 156.385 mo
316.287 101.848 li
315.357 101.311 314.369 101.385 313.63 101.939 cv
314.076 101.926 314.54 102.027 314.995 102.288 cv
409.454 156.824 li
410.939 157.682 411.714 159.772 411.186 161.491 cv
389.824 230.849 li
389.626 231.491 389.275 231.99 388.834 232.321 cv
389.847 232.29 390.75 231.604 391.118 230.409 cv
412.48 161.052 li
413.009 159.332 412.234 157.242 410.748 156.385 cv
cp
0 0 0 0 cmyk
f
268.334 288.609 mo
267.033 288.609 265.787 288.338 264.834 287.788 cv
264.834 287.789 li
226.989 265.94 li
225.986 265.36 225.434 264.533 225.434 263.608 cv
225.433 262.535 226.195 261.481 227.521 260.715 cv
247.001 249.467 li
248.294 248.722 249.914 248.341 251.458 248.341 cv
252.759 248.341 254.006 248.611 254.958 249.16 cv
292.803 271.01 li
293.806 271.589 294.358 272.417 294.359 273.342 cv
294.359 274.414 293.598 275.469 292.272 276.235 cv
272.79 287.483 li
271.498 288.228 269.878 288.609 268.334 288.609 cv
251.476 249.446 mo
250.108 249.446 248.655 249.776 247.548 250.414 cv
228.068 261.661 li
227.088 262.227 226.526 262.937 226.526 263.608 cv
226.526 264.271 227.075 264.727 227.536 264.992 cv
265.381 286.843 li
266.151 287.286 267.206 287.503 268.317 287.503 cv
269.686 287.503 271.138 287.175 272.243 286.535 cv
291.725 275.288 li
292.704 274.723 293.266 274.014 293.266 273.342 cv
293.266 272.679 292.717 272.223 292.256 271.957 cv
254.411 250.108 li
253.643 249.663 252.587 249.446 251.476 249.446 cv
level3{
gsave
clp
[218.96 0 0 218.96 186.33 190.921 ]ct
/10 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~@\B2H@\T2FA#,;EAYtMEAuLVCB<$_BBrlqACT`.@CpA:>DR=U?E40g>EO]s=FLl9<G._N<GeR`:HGO#9
I)B89J&Y\:J]Lq9K?I48L!<L9LX/a8M:#!7Mpt96Nn-T5OOui3P1i)3Q/"D2QJOP0R,Be/Rc6"-SE)7-
T&qI,TB@L(U$3^'U[&s'V!K!$VX5-#Vsb6!Vst8uW:L>sWq6JqX7ZSqX7ZMoXRuPnXnD_pY4_hqYP%qr
YkA%sYkA%sZLn1tZh+4t[.=7t[IO:t[IF4s[da=t\*s@t\F0Ct\a9@s]'TIt]'KCs]'KCs]BfLt]B]Fs
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~iUHmJi:-dIi:-dIhsg[Hhsg[Hhs^UGhs^UGhXCLFhXCLFh=(CEh=(CEh!b:Dh!b:Dg[G1Cg[G1Cg@,(B
g@,(Bg$etAf^Jk@f^Jk@fC/b?f'iY>f'iY>f'`S=eaEJ<eaEJ<eF*A;eF!;:e*[29dd@)8dd@)8dI$u7
dHpo6d-Uf5d-Uf5cg:]4cKtT3c0YK2bj>B1bj>B1bO#90b3]0/b3]0/amB'.aR&s-aR&s-a6`j,a6`j,
`pEa+`pEa+`U*X*`9[I(`9[I(_s@@'_s@@'_X%7&_<_.%_<_.%_!D%$^[(q#^?bh"^$>Xu]^#Ot]B]Fs
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~iUHmJiUQsKiq!-Mj7<6Nj7E<OjRiKQjRiKQjn8ZSjnA`Uk4eoWk4nuXkP>/ZkPG5[kkb>\kkkD]l2:S_
l2:S_lM^bali-qcli-qcm/I%dm/I%dmJd.emJd.emJd.emf*7fmf*7gmf*7gn,E@hn,E@hnG`IjnG`Ij
nc&Rko)A[loD\gno`"spp&>'rpAY3tpAY6up\tC#q#:O%q#:R&q>U^)q>Ua*q>Ua+q>Ud,q>Ug.qYps0
qYq!2qYq!3qYq$4qYq'5qu707qu738qu739r;R?;rVmH<rVmK>rr3W@rr3WArr3ZBrr3]Drr3`Frr3cG
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.474206 .72619 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[218.96 0 0 218.96 186.33 190.921 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~@:<VS@q9.^AnG[hBkhF!Ci+'.E,]i=FEMbOH$XgbI=HcuJqJ`1L51SAMN!OTO-#KfPa.Q$R$jD4S=Q7C
T:hmPUSFW]VP^5fVl-JmWiE)"X/rD)Xfeh1YHP.6Z*L[AZa@*H['d?N\$rlW\[f8]\[f;_]"5Md]tV7s
^qmn)_o'F3`Q#p<a2lBEb0.uPbg"GZcd:%ddF-LmeC<%!e^i@(f\+s3g=tB;gtgfChVR,Hhr*GNiSrkW
j5f:_jlPXekND'ml0@R!lg*p(m-X3-mdBN3n*ol<oCV_Kp%J.Sq"XXZq"X[\q>'j_qYL*dr;?NlrVc]n
~>
<~T:r!SUnsrdW2ZetXKAY0Z*UgF[^WcW]">Vh^VRe)`5]j=b0/#RcHjkbe'uq!f@\d1gYL`Di8N\UjQ5Od
kNM0qlg*p(mI'H4nac;Co^qeJo_%nMp%A"Np%A"Np%7nJoCDJBnaQ&;n*f]3m-O**lg*m&lg*j$lg*m&
lg*m&lg*p(m-O**m-O**m-O**m-O**m-O-,mHs</mdBN3n*f`6n*f`6n*f`6n*f`6n*oi9nF5u<o()DE
o_%qPq"X[]qYU3grVliss8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~R[BD*P)t]_MMR"?Jq/8rH$=CPEH#f3C2%<k@UNPK>Zt93<Dudm:JOSU84H!65sIOq3]K#T1GLO8/1N%p
,U+?P*#]Y0'G:rf$jm7E"9S]+zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E6'!sAc3#7(SA$47.L
$k3[V%hB3_&.oNf',2/s~>
<~1,:U?1,:U?0ekC;0JG.5/hS_-/1`;$.4HYl,pX`\+sA'N*ZZ7@)]BS2(D[`!&eP]e%h/pT$4-tD#6tG:
"9\f/!WiB'!<E0#zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3&!WiE)!WrN,!sA`0"U,)7#
6tJ>#mgnF$4@4L$OdFQ%1WmZ~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
339.295 138.236 mo
333.455 134.865 li
332.913 134.551 332.623 133.799 332.807 133.185 cv
332.99 132.571 333.578 132.325 334.12 132.638 cv
339.959 136.01 li
340.501 136.323 340.791 137.074 340.609 137.69 cv
340.425 138.304 339.837 138.548 339.295 138.236 cv
cp
0 0 0 0 cmyk
f
353.206 146.267 mo
344.595 141.295 li
344.053 140.983 343.763 140.231 343.946 139.616 cv
344.129 139.001 344.717 138.757 345.259 139.07 cv
353.87 144.041 li
354.411 144.354 354.703 145.106 354.519 145.721 cv
354.335 146.335 353.747 146.579 353.206 146.267 cv
cp
f
327.518 164.236 mo
321.678 160.864 li
321.136 160.551 320.846 159.799 321.03 159.185 cv
321.212 158.57 321.8 158.325 322.342 158.638 cv
328.182 162.01 li
328.724 162.323 329.015 163.074 328.831 163.689 cv
328.648 164.304 328.06 164.548 327.518 164.236 cv
cp
f
339.918 171.395 mo
331.307 166.423 li
330.766 166.111 330.475 165.359 330.659 164.743 cv
330.841 164.129 331.429 163.885 331.971 164.198 cv
340.582 169.169 li
341.124 169.482 341.414 170.234 341.232 170.848 cv
341.048 171.463 340.46 171.707 339.918 171.395 cv
cp
f
321.802 133.603 mo
318.154 131.496 li
317.612 131.183 317.322 130.432 317.505 129.817 cv
317.688 129.202 318.276 128.957 318.818 129.271 cv
322.466 131.376 li
323.008 131.69 323.298 132.442 323.115 133.056 cv
322.932 133.67 322.344 133.915 321.802 133.603 cv
cp
f
332.78 145.406 mo
321.633 138.971 li
321.091 138.658 320.8 137.906 320.984 137.292 cv
321.167 136.677 321.755 136.433 322.297 136.745 cv
333.443 143.181 li
333.985 143.493 334.276 144.245 334.092 144.861 cv
333.909 145.475 333.321 145.719 332.78 145.406 cv
cp
f
322.498 150.405 mo
318.85 148.298 li
318.309 147.986 318.018 147.234 318.202 146.618 cv
318.385 146.004 318.973 145.759 319.514 146.073 cv
323.162 148.179 li
323.704 148.491 323.995 149.243 323.812 149.858 cv
323.628 150.472 323.04 150.717 322.498 150.405 cv
cp
f
341.263 183.104 mo
331.519 177.479 li
330.977 177.165 330.687 176.413 330.87 175.799 cv
331.053 175.185 331.641 174.94 332.183 175.252 cv
341.927 180.878 li
342.468 181.191 342.759 181.943 342.576 182.558 cv
342.392 183.172 341.805 183.416 341.263 183.104 cv
cp
f
318.41 158.977 mo
316.068 157.624 li
315.527 157.312 315.236 156.56 315.419 155.946 cv
315.603 155.33 316.19 155.086 316.732 155.399 cv
319.074 156.751 li
319.616 157.064 319.907 157.816 319.723 158.43 cv
319.539 159.045 318.952 159.289 318.41 158.977 cv
cp
f
316.194 168.63 mo
313.286 166.951 li
312.744 166.639 312.453 165.887 312.637 165.272 cv
312.82 164.657 313.408 164.413 313.95 164.726 cv
316.858 166.405 li
317.4 166.717 317.69 167.469 317.507 168.084 cv
317.324 168.698 316.736 168.944 316.194 168.63 cv
cp
f
327.507 175.162 mo
319.84 170.736 li
319.298 170.423 319.007 169.671 319.191 169.056 cv
319.374 168.442 319.962 168.197 320.504 168.51 cv
328.171 172.937 li
328.712 173.249 329.003 174.001 328.82 174.615 cv
328.637 175.23 328.049 175.475 327.507 175.162 cv
cp
f
317.408 174.797 mo
311.895 171.615 li
311.353 171.302 311.062 170.55 311.245 169.936 cv
311.429 169.321 312.017 169.076 312.559 169.389 cv
318.071 172.572 li
318.613 172.885 318.904 173.636 318.72 174.251 cv
318.536 174.865 317.949 175.111 317.408 174.797 cv
cp
f
349.622 187.953 mo
346.082 185.909 li
345.54 185.597 345.249 184.845 345.433 184.231 cv
345.617 183.615 346.204 183.371 346.745 183.684 cv
350.286 185.728 li
350.828 186.041 351.119 186.792 350.935 187.407 cv
350.752 188.022 350.164 188.267 349.622 187.953 cv
cp
f
336.069 158.24 mo
326.325 152.614 li
325.784 152.301 325.493 151.549 325.676 150.934 cv
325.86 150.32 326.448 150.074 326.989 150.388 cv
336.733 156.013 li
337.275 156.326 337.565 157.078 337.382 157.693 cv
337.199 158.307 336.611 158.552 336.069 158.24 cv
cp
f
337.224 153.44 mo
320.242 143.635 li
319.7 143.322 319.41 142.57 319.592 141.955 cv
319.776 141.341 320.364 141.096 320.906 141.408 cv
337.888 151.214 li
338.43 151.527 338.72 152.279 338.537 152.893 cv
338.354 153.507 337.766 153.752 337.224 153.44 cv
cp
.062623 .46894 .71017 0 cmyk
f
327.203 158.587 mo
317.459 152.961 li
316.917 152.649 316.627 151.897 316.81 151.282 cv
316.994 150.667 317.581 150.423 318.123 150.736 cv
327.868 156.362 li
328.409 156.674 328.7 157.426 328.516 158.04 cv
328.332 158.656 327.745 158.9 327.203 158.587 cv
cp
f
343.459 162.506 mo
339.919 160.462 li
339.377 160.149 339.086 159.398 339.27 158.782 cv
339.453 158.168 340.041 157.923 340.583 158.237 cv
344.123 160.281 li
344.665 160.593 344.955 161.345 344.772 161.959 cv
344.589 162.574 344.001 162.819 343.459 162.506 cv
cp
f
379.47 161.431 mo
358.505 149.326 li
357.964 149.014 357.673 148.262 357.857 147.648 cv
358.04 147.032 358.628 146.788 359.169 147.101 cv
380.134 159.205 li
380.676 159.518 380.967 160.27 380.784 160.884 cv
380.6 161.499 380.012 161.743 379.47 161.431 cv
cp
f
326.39 169.05 mo
314.677 162.288 li
314.135 161.975 313.844 161.223 314.028 160.609 cv
314.211 159.994 314.799 159.749 315.341 160.063 cv
327.054 166.824 li
327.595 167.138 327.886 167.889 327.703 168.504 cv
327.52 169.118 326.932 169.364 326.39 169.05 cv
cp
0 .8963 0 0 cmyk
f
328.156 131.804 mo
319.545 126.832 li
319.003 126.52 318.712 125.768 318.896 125.154 cv
319.079 124.539 319.667 124.294 320.209 124.607 cv
328.82 129.578 li
329.362 129.892 329.653 130.643 329.469 131.258 cv
329.286 131.872 328.698 132.117 328.156 131.804 cv
cp
f
315.607 179.224 mo
305.633 173.466 li
305.091 173.154 304.801 172.402 304.985 171.787 cv
305.167 171.172 305.755 170.928 306.297 171.24 cv
316.27 176.998 li
316.812 177.312 317.103 178.063 316.919 178.678 cv
316.736 179.292 316.148 179.537 315.607 179.224 cv
cp
.062623 .46894 .71017 0 cmyk
f
381.824 150.649 mo
377.555 148.184 li
377.16 147.955 376.947 147.406 377.08 146.957 cv
377.215 146.507 377.645 146.328 378.04 146.558 cv
382.309 149.022 li
382.705 149.25 382.917 149.8 382.784 150.249 cv
382.65 150.698 382.22 150.877 381.824 150.649 cv
cp
0 0 0 0 cmyk
f
389.966 155.35 mo
385.698 152.885 li
385.301 152.656 385.089 152.107 385.223 151.657 cv
385.357 151.208 385.786 151.03 386.183 151.258 cv
390.452 153.723 li
390.847 153.951 391.06 154.501 390.925 154.95 cv
390.791 155.4 390.362 155.578 389.966 155.35 cv
cp
f
398.108 160.05 mo
393.839 157.586 li
393.444 157.358 393.231 156.808 393.365 156.359 cv
393.499 155.909 393.929 155.731 394.325 155.959 cv
398.593 158.424 li
398.99 158.653 399.202 159.201 399.068 159.651 cv
398.934 160.1 398.504 160.28 398.108 160.05 cv
cp
f
402.11 162.364 mo
401.982 162.287 li
401.585 162.058 401.373 161.509 401.507 161.06 cv
401.641 160.611 402.071 160.432 402.467 160.66 cv
402.595 160.738 li
402.992 160.966 403.203 161.515 403.07 161.964 cv
402.936 162.413 402.506 162.593 402.11 162.364 cv
cp
0 .8963 0 0 cmyk
f
181.797 212.319 mo
179.096 212.319 176.394 211.623 173.985 210.232 cv
145.39 193.722 li
144.15 193.006 143.41 191.725 143.41 190.293 cv
143.41 188.862 144.15 187.58 145.39 186.865 cv
162.854 176.782 li
163.285 177.233 163.766 177.672 164.296 178.097 cv
146.32 188.476 li
145.663 188.856 145.271 189.534 145.271 190.293 cv
145.271 191.052 145.663 191.731 146.32 192.111 cv
174.914 208.62 li
177.038 209.845 179.418 210.458 181.798 210.458 cv
184.178 210.458 186.558 209.845 188.681 208.62 cv
217.275 192.112 li
217.931 191.732 218.324 191.053 218.324 190.294 cv
218.324 189.535 217.931 188.857 217.275 188.477 cv
200.429 178.75 li
200.997 178.349 201.519 177.934 201.993 177.505 cv
218.204 186.865 li
219.445 187.581 220.185 188.863 220.185 190.294 cv
220.185 191.726 219.445 193.007 218.204 193.723 cv
189.611 210.232 li
187.202 211.623 184.499 212.319 181.797 212.319 cv
level3{
gsave
clp
[76.7754 0 0 76.7754 143.41 190.294 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.7754 0 0 76.7754 143.41 190.294 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
181.653 202.022 mo
176.626 202.022 171.6 200.915 167.765 198.7 cv
160.095 194.272 160.094 187.092 167.765 182.664 cv
168.564 182.203 169.414 181.79 170.305 181.425 cv
174.084 182.86 178.441 183.577 182.797 183.577 cv
186.674 183.577 190.551 183.009 194.021 181.873 cv
194.545 182.119 195.053 182.383 195.54 182.664 cv
203.21 187.093 203.211 194.273 195.541 198.7 cv
191.706 200.915 186.679 202.022 181.653 202.022 cv
level3{
gsave
clp
[796.433 0 0 798.007 66.1882 -102.14 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[796.433 0 0 798.007 66.1882 -102.14 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
182.797 183.577 mo
178.441 183.577 174.084 182.86 170.305 181.425 cv
169.029 180.941 167.819 180.375 166.697 179.727 cv
165.807 179.213 165.007 178.668 164.296 178.097 cv
163.766 177.672 163.285 177.233 162.854 176.782 cv
160.97 174.812 160.028 172.622 160.028 170.433 cv
155.386 116.402 li
155.387 116.402 li
155.681 119.828 li
156.962 121.472 158.688 123.047 160.866 124.492 cv
167.237 128.719 176.08 130.912 184.731 130.912 cv
190.594 130.912 196.367 129.906 201.229 127.843 cv
199.367 172.143 li
199.287 174.075 198.619 175.952 197.369 177.425 cv
195.557 179.558 192.066 182.068 185.355 183.486 cv
190.087 183.178 194.686 182.024 198.397 180.007 cv
197.044 180.743 195.573 181.365 194.021 181.873 cv
190.551 183.009 186.674 183.577 182.797 183.577 cv
198.404 180.003 mo
198.416 179.997 198.428 179.991 198.439 179.984 cv
198.427 179.991 198.416 179.997 198.404 180.003 cv
198.457 179.975 mo
198.466 179.969 198.476 179.964 198.486 179.959 cv
198.476 179.964 198.466 179.97 198.457 179.975 cv
198.512 179.944 mo
198.519 179.941 198.526 179.937 198.532 179.933 cv
198.525 179.937 198.519 179.94 198.512 179.944 cv
198.581 179.906 mo
198.581 179.906 li
198.581 179.906 li
198.633 179.877 mo
198.634 179.876 198.636 179.876 198.637 179.875 cv
198.635 179.876 198.635 179.876 198.633 179.877 cv
198.683 179.849 mo
198.686 179.847 198.69 179.845 198.693 179.843 cv
198.69 179.845 198.686 179.847 198.683 179.849 cv
198.734 179.82 mo
198.738 179.818 198.741 179.816 198.744 179.814 cv
198.741 179.816 198.737 179.818 198.734 179.82 cv
198.784 179.792 mo
198.788 179.79 198.792 179.787 198.796 179.785 cv
198.792 179.787 198.788 179.789 198.784 179.792 cv
198.836 179.762 mo
198.839 179.76 198.843 179.758 198.846 179.756 cv
198.843 179.758 198.839 179.76 198.836 179.762 cv
level3{
gsave
clp
[165.349 0 0 165.349 150.216 127.668 ]ct
/11 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(NHDS(j)PR)0VSO)L7eP)gmtP*.F"M*.a%K*J9(H+,,7G+GY=E+H(@B+cUC?+cpF=,EcO:,a;U8-'hX5
-CId4.%Es2.%Wm..A8s+.AJj&.]"m#/#Ois/?'io/?9ck/Zfcg0!Gid0!Yc`0=1i^0t%&^1UmDb2n8ng
3P#1j4hC[o6+d0t7D/[$8\P0)9tpZ.:r!&2<PSS7=ht(<>f$I@@)DsE@`/6HB#O`MBuU,QCrZMUDoVhX
E5qqYF3"=]G/sX`GK9aaH,oscI)l9fIE2BgJB.]jK#dolK?+#mKua5oLWBGqLr]PrMT5\sMoYkuNlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hr=\:hVnM8h;J>6gY`&3g>;l1g"l]/fA6K-f%g<+e_C-)e(ap'dG"X$d+\O#ce8@!c.W-tbh2srb1Qap
ak-Rna4L@l`n(1j`Rb(i_q"ef_q"ef_USVd_:/Gb^XN5`^=*&^][?c[]@$ZZ]$UKX\Bt9V\'Y0U[F"sS
[*\jRZd8[PZ-WINYg<@MYKm1KY0R(JXj-nHXNgeGX3CVEWQbDCW6G;BVTf)@V9Ao>UW`]<U<ET;U<<N:
Tum?8T?7-6T#q$5S]Lj3SB1a2R`PO0R)o=.QcT4-Q,s"+Q,s"+PfNh)PK3_(OiRM&ON7D%O2h5#NlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.152778 .40873 .931149 ]
/Encode [0 1 1 0 0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[165.349 0 0 165.349 150.216 127.668 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~()Rr/*$67F+s\K_-n-Yt/M8_73C$&.;d!I;Bl7m4G^P!mKSPGENfT9bPE_;tQ^O;4SXuIITq\<YVPpJo
X/rG+YHY==['mHS]">Vh^VRe(_o9X9aiV`McHjkceCE.&g"P3:hVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
hVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
hVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
~>
<~E-6GSJVAr?Od)9)TqnWfYHkRG]">Yj^VRe*`l?'>a2c6@a2c6@`lH-?a2l?CaN2HDaiVZIbKJ)Qbfn;T
c-=PZcd0qad*U.ddF$Cke'upuf%/I)f\"j0g"P07gYCW@hV[8Mio8tWio8tWio8tWio8tWio8tWio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
~>
<~W1]TBM1Bee@p;i$4>J6&&-i18zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzz!!!!!~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
198.397 180.007 mo
198.399 180.006 198.402 180.004 198.404 180.003 cv
198.402 180.005 198.4 180.006 198.397 180.007 cv
198.439 179.984 mo
198.445 179.981 198.451 179.978 198.457 179.975 cv
198.451 179.978 198.445 179.981 198.439 179.984 cv
198.486 179.959 mo
198.494 179.954 198.503 179.949 198.512 179.944 cv
198.503 179.949 198.494 179.954 198.486 179.959 cv
198.532 179.933 mo
198.548 179.924 198.565 179.915 198.581 179.906 cv
198.565 179.915 198.549 179.924 198.532 179.933 cv
198.581 179.906 mo
198.598 179.897 198.616 179.887 198.633 179.877 cv
198.616 179.887 198.598 179.896 198.581 179.906 cv
198.637 179.875 mo
198.652 179.866 198.668 179.858 198.683 179.849 cv
198.668 179.858 198.652 179.866 198.637 179.875 cv
198.693 179.843 mo
198.707 179.836 198.72 179.828 198.734 179.82 cv
198.72 179.828 198.707 179.836 198.693 179.843 cv
198.744 179.814 mo
198.758 179.807 198.771 179.799 198.784 179.792 cv
198.771 179.799 198.758 179.807 198.744 179.814 cv
198.796 179.785 mo
198.809 179.777 198.823 179.77 198.836 179.762 cv
198.823 179.77 198.809 179.777 198.796 179.785 cv
198.846 179.756 mo
198.863 179.747 198.879 179.737 198.896 179.728 cv
199.44 179.413 199.951 179.087 200.429 178.75 cv
200.429 178.75 li
199.951 179.087 199.44 179.413 198.896 179.728 cv
198.879 179.737 198.863 179.747 198.846 179.756 cv
201.993 177.505 mo
201.993 177.505 li
204.374 175.356 205.564 172.894 205.564 170.432 cv
210.205 116.406 li
210.205 116.406 li
209.737 121.858 li
205.564 170.432 li
205.564 172.894 204.374 175.356 201.993 177.505 cv
level3{
gsave
clp
[796.433 0 0 798.007 66.1882 -102.14 ]ct
/12 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~mJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?ka
mJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?ka
mJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?ka
mJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?kamJ?ka
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8#NEs8#NEs8#NEs8#NEs8#NDs8#NDs8#NDs8#NDs8#KBs8,QCs8,QBs8,QAs8,N@s8,N?s8,N>s8,K<
s8,H:s8,H9s85K8s85H6s85H4s85E2s8>H0s8GK/s8PN-s8PK)s8PH&s8PE#s8PDus8PArs8PAos8P>l
s8P;is8P8fs8P5bs8P2^s8P,Zs8P&Vs8P#Ss8P#Ps8OuLs8OoGs8OiAs8Oc;s8O]5s8OZ1s8OT+s8ON%
s8OGts8OAns8O;hs8O2`s8O&Xs8NoQrr3]Jr;REDr;R9<r;R*3qYp^)pAY-rp&>!noD\dlnG`IimJ?ka
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00396825 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[796.433 0 0 798.007 66.1882 -102.14 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~m-O--n*fc9o()DDo^qhLp%A%Qq"ad_qtp9fqtp9fqtp<hrVc`prr2rts8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~qYL*erVliss8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqrVc]mr;?Kjqtp9fqtp9fqtp9fqtp9fqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
<~zzzz!!!$$!sAc4#RLhH%1Wm[&J>`j'GM8t()If*)B0Y:*ZlLJ+X/-U,U=Z^-71)f-n$Mn.Olr!/1`A)/
M/S-0/#"50ekC<1,C^C1c7-K2E!HO2E!HP2`EZT3&ru[3]fDc4?P_h4Ztql5!D.p5<h@t5X7S"5X7S#5
s[e&5s[e'6:+"+6UO4/6psF377BX77Rfj;7n6'>84Z9B84Z9B8P)KF8kM]J8kM]J91qoN9MA,R9MA,R9
MA,R9he>V9he>V9he>V9he>V:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ~>
<~!!!$#!<E3%!<E3%!<E6'!s8Z0"pYD?$47.L%1Wm[&J>`j'GM8t()If*)&aG6*?H:F+X86Y-7:2j.P!&%
/h\n51,CaE2E*TT3BB5a4[)(q5sdn*6q'R884cBF92&#R:/=Y^:f1(f;H$Ln<)lq!='&L,>$>-8>[:WA
?=.&I?t!JQ@q0%\AS,OeB4u!oC27U$Ci+$,DJsK6EH6)@F)uDEFEM_KG'8%PGB\:VH$O[\H?sm`H[C*d
I!g<hI=6NlIXZ`pIt)rtIt)rtJ:N0#JUrB'JUrB'JqAT+JqAT+JqAT+JqAT+K7ef/K7ef/K7ef/K7ef/
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
185.355 183.486 mo
192.066 182.068 195.557 179.558 197.369 177.425 cv
198.619 175.952 199.287 174.075 199.367 172.143 cv
201.229 127.843 li
196.367 129.906 190.594 130.912 184.731 130.912 cv
176.08 130.912 167.237 128.719 160.866 124.492 cv
158.688 123.047 156.962 121.472 155.681 119.828 cv
155.387 116.402 li
156.833 118.424 158.978 120.318 161.825 121.961 cv
167.616 125.305 175.207 126.977 182.797 126.977 cv
190.387 126.977 197.977 125.305 203.768 121.962 cv
206.613 120.32 208.758 118.426 210.205 116.406 cv
205.564 170.432 li
205.564 172.894 204.374 175.356 201.993 177.505 cv
201.519 177.934 200.997 178.349 200.429 178.75 cv
199.951 179.087 199.44 179.413 198.896 179.728 cv
198.879 179.737 198.863 179.747 198.846 179.756 cv
198.843 179.758 198.839 179.76 198.836 179.762 cv
198.823 179.77 198.809 179.777 198.796 179.785 cv
198.792 179.787 198.788 179.79 198.784 179.792 cv
198.771 179.799 198.758 179.807 198.744 179.814 cv
198.741 179.816 198.738 179.818 198.734 179.82 cv
198.72 179.828 198.707 179.836 198.693 179.843 cv
198.69 179.845 198.686 179.847 198.683 179.849 cv
198.668 179.858 198.652 179.866 198.637 179.875 cv
198.636 179.876 198.634 179.876 198.633 179.877 cv
198.616 179.887 198.598 179.897 198.581 179.906 cv
198.581 179.906 li
198.565 179.915 198.548 179.924 198.532 179.933 cv
198.526 179.937 198.519 179.941 198.512 179.944 cv
198.503 179.949 198.494 179.954 198.486 179.959 cv
198.476 179.964 198.466 179.969 198.457 179.975 cv
198.451 179.978 198.445 179.981 198.439 179.984 cv
198.428 179.991 198.416 179.997 198.404 180.003 cv
198.402 180.004 198.399 180.006 198.397 180.007 cv
194.686 182.024 190.087 183.178 185.355 183.486 cv
level3{
gsave
clp
[165.349 0 0 165.349 150.216 127.668 ]ct
/13 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~@\B2H@\T2FA#,;EAYtMEAuLVCB<$_BBrlqACT`.@CpA:>DR=U?E40g>EO]s=FLl9<G._N<GeR`:HGO#9
I)B89J&Y\:J]Lq9K?I48L!<L9LX/a8M:#!7Mpt96Nn-T5OOui3P1i)3Q/"D2QJOP0R,Be/Rc6"-SE)7-
T&qI,TB@L(U$3^'U[&s'V!K!$VX5-#Vsb6!Vst8uW:L>sWq6JqX7ZSqX7ZMoXRuPnXnD_pY4_hqYP%qr
YkA%sYkA%sZLn1tZh+4t[.=7t[IO:t[IF4s[da=t\*s@t\F0Ct\a9@s]'TIt]'KCs]'KCs]BfLt]B]Fs
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rr3cGrVmWDrVmTBr;RH?qu7<<qu79:qYq09qYq-7q>V!4q#:j1p\t^/pAYU.p&>I+p&>F*o`#:(oD].%
o)B"#nc&n"nG`atn,EUrmf*IpmJd=mm/I4lli.(jl2Lhfkl1_ekPkScjo5>_jSo2]j8T)\ir8uZi;WcX
hu<ZWhZ!QVh>[HUh#@?Tg]%6SgA_-Rg&D$QfDbgOf)>XMeboIKeGB4Ge,'+FdJ<hCdJ*\Ad.[M?cLq5<
c1M&:bk(l8bObc7an#K4aRT<2a70-0`pj$/`UEj-`:![+_sRL)_X7C(_<h4&^[2"$^?bh"^$G_!]B]Fs
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cG
rr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cG
rr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cG
rr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cG
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cG
rr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cG
rr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cG
rr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cGrr3cG
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.152778 .40873 .931149 ]
/Encode [0 1 1 0 0 1 0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[165.349 0 0 165.349 150.216 127.668 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~@:Ee[Bl%^-Fa/:aK8,8DOd29&StMjUVPpMqXfek4Za@-L\@K2^]Y2%p_8=+.`Q#s>aihoQcHsqce'upu
f%A[0gYCWAhr3STjQ5Rgl0I^'mdKZ8o()DEo_%qPq"aa^qYU3grVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
~>
<~T;/9_XKf1C]>)8(bKePeg"bKFk32-unFQ;Ep%A"NoC;>=mHj0)lg*p(mHs?1nF5u=oCMVIp@n@YqYU6i
rr<#us8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~RZrhfJU)?TBk(FN;botP4ubAO-m9QF&-rC>zzzzzzzzzzzz!!*-&!sA`1"pYD>#mgqH$k3XU%hK<b&eb
ro()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@
Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@
Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$~>
<~1,:U>0J4q-.4-8^*?,e/&Io0S"p=u.zzzzzzzzzzzz!!!$#!<N<(!s8W."9\l3"U,)7"pYA<#RLhF$Od
IS%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB
0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB
0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
182.797 126.977 mo
175.207 126.977 167.616 125.305 161.825 121.961 cv
158.978 120.318 156.833 118.424 155.387 116.402 cv
155.386 116.402 li
153.741 114.102 153.001 111.638 153.164 109.19 cv
153.16 109.194 li
153.167 109.115 li
153.177 108.988 153.194 108.864 153.207 108.738 cv
153.634 104.71 li
153.918 108.626 156.553 112.51 161.545 115.598 cv
161.546 115.598 161.548 115.6 161.548 115.6 cv
161.558 115.606 161.568 115.612 161.577 115.618 cv
161.579 115.619 161.581 115.62 161.583 115.621 cv
161.592 115.627 161.6 115.632 161.61 115.638 cv
161.612 115.639 161.614 115.64 161.616 115.642 cv
161.625 115.647 161.634 115.652 161.642 115.658 cv
161.645 115.659 161.647 115.661 161.65 115.662 cv
161.659 115.668 161.666 115.672 161.674 115.677 cv
161.678 115.679 161.681 115.681 161.684 115.683 cv
161.691 115.688 161.699 115.692 161.706 115.697 cv
161.71 115.699 161.714 115.701 161.718 115.704 cv
161.725 115.708 161.732 115.712 161.739 115.716 cv
161.743 115.719 161.747 115.722 161.751 115.724 cv
161.758 115.728 161.765 115.732 161.772 115.736 cv
161.776 115.739 161.78 115.742 161.785 115.744 cv
161.791 115.748 161.797 115.752 161.803 115.756 cv
161.808 115.759 161.814 115.762 161.819 115.765 cv
161.825 115.768 161.831 115.772 161.837 115.776 cv
161.842 115.779 161.847 115.782 161.851 115.785 cv
161.858 115.788 161.864 115.792 161.87 115.796 cv
161.875 115.799 161.88 115.802 161.885 115.805 cv
161.891 115.808 161.897 115.812 161.902 115.815 cv
161.908 115.818 161.913 115.821 161.919 115.825 cv
161.925 115.829 161.931 115.832 161.937 115.836 cv
161.942 115.839 161.947 115.842 161.952 115.845 cv
161.958 115.848 161.965 115.852 161.971 115.856 cv
161.976 115.859 161.981 115.862 161.986 115.865 cv
161.992 115.868 161.998 115.872 162.004 115.876 cv
162.009 115.879 162.015 115.882 162.02 115.885 cv
162.031 115.891 162.042 115.898 162.053 115.904 cv
162.053 115.904 li
167.837 119.312 175.478 121.024 183.097 121.024 cv
190.416 121.024 197.716 119.444 203.329 116.269 cv
203.329 116.269 li
203.341 116.262 203.352 116.256 203.364 116.249 cv
203.366 116.248 203.368 116.247 203.369 116.246 cv
203.379 116.241 203.389 116.235 203.399 116.229 cv
203.401 116.228 203.403 116.227 203.405 116.226 cv
203.415 116.22 203.424 116.215 203.434 116.209 cv
203.435 116.208 203.436 116.208 203.438 116.207 cv
203.448 116.201 203.458 116.195 203.469 116.189 cv
203.47 116.189 203.471 116.188 203.472 116.187 cv
203.483 116.181 203.493 116.175 203.504 116.169 cv
203.505 116.169 203.505 116.169 203.505 116.168 cv
203.516 116.162 203.528 116.155 203.539 116.149 cv
203.539 116.149 203.54 116.149 203.54 116.148 cv
209.054 112.965 211.87 108.799 211.98 104.597 cv
212.413 108.975 li
212.421 109.058 li
212.426 109.107 li
212.423 109.103 li
212.611 111.581 211.872 114.078 210.205 116.406 cv
210.205 116.406 li
208.758 118.426 206.613 120.32 203.768 121.962 cv
197.977 125.305 190.387 126.977 182.797 126.977 cv
199.63 114.122 mo
199.639 114.117 199.647 114.113 199.655 114.108 cv
199.647 114.113 199.639 114.117 199.63 114.122 cv
199.674 114.097 mo
199.689 114.088 199.704 114.08 199.719 114.071 cv
199.704 114.08 199.689 114.088 199.674 114.097 cv
199.723 114.069 mo
199.739 114.06 199.755 114.051 199.771 114.042 cv
199.755 114.051 199.739 114.06 199.723 114.069 cv
199.782 114.036 mo
199.799 114.026 199.815 114.017 199.831 114.007 cv
204.78 111.15 207.126 107.36 206.869 103.618 cv
206.869 103.617 206.869 103.616 206.869 103.615 cv
207.127 107.358 204.781 111.149 199.831 114.007 cv
199.815 114.017 199.798 114.026 199.782 114.036 cv
208.856 96.7248 mo
207.515 95.1851 205.742 93.7353 203.538 92.4368 cv
201.519 91.247 199.271 90.2636 196.878 89.4879 cv
199.202 90.2312 201.387 91.1721 203.359 92.3108 cv
205.657 93.6376 207.489 95.1315 208.856 96.7248 cv
level3{
gsave
clp
[59.3094 0 0 59.3094 153.142 107.185 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(NHDS(j)PR)0VSO)L7eP)gmtP*.F"M*.a%K*J9(H+,,7G+GY=E+H(@B+cUC?+cpF=,EcO:,a;U8-'hX5
-CId4.%Es2.%Wm..A8s+.AJj&.]"m#/#Ois/?'io/?9ck/Zfcg0!Gid0!Yc`0=1i^0t%&^1UmDb2n8ng
3P#1j4hC[o6+d0t7D/[$8\P0)9tpZ.:r!&2<PSS7=ht(<>f$I@@)DsE@`/6HB#O`MBuU,QCrZMUDoVhX
E5qqYF3"=]G/sX`GK9aaH,oscI)l9fIE2BgJB.]jK#dolK?+#mKua5oLWBGqLr]PrMT5\sMoYkuNlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hr=\:hVnM8h;J>6gY`&3g>;l1g"l]/fA6K-f%g<+e_C-)e(ap'dG"X$d+\O#ce8@!c.W-tbh2srb1Qap
ak-Rna4L@l`n(1j`Rb(i_q"ef_q"ef_USVd_:/Gb^XN5`^=*&^][?c[]@$ZZ]$UKX\Bt9V\'Y0U[F"sS
[*\jRZd8[PZ-WINYg<@MYKm1KY0R(JXj-nHXNgeGX3CVEWQbDCW6G;BVTf)@V9Ao>UW`]<U<ET;U<<N:
Tum?8T?7-6T#q$5S]Lj3SB1a2R`PO0R)o=.QcT4-Q,s"+Q,s"+PfNh)PK3_(OiRM&ON7D%O2h5#NlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.251984 .555556 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[59.3094 0 0 59.3094 153.142 107.185 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~()If*)B0V8*ZlIH+<i$U,pt&g-n-Vr.kE8(/h\q92`X#e77g3M<EWR6@:a+fDJsQ<G'J@]It<3)L51VC
N/is\OHPflPa%K#R$sM7SXuIHTqS3UV5:)gWN3)$Xfek2Yd1UB[C3QS]">Sf^;%M#_SX40`Q$!@b08)T
cd:(feCE.%f\,!5h;7#FhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
hVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
~>
<~E-$/HH[UErKSGACO-,WkQ^XJ;U84W`WN32+ZF%'M\[oDc]tV7r^qmn)_o0O6`l?'>a2c6@a2c6@a2c6@
a2Z0?a2c6AaN2HDaN2HDaiVZHb0.uObfn;Tbg"DWcHab^cd0tbd*U.ddF$@ie'lgre^`7%f%8O+f\+s2
g=k<9gYCW@h;7&IiSrkVio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
~>
<~W2-#SQ][5]JUM]\CLpjV<),tN4#AQ:+;tn%#6Fl*zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
188.876 117.617 mo
188.826 117.453 li
192.435 116.805 195.831 115.657 198.689 114.007 cv
204.477 110.665 206.704 106.046 205.37 101.721 cv
206.133 102.904 206.607 104.135 206.793 105.378 cv
206.88 104.803 206.904 104.225 206.867 103.649 cv
206.868 103.638 206.868 103.628 206.869 103.618 cv
207.126 107.36 204.78 111.15 199.831 114.007 cv
199.815 114.017 199.799 114.026 199.782 114.036 cv
199.778 114.038 199.774 114.04 199.771 114.042 cv
199.755 114.051 199.739 114.06 199.723 114.069 cv
199.722 114.07 199.72 114.071 199.719 114.071 cv
199.704 114.08 199.689 114.088 199.674 114.097 cv
199.668 114.101 199.661 114.104 199.655 114.108 cv
199.647 114.113 199.639 114.117 199.63 114.122 cv
196.527 115.872 192.804 117.028 188.876 117.617 cv
level3{
gsave
clp
[48.1843 0 0 48.1843 158.704 104.171 ]ct
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~b/jV`aiOM_aN4D^aN+>]a2e5\`lJ,[`Q/#Z`5hoY`5hoY_oMfX_oMfX_T2]W_8lTV^rQKU^W6BT^;p9S
^;p9S]uU0R]>ssP]#XjO]#XjO\]=aN\B"XM\&\OL[`AFK[E&=J[)`4I[)`4IZH*"GZ,cnFYfHeEYK-\D
Y/gSCXiLJBXN1AAXN(;@X2b2?WlG)>WQ+u=W5el<VoJc;VT/Z:UrNH8UW3?7U;m66TuR-5TZ7$4T>pp3
T#Ug2S]:^1SAtU0S&YL/RE,@.R)f7-QcK.,QH&t*Q,`k)PfEb(PK*Y'P/dP&OiIG%ON.>$O2h5#NlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.1843 0 0 48.1843 158.704 104.171 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~aiVZHaiMQEaN)?Aa2c6@a2Z-=`l5p9`Pf^5`5BL1_o'C0_ns:-_SX1,_SO()_8*k%^q[Y!^V7Fr^:h4n
]tM+m]tM(k]=YYc]"5G_\[f8]\[f5[\@B#W\$rfS[^NTO[C*BK['[0GZa7!EZEga?Z*CO;Yct=7YHP+3
Y-+q0Xf\_,XK8M(X/i;%X/i;$WiE(uWMukqW2QYmVl-GiVP^5eV50o^USFTYU8"BUTqS0QTV.sMT:_aI
St;OFSXl=BS=H+>S"#n:R[TY4R$a8.Q^=&*QBmi&Q'IW"Pa%DsPEV2oP*1ukOcbcgOH>QcO,o?_NfK-[
~>
<~aN2HDaN2HDaN2HDaN)?Aa2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@
a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@
a2c6@a2c6@a2c6@a2c6?`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<
`l?$<`l?$<`l?$<`l?$<a2c6@a2c6@a2c6@a2c6@`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
176.715 117.617 mo
172.703 117.015 168.904 115.821 165.76 114.006 cv
160.812 111.149 158.466 107.358 158.723 103.616 cv
158.723 103.627 158.724 103.637 158.725 103.647 cv
158.687 104.224 158.712 104.803 158.798 105.378 cv
158.799 105.37 158.801 105.362 158.802 105.354 cv
159.258 108.417 161.466 111.41 165.423 113.791 cv
159.379 108.402 160.438 101.13 168.618 96.4074 cv
171.695 94.6305 175.4 93.4347 179.319 92.8203 cv
180.471 92.7238 181.633 92.6755 182.795 92.6755 cv
183.212 92.6755 183.628 92.6817 184.044 92.6941 cv
187.673 99.4296 188.579 99.7602 188.514 105.483 cv
188.461 110.174 186.449 113.295 184.546 115.203 cv
178.47 115.203 li
177.864 115.203 177.329 115.6 177.152 116.181 cv
176.715 117.617 li
188.826 117.453 mo
188.44 116.181 li
188.396 116.035 188.329 115.901 188.244 115.782 cv
192.428 112.965 198.227 106.632 193.936 94.4543 cv
193.909 94.3775 193.881 94.2994 193.854 94.2231 cv
196.007 94.8653 198.026 95.7073 199.831 96.7493 cv
202.356 98.207 204.202 99.9076 205.37 101.721 cv
206.704 106.046 204.477 110.665 198.689 114.007 cv
195.831 115.657 192.435 116.805 188.826 117.453 cv
163.884 95.5514 mo
163.884 95.5513 163.885 95.5508 163.885 95.5507 cv
163.884 95.5514 li
163.906 95.5355 mo
163.907 95.535 163.907 95.5346 163.908 95.5341 cv
163.907 95.5345 163.906 95.5352 163.906 95.5355 cv
163.924 95.5221 mo
163.927 95.5201 163.93 95.5179 163.933 95.5158 cv
163.93 95.518 163.927 95.52 163.924 95.5221 cv
163.945 95.5071 mo
163.949 95.5046 163.953 95.5016 163.956 95.4991 cv
163.953 95.5015 163.949 95.5047 163.945 95.5071 cv
163.967 95.4913 mo
163.972 95.4879 163.976 95.4848 163.981 95.4814 cv
163.976 95.485 163.972 95.4878 163.967 95.4913 cv
163.989 95.4752 mo
163.994 95.4718 163.999 95.4682 164.004 95.4648 cv
163.999 95.4683 163.994 95.4717 163.989 95.4752 cv
164.011 95.4593 mo
164.018 95.4549 164.023 95.4508 164.029 95.4464 cv
164.024 95.4506 164.017 95.4551 164.011 95.4593 cv
164.033 95.4439 mo
164.04 95.4391 164.046 95.4345 164.053 95.4297 cv
164.046 95.4346 164.04 95.4389 164.033 95.4439 cv
164.056 95.4271 mo
164.576 95.0567 165.134 94.6981 165.729 94.353 cv
165.728 94.3539 165.726 94.3547 165.725 94.3557 cv
165.717 94.3603 165.709 94.3649 165.701 94.3695 cv
165.699 94.3708 165.697 94.372 165.694 94.3733 cv
165.687 94.3776 165.679 94.3825 165.671 94.3867 cv
165.669 94.3882 165.666 94.3896 165.664 94.3911 cv
165.656 94.3957 165.648 94.4002 165.64 94.4048 cv
165.639 94.4057 165.637 94.4065 165.636 94.4075 cv
165.627 94.4127 165.619 94.4175 165.61 94.4228 cv
165.609 94.4233 165.607 94.4243 165.606 94.4249 cv
165.057 94.7479 164.54 95.0823 164.056 95.4271 cv
165.73 94.3529 mo
165.731 94.3521 165.732 94.3513 165.734 94.3505 cv
165.742 94.3455 165.752 94.3402 165.76 94.3352 cv
165.76 94.3352 li
165.75 94.3408 165.74 94.3468 165.73 94.3524 cv
165.73 94.3525 165.73 94.3527 165.73 94.3529 cv
level3{
gsave
clp
[48.1843 0 0 48.1843 157.561 104.171 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.1843 0 0 48.1843 157.561 104.171 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
165.423 113.791 mo
161.466 111.41 159.258 108.417 158.802 105.354 cv
159.283 102.215 161.599 99.1524 165.76 96.7493 cv
169.578 94.5453 174.357 93.2357 179.319 92.8203 cv
175.4 93.4347 171.695 94.6305 168.618 96.4074 cv
160.438 101.13 159.379 108.402 165.423 113.791 cv
163.231 96.0506 mo
163.232 96.0499 163.233 96.0488 163.234 96.0481 cv
163.233 96.0491 163.232 96.0496 163.231 96.0506 cv
163.252 96.034 mo
163.254 96.0323 163.256 96.0308 163.258 96.0291 cv
163.256 96.0309 163.254 96.0322 163.252 96.034 cv
163.273 96.0172 mo
163.276 96.0144 163.28 96.0115 163.284 96.0087 cv
163.28 96.0116 163.277 96.0143 163.273 96.0172 cv
163.296 95.9991 mo
163.486 95.8482 163.682 95.6989 163.884 95.5514 cv
163.885 95.5507 li
163.892 95.5456 163.899 95.5407 163.906 95.5355 cv
163.906 95.5352 163.907 95.5345 163.908 95.5341 cv
163.913 95.5302 163.919 95.5261 163.924 95.5221 cv
163.927 95.52 163.93 95.518 163.933 95.5158 cv
163.937 95.5128 163.941 95.5102 163.945 95.5071 cv
163.949 95.5047 163.953 95.5015 163.956 95.4991 cv
163.96 95.4965 163.963 95.4939 163.967 95.4913 cv
163.972 95.4878 163.976 95.485 163.981 95.4814 cv
163.983 95.4794 163.986 95.4772 163.989 95.4752 cv
163.994 95.4717 163.999 95.4683 164.004 95.4648 cv
164.006 95.4629 164.009 95.4612 164.011 95.4593 cv
164.017 95.4551 164.024 95.4506 164.029 95.4464 cv
164.03 95.4457 164.032 95.4445 164.033 95.4439 cv
164.04 95.4389 164.046 95.4346 164.053 95.4297 cv
164.054 95.4289 164.055 95.428 164.056 95.4271 cv
164.54 95.0823 165.057 94.7479 165.606 94.4249 cv
164.757 94.9237 163.988 95.4499 163.296 95.9991 cv
165.61 94.4228 mo
165.619 94.4175 165.627 94.4127 165.636 94.4075 cv
165.627 94.4127 165.619 94.4176 165.61 94.4228 cv
165.64 94.4048 mo
165.648 94.4002 165.656 94.3957 165.664 94.3911 cv
165.656 94.3955 165.648 94.4004 165.64 94.4048 cv
165.671 94.3867 mo
165.679 94.3825 165.687 94.3776 165.694 94.3733 cv
165.687 94.3778 165.679 94.3823 165.671 94.3867 cv
165.701 94.3695 mo
165.709 94.3649 165.717 94.3603 165.725 94.3557 cv
165.717 94.3603 165.709 94.3649 165.701 94.3695 cv
165.73 94.3524 mo
165.74 94.3468 165.75 94.3408 165.76 94.3352 cv
165.76 94.3352 li
165.75 94.3409 165.74 94.3466 165.73 94.3524 cv
level3{
gsave
clp
[48.1843 0 0 48.1843 157.561 104.171 ]ct
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~mJ$Y^mJ$Y^m.UJ[m.UJ[lh1;YlLk2Xl1P)Wl1P)Wkk+oUkk+oUkOefTk4AWRk4AWRjn&NQjR`EPj7E<O
iq*3Niq!-MiU[$Li:?pKht$gJhX^^IhXUXHh=:OGh!tFFg[Y=Eg@>4Dg@>4Dg%#+Cf^SqAfC8h@f'r_?
eaWV>eaWV>eF<M=e*m>;ddR5:dI7,9dI.&8d-gr7cgLi6cL(Z4cL(Z4c0bQ3bj>B1bO#90bO#90b3]0/
amB'.aR&s-a6Wd+a6Wd+`p<[*`U!R)`9[I(_s@@'_X%7&_X%7&_<_.%^[(q#^?bh"^?Yb!^$>Xu]B]Fs
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.1843 0 0 48.1843 157.561 104.171 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~m-O**m-O**m-F!'lg*m&lg!d#lKRQtl0.?pkih6oki_-lkND$kkN:phk2k^djlPUcjlGL`jQ#:\j5T(X
io8qUiSibSiSi_Qi8EMMhr!;IhVR)Eh;-oCh;-lAgt^Z=gY:H9g=k65g"G'3g"G$1f\"g-f@SU)f%/C%
e^`4"eC<!teC<!se'ldodaHRkdF$@gd*U.dd*U.ccd0q_cHa_[c-=MXc-=MWbfn;SbKJ)Ob0%lLb0%lK
aiVZHaN2HDa2c6@`l?$<`l?$<`Pog8`5KU4_o'C0_SX1,_83t(_83t(^qd_"^:q=q]tM+m]tM+m]Y(kg
~>
<~p\4FVp\4FVp\+=Sp@e4Rp@\+Op%A"Np%A"Np%A"Np%7nKo^qeJo^qeJo^h\GoCMSFoCMSFoCMSFoCMSF
oCMSFoCMPDo()ABo()ABo()ABo()ABo()>@naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ,<nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r9n*f`6n*f`6n*f`5mdBN2mdBN2mdBN1mHs<.mHs<.mHs<-m-O**m-O**m-O**
m-O**m-O**m-O**lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lK[["lK[["
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
206.793 105.378 mo
206.607 104.135 206.133 102.904 205.37 101.721 cv
204.202 99.9076 202.356 98.207 199.831 96.7493 cv
198.026 95.7073 196.007 94.8653 193.854 94.2231 cv
193.519 93.2865 193.169 92.3865 192.805 91.515 cv
195.352 92.186 197.736 93.1262 199.831 94.3361 cv
200.691 94.8324 201.472 95.3563 202.174 95.9038 cv
205.13 98.2083 206.692 100.92 206.867 103.657 cv
206.867 103.654 206.867 103.651 206.867 103.649 cv
206.904 104.225 206.88 104.803 206.793 105.378 cv
158.798 105.378 mo
158.712 104.803 158.687 104.224 158.725 103.647 cv
158.725 103.65 158.725 103.653 158.725 103.656 cv
158.896 100.978 160.396 98.3228 163.231 96.0506 cv
163.232 96.0496 163.233 96.0491 163.234 96.0481 cv
163.24 96.0434 163.246 96.0387 163.252 96.034 cv
163.254 96.0322 163.256 96.0309 163.258 96.0291 cv
163.263 96.0252 163.268 96.021 163.273 96.0172 cv
163.277 96.0143 163.28 96.0116 163.284 96.0087 cv
163.288 96.0054 163.292 96.0024 163.296 95.9991 cv
163.988 95.4499 164.757 94.9237 165.606 94.4249 cv
165.607 94.4243 165.609 94.4233 165.61 94.4228 cv
165.619 94.4176 165.627 94.4127 165.636 94.4075 cv
165.637 94.4065 165.639 94.4057 165.64 94.4048 cv
165.648 94.4004 165.656 94.3955 165.664 94.3911 cv
165.666 94.3896 165.669 94.3882 165.671 94.3867 cv
165.679 94.3823 165.687 94.3778 165.694 94.3733 cv
165.697 94.372 165.699 94.3708 165.701 94.3695 cv
165.709 94.3649 165.717 94.3603 165.725 94.3557 cv
165.726 94.3547 165.728 94.3539 165.729 94.353 cv
165.73 94.3528 165.729 94.3531 165.73 94.3529 cv
165.73 94.3527 165.73 94.3525 165.73 94.3524 cv
165.74 94.3466 165.75 94.3409 165.76 94.3352 cv
165.76 94.3352 li
165.858 94.2785 165.958 94.222 166.057 94.1665 cv
170.714 91.5674 176.738 90.266 182.764 90.2616 cv
183.224 91.1577 183.65 91.9637 184.044 92.6941 cv
183.628 92.6817 183.212 92.6755 182.795 92.6755 cv
181.633 92.6755 180.471 92.7238 179.319 92.8203 cv
174.357 93.2357 169.578 94.5453 165.76 96.7493 cv
161.599 99.1524 159.283 102.215 158.802 105.354 cv
158.801 105.362 158.799 105.37 158.798 105.378 cv
level3{
gsave
clp
[60.7523 0 0 60.7523 158.708 97.8199 ]ct
/17 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8PGZs8PGZs8PGZs8PGZs8PGZs8PGZs8PGZs8PGZs8PGZs8PGZs8PGZs8PGYs8PDXs8PDXs8PDXs8PDW
s8PDWs8PAUs8PAUs8PATs8P>Ss8P>Rs8P;Ps8P8Os8P5Ms8P5Ks8P2Is8P2Gs8P/Ds8P,As8P)>s8P&;
s8P#7s8Ou4s8Oo.s8Oi)s8O`$s8OVss8OPns8OGhrr42_r;RlVqYqNMq#;0BpAYd7pAYX0o`#:(nc&gu
mJd1hl2L_bk5G>]iq39OhXLRGg$A\=e`Zu5d,Y0,bhiC#b1lss`n:=l_USVd^sN,^]?^HW]$(-S[`SRM
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&9tS_&9tS_&9tS_&9tS_&U:Y_&UC_`&UC\_&pgh`&pgb^'76n_'7I"`'n37b(4WCc(P/Ue(kJUc)1nXb
)MFgc)ht!d*/C'c*/U'a*K-0`+,uB`+HMK_+d%N\,Em`\-'`o[-^]/[.@P;Y.\1DW/Y?YV0;;kU0W&%T
1T==R269LQ33PaO3jLmK4gd-I5I`6E6G"EA7D9Z?8&5]99#Lr79um;7;9Jq><m:UE?I&TOB$^MXDUAFa
FOC-hHdVloK$jW!L=6,&MphY+OOO71Q.#^5RaM09T$[N<U<rr@V9o8CWR(VFXj-nHZ-<7K[*/LM[`SRM
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.607101 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[60.7523 0 0 60.7523 158.708 97.8199 ]ct
clp
/17 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N#rr;?Hgq=saZp@\+Op%7kHnF,c2lKIEnjQ#4W
hV?i;f%&6sccs\Wb/q]D`59@+^qRFl]",>Z[C!6DXfJCtUS4<MR[98$Nf&UFJpqufEG]B!?<L9+:J=DQ
7n#g45X%=n3]K&U1bpa<0.e_).4?Pj,pOTW+<M[H*?6";)]BV4)&O/+()7Pu'+toj&J5Td&.fBa%hB0]
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N#sqtKaS
naGl2l0.9kj5JnOgtUQ9f@AC!dEp4bc-+;Qb0/#Rc-F\_d*U.edF-Lme'c[mda?IidEp7dccs\WaiDB<
_8![q\[SuRZEUL5Wi2ejU7e*KS!fY1Q'7AnOH,<ZMi!7FL4t;5Jq8H&J:;rqI=$9dH$O[[G^+FVGB\7T
~>
<~6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:*t(5s[e&5s[e&5s[b$5X7S"5X7Ou5<h@r5!;%l4?P_g
4?GVd4$,Ja3B9)Z3&`cS2E!EL1G^d@0.nh-.k2tr-RC#^+WqgG)]9J.'G:rf%1<LK"p=u-zzzzzzzzzz
zzzzzzz!!!-.%MTj)-7go24@)G0:fLP%?t<qdDf^,KI=Qs)M2dRZPa@f.StMdOUSauiX/rD)Xfek2Yd1
R@Za7$G['[3I~>
<~8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8P)KF8P)KF8P)HD84Z6@7n6'=7Rfj:77BX56psF26UF()
5sRXu4Ztnh3]T2[2`<NL1GU[</M&D%.4?Pj,pOTW+<DOB)&O,('G:re$k!CK#R:P<"U"o/!W`<&zzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /17 /Gradient get_res exec grestore
}if
np
183.096 119.994 mo
175.477 119.994 167.837 118.282 162.053 114.875 cv
156.657 111.696 153.855 107.612 153.629 103.508 cv
153.412 107.823 156.042 112.194 161.545 115.598 cv
156.553 112.51 153.918 108.626 153.634 104.71 cv
153.302 100.133 156.182 95.5131 162.262 92.0734 cv
167.571 89.0706 174.386 87.4942 181.301 87.3318 cv
181.629 88.0054 181.942 88.6384 182.243 89.2351 cv
176.263 89.3139 170.324 90.6708 165.76 93.3059 cv
160.846 96.1424 158.503 99.8997 158.723 103.616 cv
158.466 107.358 160.812 111.149 165.76 114.006 cv
168.904 115.821 172.703 117.015 176.715 117.617 cv
177.152 116.181 li
177.329 115.6 177.864 115.203 178.47 115.203 cv
184.546 115.203 li
183.763 115.989 182.998 116.569 182.397 116.968 cv
180.21 116.968 li
179.849 116.968 179.557 117.26 179.557 117.621 cv
179.557 117.712 li
179.557 117.712 li
179.557 117.713 li
179.557 117.713 li
179.557 118.074 179.849 118.366 180.21 118.366 cv
185.381 118.366 li
185.741 118.366 186.034 118.074 186.034 117.713 cv
186.034 117.713 li
186.034 117.621 li
186.034 117.621 li
186.034 117.444 185.964 117.283 185.849 117.166 cv
185.849 117.166 185.849 117.165 185.849 117.165 cv
185.848 117.164 185.846 117.163 185.845 117.162 cv
185.845 117.161 185.844 117.16 185.843 117.159 cv
185.842 117.159 185.842 117.158 185.841 117.157 cv
185.841 117.157 185.841 117.157 185.84 117.157 cv
186.48 116.852 187.323 116.403 188.244 115.782 cv
188.329 115.901 188.396 116.035 188.44 116.181 cv
188.826 117.453 li
188.876 117.617 li
192.804 117.028 196.527 115.872 199.63 114.122 cv
199.639 114.117 199.647 114.113 199.655 114.108 cv
199.661 114.104 199.668 114.101 199.674 114.097 cv
199.689 114.088 199.704 114.08 199.719 114.071 cv
199.72 114.071 199.722 114.07 199.723 114.069 cv
199.739 114.06 199.755 114.051 199.771 114.042 cv
199.774 114.04 199.778 114.038 199.782 114.036 cv
199.798 114.026 199.815 114.017 199.831 114.007 cv
204.781 111.149 207.127 107.358 206.869 103.615 cv
207.087 99.899 204.745 96.1419 199.831 93.3059 cv
197.6 92.0177 195.04 91.0347 192.307 90.3575 cv
191.96 89.5751 191.604 88.8197 191.24 88.0858 cv
193.18 88.4346 195.071 88.9021 196.878 89.4879 cv
199.271 90.2636 201.519 91.247 203.538 92.4368 cv
205.742 93.7353 207.515 95.1851 208.856 96.7248 cv
211.01 99.1983 212.05 101.904 211.98 104.597 cv
211.87 108.799 209.054 112.965 203.54 116.148 cv
209.4 112.765 212.208 108.271 211.962 103.804 cv
211.752 107.979 208.877 112.1 203.329 115.238 cv
197.716 118.414 190.416 119.994 183.096 119.994 cv
203.329 116.269 mo
203.341 116.262 203.352 116.256 203.364 116.249 cv
203.352 116.256 203.341 116.262 203.329 116.269 cv
203.369 116.246 mo
203.379 116.241 203.389 116.235 203.399 116.229 cv
203.389 116.235 203.379 116.241 203.369 116.246 cv
203.405 116.226 mo
203.415 116.22 203.424 116.215 203.434 116.209 cv
203.424 116.215 203.415 116.22 203.405 116.226 cv
203.438 116.207 mo
203.448 116.201 203.459 116.195 203.469 116.189 cv
203.458 116.195 203.448 116.201 203.438 116.207 cv
203.472 116.187 mo
203.483 116.181 203.493 116.175 203.504 116.169 cv
203.493 116.175 203.483 116.181 203.472 116.187 cv
203.505 116.168 mo
203.516 116.162 203.528 116.156 203.539 116.149 cv
203.528 116.155 203.516 116.162 203.505 116.168 cv
162.053 115.904 mo
162.042 115.898 162.031 115.891 162.02 115.885 cv
162.031 115.891 162.042 115.898 162.053 115.904 cv
162.004 115.876 mo
161.998 115.872 161.992 115.868 161.986 115.865 cv
161.992 115.869 161.998 115.872 162.004 115.876 cv
161.971 115.856 mo
161.965 115.852 161.958 115.848 161.952 115.845 cv
161.959 115.849 161.965 115.852 161.971 115.856 cv
161.937 115.836 mo
161.931 115.832 161.925 115.829 161.919 115.825 cv
161.925 115.828 161.931 115.832 161.937 115.836 cv
161.902 115.815 mo
161.897 115.812 161.891 115.808 161.885 115.805 cv
161.891 115.808 161.897 115.812 161.902 115.815 cv
161.87 115.796 mo
161.864 115.792 161.858 115.788 161.851 115.785 cv
161.857 115.788 161.864 115.792 161.87 115.796 cv
161.837 115.776 mo
161.831 115.772 161.825 115.768 161.819 115.765 cv
161.825 115.769 161.831 115.772 161.837 115.776 cv
161.803 115.756 mo
161.797 115.752 161.791 115.748 161.785 115.744 cv
161.791 115.748 161.797 115.752 161.803 115.756 cv
161.772 115.736 mo
161.765 115.732 161.758 115.728 161.751 115.724 cv
161.758 115.728 161.765 115.732 161.772 115.736 cv
161.739 115.716 mo
161.732 115.712 161.725 115.708 161.718 115.704 cv
161.725 115.708 161.732 115.712 161.739 115.716 cv
161.706 115.697 mo
161.699 115.692 161.691 115.688 161.684 115.683 cv
161.691 115.688 161.699 115.692 161.706 115.697 cv
161.674 115.677 mo
161.666 115.672 161.659 115.668 161.65 115.662 cv
161.658 115.667 161.666 115.672 161.674 115.677 cv
161.642 115.658 mo
161.634 115.652 161.625 115.647 161.616 115.642 cv
161.625 115.647 161.634 115.652 161.642 115.658 cv
161.61 115.638 mo
161.6 115.632 161.592 115.627 161.583 115.621 cv
161.592 115.627 161.601 115.632 161.61 115.638 cv
161.577 115.618 mo
161.568 115.612 161.558 115.606 161.548 115.6 cv
161.558 115.606 161.567 115.612 161.577 115.618 cv
202.174 95.9038 mo
201.472 95.3563 200.691 94.8324 199.831 94.3361 cv
197.736 93.1262 195.352 92.186 192.805 91.515 cv
192.805 91.5146 li
195.351 92.1855 197.736 93.1258 199.831 94.3352 cv
200.691 94.8317 201.472 95.3562 202.174 95.9038 cv
165.734 94.3505 mo
165.742 94.3454 165.751 94.3403 165.76 94.3352 cv
165.752 94.3402 165.742 94.3455 165.734 94.3505 cv
166.057 94.1665 mo
170.714 91.5674 176.738 90.266 182.764 90.2615 cv
182.764 90.2616 li
176.738 90.266 170.714 91.5674 166.057 94.1665 cv
level3{
gsave
clp
[108.165 0 0 108.165 145.74 90.4045 ]ct
/18 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(NHDS(j)PR)0VSO)L7eP)gmtP*.F"M*.a%K*J9(H+,,7G+GY=E+H(@B+cUC?+cpF=,EcO:,a;U8-'hX5
-CId4.%Es2.%Wm..A8s+.AJj&.]"m#/#Ois/?'io/?9ck/Zfcg0!Gid0!Yc`0=1i^0t%&^1UmDb2n8ng
3P#1j4hC[o6+d0t7D/[$8\P0)9tpZ.:r!&2<PSS7=ht(<>f$I@@)DsE@`/6HB#O`MBuU,QCrZMUDoVhX
E5qqYF3"=]G/sX`GK9aaH,oscI)l9fIE2BgJB.]jK#dolK?+#mKua5oLWBGqLr]PrMT5\sMoYkuNlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hr=\:hVnM8h;J>6gY`&3g>;l1g"l]/fA6K-f%g<+e_C-)e(ap'dG"X$d+\O#ce8@!c.W-tbh2srb1Qap
ak-Rna4L@l`n(1j`Rb(i_q"ef_q"ef_USVd_:/Gb^XN5`^=*&^][?c[]@$ZZ]$UKX\Bt9V\'Y0U[F"sS
[*\jRZd8[PZ-WINYg<@MYKm1KY0R(JXj-nHXNgeGX3CVEWQbDCW6G;BVTf)@V9Ao>UW`]<U<ET;U<<N:
Tum?8T?7-6T#q$5S]Lj3SB1a2R`PO0R)o=.QcT4-Q,s"+Q,s"+PfNh)PK3_(OiRM&ON7D%O2h5#NlM,"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:hr=\:
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.251984 .735661 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[108.165 0 0 108.165 145.74 90.4045 ]ct
clp
/18 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~()If*)B0V8*ZlIH+<i$U,pt&g-n-Vr.kE8(/h\q92`X#e77g3M<EWR6@:a+fDJsQ<G'J@]It<3)L51VC
N/ipZO-#HcP*;)oPa%DtQC!r*R@9V8S=Q4BStD^MTqS3TUSO`_VPgAkWN*#"XK8P+Y-+t3YctC<Za7$G
[C3QR\@K2^]=Y_h^:q@t_84"*_SX40`Q#p<aN;QHbKS2TcHjh`d*^:jeCE+#f%8R-g"P07gtgfChVR,G
hVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
~>
<~E-$/HH[UErKSGACO-,WkQ^XJ;U84W`WN32+ZF%'M\[oDc]tV7r^qmn)_o0O6`l?'>a2c6@a2c6@a2c6@
a2Z->a2c6@a2c6AaN2HDaN2HDaN2HDaN;QGaiV]JbKJ)PbKJ,Rbfn;Tbfn>Vc-=PZcHab^cd0q`d*U.d
d*U.dd*U1fdF$Cje'ldpeC<%!e^`7%f%8O*f@\a.f\+s2g"P06g=tB:gYCT?h;-oDhV[5Ki8NYSio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
~>
<~W2-#SQ][5]JUM]\CLpjV<),tN4#AQ:+;tn%#6Fl*zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /18 /Gradient get_res exec grestore
}if
np
199.831 93.3059 mo
190.422 87.8733 175.168 87.8733 165.76 93.3059 cv
160.828 96.1525 158.487 99.9261 158.725 103.656 cv
158.941 100.27 161.283 96.9202 165.76 94.3352 cv
175.168 88.9035 190.422 88.9035 199.831 94.3352 cv
204.309 96.9211 206.651 100.27 206.867 103.657 cv
207.105 99.927 204.763 96.1525 199.831 93.3059 cv
0 0 0 0 cmyk
f
203.329 115.238 mo
191.873 121.719 173.393 121.556 162.053 114.875 cv
156.657 111.696 153.855 107.612 153.629 103.508 cv
153.406 107.953 156.204 112.459 162.053 115.904 cv
173.393 122.586 191.873 122.749 203.329 116.269 cv
209.333 112.872 212.211 108.324 211.962 103.804 cv
211.752 107.979 208.877 112.1 203.329 115.238 cv
f
185.381 118.366 mo
180.21 118.366 li
179.849 118.366 179.557 118.073 179.557 117.712 cv
179.557 117.621 li
179.557 117.26 179.849 116.968 180.21 116.968 cv
185.381 116.968 li
185.742 116.968 186.034 117.26 186.034 117.621 cv
186.034 117.712 li
186.034 118.073 185.742 118.366 185.381 118.366 cv
1 .984497 .171084 .186252 cmyk
f
185.999 117.887 mo
185.922 117.613 185.68 117.407 185.381 117.407 cv
185.287 117.407 li
185.447 117.338 185.633 117.255 185.84 117.157 cv
185.841 117.157 185.841 117.157 185.841 117.157 cv
185.842 117.158 185.842 117.159 185.843 117.159 cv
185.844 117.16 185.845 117.161 185.845 117.162 cv
185.846 117.163 185.848 117.164 185.849 117.165 cv
185.849 117.165 185.849 117.166 185.849 117.166 cv
185.964 117.284 186.034 117.444 186.034 117.621 cv
186.034 117.621 li
186.034 117.713 li
186.034 117.713 li
185.999 117.887 li
179.592 117.887 mo
179.557 117.713 li
179.557 117.713 li
179.557 117.712 li
179.557 117.621 li
179.557 117.261 179.849 116.968 180.21 116.968 cv
182.397 116.968 li
182.12 117.152 181.877 117.298 181.683 117.407 cv
180.21 117.407 li
179.911 117.407 179.669 117.613 179.592 117.887 cv
level3{
gsave
clp
[8.40469 0 0 8.40469 178.983 117.427 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.40469 0 0 8.40469 178.983 117.427 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
183.588 164.21 mo
182.953 166.596 180.505 168.016 178.12 167.381 cv
175.735 166.747 174.316 164.299 174.95 161.913 cv
175.584 159.529 177.834 158.853 180.219 159.488 cv
182.605 160.121 184.222 161.825 183.588 164.21 cv
cp
.062623 .46894 .71017 0 cmyk
f
187.107 159.502 mo
186.206 160.382 185.056 160.268 184.291 159.487 cv
183.528 158.705 183.441 157.552 184.34 156.672 cv
185.24 155.793 186.951 155.36 187.714 156.141 cv
188.478 156.923 188.006 158.623 187.107 159.502 cv
cp
f
182.432 155.763 mo
182.211 157.002 181.209 157.578 180.133 157.387 cv
179.057 157.196 178.316 156.309 178.536 155.07 cv
178.756 153.831 179.896 152.484 180.972 152.675 cv
182.047 152.866 182.653 154.525 182.432 155.763 cv
cp
f
176.671 155.191 mo
177.15 156.355 176.613 157.379 175.602 157.795 cv
174.592 158.211 173.49 157.861 173.011 156.697 cv
172.533 155.533 172.771 153.785 173.782 153.369 cv
174.792 152.953 176.192 154.028 176.671 155.191 cv
cp
f
191.24 88.0858 mo
188.394 87.574 185.443 87.3178 182.495 87.3178 cv
182.097 87.3178 181.699 87.3224 181.301 87.3318 cv
180.809 86.321 180.286 85.219 179.73 84.0149 cv
172.456 68.2688 180.24 56.6301 180.24 56.6301 cv
175.913 69.1547 184.713 74.9259 191.24 88.0858 cv
level3{
gsave
clp
[796.433 0 0 798.007 66.1882 -102.14 ]ct
/19 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~EJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;l
EJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;l
EJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;l
EJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;lEJ+;l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Lj:WSLj:WSLj:WSLj:WSLj:WSLjC]TLO(QRLO(QRLO(QRLO(QRLO(QRLO(NQLO(NQLO(KPLO(HOLO(EN
L3b<ML3b9LL3k<LL3k6JL3k3IKmY*GKmY$DKR=mBKRFpBK7+a?JpeR<JpeL:JUSC8JUS=6J:8.3J:8%0
It%q.IX__*I=DP'I")>#H[l5!H@Q%sH%5kpG_#hpG_#hpG(BVnFb0SnFFjJmF+XGmEJ"5kEJ"5kE.\,j
E.e2kDhJ)jDhJ)jDhJ)jDhJ)jDhJ)jE.e2kE.e2kE.e2kEJ+;lEJ+;lEeFDmEJ+;lE.e2kEJ+;lEJ+;l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00396825 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[796.433 0 0 798.007 66.1882 -102.14 ]ct
clp
/19 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~E,]c8E,]c8E,]c8E,]f:EH,u<EH,r:E,]c8E,]`6Df9Q4Df9Q4Df9N2DJj?0DJj?0DJj?0DJjB2Df9Q4
Df9T6E,]c8E,]f:EcQ5BF)uGFFEDVIF`hhMG'A.SGB\7UG^+IYH$O[]H?smaH[C*eI!g<iI=6NmIXZ`q
It)rtIt)ruJ:N0#J:N0$JUrB'JUrB(JqAT,K7ef/K7ef0KS5#3KS5#3KnY57KnY57KnY57KnY57KnY57
L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?
~>
<~K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/
K7ec-JqAT+JqAT+JqAT+JqAQ)JUrB'JUrB&J:N0#J:N0#J:N0"It)rtIt)rtIt)rsIXZ`pIXZ`pIXZ`p
IXZ`oI=6NlI=6NlI=6NlI=6NkI!g<hI!g<hI!g<hI!g<gH[C*dH[C*dH[C*dH?sm`H?sm`H?sm`H$O[\
H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\G^+IXG^+IXG^+IXG^+IX
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!!**%!WrN-"9er5#6tM@#mq"I$k*RT%M'']&J5Wh',2,q'c%Q$(Dmu
,)&aD4)]Th<*?H7D+!2RI+<VdM+X/*S,9nHZ,pai`-71)f-n$Jl.4H\p.4H\p.Olnt.k<,#/1`>'/1`>
'/M/P+/M/P+/M/P+/M/P+/M/P+/hSb//hSb//hSb//hSb//hSb//hSb/~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /19 /Gradient get_res exec grestore
}if
np
188.244 115.782 mo
187.991 115.426 187.576 115.203 187.122 115.203 cv
184.546 115.203 li
186.449 113.295 188.461 110.174 188.514 105.483 cv
188.579 99.7602 187.673 99.4296 184.044 92.6941 cv
187.424 92.7947 190.775 93.3044 193.854 94.2231 cv
193.881 94.2994 193.909 94.3775 193.936 94.4543 cv
198.227 106.632 192.428 112.965 188.244 115.782 cv
level3{
gsave
clp
[48.1843 0 0 48.1843 157.561 104.171 ]ct
/20 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Ao[kOAo[kOAT@bNAT@bNA9%YM@rVJK@W;AJ@W;AJ@;u8I@;u8I?uZ/H?Z?&G?Z?&G??#rF?#]iE?#TcD
>]9ZC>]9ZC>AsQB>AsQB>&XHA=`=?@=`=?@=E"6?=)\->=)\-><cA$=<H%p<<,_g;<,_g;;fD^:;fD^:
;JuO8;/ZF7:i?=6:i?=6:N$45:2U%3:2U%39l9q29Psh195OY/95OY/8o4P.8o4P.8SnG-8SnG-88J8+
7r//*7r//*7Vi&)7Vi&)7;Mr(7;Mr(6u2i'6Yl`&6Yl`&6>QW%6#6N$6#6N$5\pE#5\pE#5AU<"5&:3!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.1843 0 0 48.1843 157.561 104.171 ]ct
clp
/20 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~AS#FaAS#FaARo=^A7T4]A7K+Z@q&nV@UW\R@:<SQ@:3JN?smAM?sd8J?X@&F?=$rE?<piB?!LW>>[1N=
>[1K;>?b<9>?b97>$>*5>$>'3=]nj/=BJ[-=BJX+='&F'<`W7%<`W4#<E3!t<)cdp;c?Un;c?Rl;GpCj
;GpCi;,L1e:f'ta:JXb^:JXb]:/4PY9he>V9he>U9MA,Q91qoM8kM]J8kM]I8P)KF8P)KE84Z9B84Z9A
7n6'>7Rfj:7Rfj:77BX677BX66psF26psF26UO4.6:+"*6:+"*5s[e&5X7S"5X7S"5<h@s5<h@s5!D.o
~>
<~EH,u<EH,u<EH,u<EH,u<EH,u<EH#l9E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,TZ5
Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4Df9Q4
Df9Q3DJj?0DJj?0DJj?0DJj?0DJj?/D/F-,D/F-,D/F-,D/F-+Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!p'
CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /20 /Gradient get_res exec grestore
}if
np
193.854 94.2231 mo
190.775 93.3044 187.424 92.7947 184.044 92.6941 cv
183.65 91.9637 183.224 91.1577 182.764 90.2616 cv
182.774 90.2616 182.785 90.2616 182.795 90.2616 cv
186.215 90.2616 189.635 90.6794 192.805 91.515 cv
193.169 92.3865 193.519 93.2865 193.854 94.2231 cv
level3{
gsave
clp
[60.7523 0 0 60.7523 158.708 97.8199 ]ct
/21 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~J9)h5J9)h5J9)h5J9)h5J9)h5J9)h5J9)h5J9)h5J9)h5J9)h5J9)e4J9)e4J9)e4J9)e4J9)e4J9)e4
J9)b3J9)b3IrcV1IrcV1IrcV1IrcS0IWQP0IWQM/IWQM/I<6A-I<6>,I<6;+I!$5*I!$2)HZ^#&H?Bl$
H$0f#H$0`!G]jPsG]sPrGBXAoG'=5mFa+)jFEdogF*I`dEHhH`E-VE`DKu3^D0c0^CO6$]C4$!]BRBd[
ApjXZAUOOY@sn=W@X\:W@X\:W@X\:W@X\:W@=J7W@=J7W@=A1V@=A1V@=J7W@=A1V@=A1V@"&(U?@DkS
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~#<,BX#<,BX#<,BX#<,BX#<,?W#WPNY#WPKX#WPHW#WPEV#WYKW#rtQW#rtNV#s(QV#s1TV$9U`W$9U]V
$9^]U$U$cU$U-cT$pQlT%7!#U%RE/V%RN/U%mr8U%n&8T&4JAT&OnGS&k=PS&kFPR'1s\R'2'YP'MTbO
'i#hN(/GnM(/YqL(K)"K(fM%I),q(G)HI4G)d!@G**NIF*ErOE*aJaG+C5$J,$t<M,[gZQ-=QrT.:W>X
/7\_\04b+`0kUId1hZjh2ei<m3bn]q4_t)u5]6W&6uW,+894b29QU77:j)g=<-SBC=EslH>^QMO?@DkS
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.607101 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[60.7523 0 0 60.7523 158.708 97.8199 ]ct
clp
/21 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIsuiqIXZ`pIXZ`oI=6NlI=6Kj
I!g<hI!g9fH[C*cH?jd\G^+IXGB\7TGBS.QF`heJFE;MDEH,r:Df0H0D/=!'C2.HrB4kgfARo=]@U`bS
@:<SQ@:<SQ?smAM?smAM?smAM?smAM?sd8I?!LN6<)QLd8k2<:5X%:k3&WWM0eY.1.OZYj,U+BS*uu@A
*#fe7)&O2,(D[`#'bh>q'+toj&J5Td&.]6\%LijV%1EUP$47+H#mgnE#RC\A#RCY?#6tJ=#6tG;"pP89
~>
<~EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@F)uDDF)uDDF)uDD
F)uDEFEDVHFEDVHFEM_KF`hhLG'8%PG'8%PGB\7TGB\7TGB\:VG^+IYH$Xd_H[C*dI!g<hI!g<hI=6Nl
I=6NlI=6QnIXZ`pIXQWmIXZ`pIXQWmI=6NlI=-?cG^":PF)l8=Df'9*C2%?oB4YUa@q&nU@:*>I?!LT;
>$+j,<Dugo;Gg7d:/+GV91hcH7n,s:779L16:!n&5X.Fr4Zkhh4?GVd3]T2[3&ilW2`EZS2`EWQ2E!HO
~>
<~+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!)IE*Zc@D*Zc@D*Zc@D*??.@*?6%=*#oq<)]K_8)]BV5)B'J2
)&O2,(Ddi&'bh>q'+toi&J,H_%1N^R$4."F#R1G8"9S]+zzzzzzzzzzzzzzzzzzzzzz!!!!"!sT#<$k<
g^'c.`,*?QFL,pt,l/1rS01,LjH2`Wo\4$5Yi5=%S%6UX@37Ros>84cBE8kVfN9MA/T9he>V~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /21 /Gradient get_res exec grestore
}if
np
185.84 117.157 mo
185.839 117.156 185.838 117.155 185.837 117.154 cv
185.837 117.153 185.837 117.153 185.837 117.153 cv
185.719 117.039 185.558 116.968 185.381 116.968 cv
185.381 116.968 li
182.397 116.968 li
182.998 116.569 183.763 115.989 184.546 115.203 cv
187.122 115.203 li
187.576 115.203 187.991 115.426 188.244 115.782 cv
187.323 116.403 186.48 116.852 185.84 117.157 cv
192.805 91.515 mo
189.635 90.6794 186.215 90.2616 182.795 90.2616 cv
182.785 90.2616 182.774 90.2616 182.764 90.2616 cv
182.764 90.2615 li
182.775 90.2615 182.785 90.2615 182.795 90.2615 cv
186.215 90.2615 189.635 90.679 192.805 91.5146 cv
192.805 91.515 li
192.307 90.3575 mo
189.278 89.6066 186.037 89.2314 182.795 89.2314 cv
182.611 89.2314 182.427 89.2327 182.243 89.2351 cv
181.942 88.6384 181.629 88.0054 181.301 87.3318 cv
181.699 87.3224 182.097 87.3178 182.495 87.3178 cv
185.443 87.3178 188.394 87.574 191.24 88.0858 cv
191.604 88.8197 191.96 89.5751 192.307 90.3575 cv
level3{
gsave
clp
[108.165 0 0 108.165 145.74 90.4045 ]ct
/22 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~$8Y3Q$T(<Q$T:?P$TC?O$TL<M$opEM$p$BK%6QQL%6ZNJ%6ZHH%R)QH%R;WH%m_]G&47lH&4@iF&4IfD
&4RcB&4dfA&4mf@&5!c>&PNo>&PWl<&P`i:&l/r:&l8o8&lAo7&lJl5'2nu5'3"u4'NG,5'NP26'itA8
(0CP:(K^Y;(g-h=)Hm+@)d34A*ErLD*a8UE+'\dG+^>!I,$b0K,@(9L,[LHN-!pWP-XQiR.:<,U.U`;W
.q&DX/7JSZ/n4k]04Ot^0Ot.`0kC=b11gLd1hH^f2J)ph2eN*j3+r9l3GAHn4)+`q4DFir4_k#t5&:3!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~B6=1SAp"(RAp"(RAT[tQA9@kP@s%bO@W_YN@W_YN@<DPM@<;JL?uuAK?uuAK?ZZ8J???/I???/I?$$&H
>]]rG>]]rG>BBiF>BBiF>&sZD=`XQC=E=HB=E=HB=*"?A=*"?A<c\6@<HA-?<-&$><-&$>;fVj<;fVj<
;K;a;;K;a;;/lR9:iQI8:iQI8:N6@7:N6@7:2p769lU.59lU.59Q0t395jk28oOb18T+S/88eJ.88eJ.
7rA;,7W&2+7W&2+7W&2+7;W#)7;W#)6u;o(6u;o(6Yuf'6>QW%6#6N$6#6N$5\pE#5\pE#5AU<"5&:3!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~B6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1S
B6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1S
B6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1S
B6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1SB6=1S
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.251984 .735661 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[108.165 0 0 108.165 145.74 90.4045 ]ct
clp
/22 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~#mq"H$4@4M$k*RS%M''\%hB0]&.fBb&J5Tf&ebom'c%T&)B0\<+!DgP,:"Ta.4Qi"/h\n51Gq'L3'',`
4[)%o5<h@t5X7S#5sdn*6UO4/6psF377BX677Kd;7n6*@8P)NH91qrP9MA/T:/4PZ:JXb^:f("d;,L4h
;GpFl;c?Xp<E3(#<`W:'='&L+=]np3>$G38>?kE=?!U`B?=.&H?XR8L?t!JP@:E\U@q9+]AS#FbAnGXe
AnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXe
~>
<~1,CdG2`NfZ4?Pbk5XIh+77Tm?92&&T:Jand;cHat='&L,=^#!5>?kE<?!^iE?smDP@Uiq[AS#IdBPD0q
CMR^$CMR^$CMR^$CM[g'Ci!p(Ci!p)D/F-,D/F0.DJj?0Df9Q4Df9T6E,]c8E,]c8E,]c8E,]f:EH,u<
EH-#>EcQ2@EcQ2@EcQ2@EcQ2@EcQ5BF)uDDF)uDDF)uDDF)uDDF)uDEFEDVHFEDVHFEDVHFEDVHFEDVH
FEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVH
~>
<~7n,j35!1ha1bpa;.k)ej+W_R?()%5h$OI"?!WW3#zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /22 /Gradient get_res exec grestore
}if
np
192.805 91.5146 mo
189.635 90.679 186.215 90.2615 182.795 90.2615 cv
182.785 90.2615 182.775 90.2615 182.764 90.2615 cv
182.595 89.9316 182.421 89.5902 182.243 89.2351 cv
182.427 89.2327 182.611 89.2314 182.795 89.2314 cv
186.037 89.2314 189.278 89.6066 192.307 90.3575 cv
192.475 90.7369 192.642 91.123 192.805 91.5146 cv
0 0 0 0 cmyk
f
184.628 117.667 mo
181.185 117.667 li
181.185 117.667 181.371 117.584 181.683 117.407 cv
185.287 117.407 li
184.872 117.585 184.628 117.667 184.628 117.667 cv
185.837 117.154 mo
185.837 117.153 185.837 117.153 185.837 117.153 cv
185.837 117.153 185.837 117.153 185.837 117.154 cv
.506889 .473335 .0200198 0 cmyk
f
185.287 117.407 mo
181.683 117.407 li
181.877 117.298 182.12 117.152 182.397 116.968 cv
185.381 116.968 li
185.381 116.968 li
185.558 116.968 185.719 117.039 185.837 117.153 cv
185.837 117.153 185.837 117.153 185.837 117.154 cv
185.838 117.155 185.839 117.156 185.84 117.157 cv
185.633 117.255 185.447 117.338 185.287 117.407 cv
level3{
gsave
clp
[8.40469 0 0 8.40469 178.983 117.427 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.40469 0 0 8.40469 178.983 117.427 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
188.49 67.2972 mo
188.49 67.2972 186.13 61.0472 186.034 59.1301 cv
186.034 59.1301 184.407 48.3802 194.49 37.5471 cv
194.49 37.5471 185.573 57.4641 188.49 67.2972 cv
level3{
gsave
clp
[796.433 0 0 798.007 66.1882 -102.14 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[796.433 0 0 798.007 66.1882 -102.14 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 
/20 /21 /22 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (Modern_technology_data_04.eps)
%%CreationDate: 11/7/2018 3:51 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H#k3#OtX=pQW\_AfNZgng9sH3I7W+.QH01cg<ibnV<RBPelWfI7$TGm&UY_"UHe_K/$;!b":5E*-%]Oaa:)TIG^-aur.n-4
%)6Y*!D\fhNa/e+4)#7#_qCIN;BTtt0]^k(Ojblnuq7"<RoDAB@='h'[g#5r&_opPW#1q78G]C.&IeYV3h7QppY35QRj_D>0hg[@1
%s-VW&^7DrmDe>dES1g50haZYfm.qO.VYE3$1L2Qpe(+<4Cbn\d4SgaZ6PodC4^8.*i+r/dleCae_p/)o>X-"!q?)+p:Z%sdkfrGh
%Acm5e^Zsi"Q/DT(^Y<u(`Q0!D=';,JpgWm[%t=t]D"Q98ic$aRRic9m_2J;23$jRT2"9HmP3.37d0gIKK,;)]7r^TdoUe@a)*as;
%ne6*M*$[G_5Gb@*`u(Ei^A]dc[J2fA7_PDNc.95G@W`&;$hjth;ttB4c/6beQ5a`/aIEDe2h)_8NI?;3TA7mq#rKGqi^r*QI\o>+
%jYJ"Yb\>='pc97GUPOE_eZ0%,,N'4JD\U1[FW_LqN?>r35,FaEZ!4F"50VTmh![TnGi=_T%sQ4MAkn!q_.bWr(8Ub+KU9,pVCi#r
%U<<W<b4kZ9e)W!uX0O"`ncJ_?bVT8K1fkQPSc?9gs7XFqhr_87q-"'1=DqM!rWNFlGh<+iI/Ln"Ek_O6gVjBN`td\uZJVg&k"DR6
%\U:uY+YDE]:&j=6+(sp6o*rpRea`_Gp5;f1WUIQJq!cPpO88WY<LCPsrbd2^j6H)TUS3/PGX7"2(hHcgkU!"^$3i^(j&$l<M@07e
%Sq0TWWd_#XX&;0FilJld.J3RbnU>KT`Fj1^>bu_75d/.H69cVLmAop>`_<`R3gfsC4M.\-Y+F&Ck`<u#I]Jpu#B.b'9hh4'p$HPj
%N?<Y!q!e!#[_VkNZ;I3P1;(Hn*:BqtD._/f8Y5*!@)%cBIr'oKGjku+r1>805L8kL=fP98&<C7UhhE;')i":XF@qnkAP%KO,mh:Y
%&j.a;n?aI/:0"-9Np#I`SccHae)bk8Vr]q1L9L)2SlV/%>$9j]AVo</-(Zo`ij[BNP0i=>.@r5anjRrTI*6n-r1!U9?E1^MO`TO`
%:W%A7Iln1pV-;("@AE<VSqE$>s3u5B*IKTM$if6KC_ZlhWjoCFC2=U`VmbUnr#"1B^WLuIGCZT"e*oSn1S*N<C6[rE\Yltk\Z>3a
%?coM6#4V$Oh=9s_c)[O9Vsjda_`$M(XGR7G>L)-J^u5Y`%GRgNR_+;-`\uh+I"r/A3l(c9oCrpsa4%8Ppn%eTab;gCmf7i9d/r.:
%U*MU<I#HeSGT(dtl5OV(2h5e;DiK77lW1pCVl0ilK+1d:M@HB)\`N`H[LrQ"Bh[jF7d_),)#rVVfKcrO;7W,egjT)>9^.G)(""G@
%URPnZ@A6S^7#`em52RIV4o[9]*o4II(tCgaI6:7&5$-&FnFujBS*,XNPg*^a*Q1rOl+s03Aj9W)Q`JeTk*bKc1Col$eJp9-8=(91
%;D[3h[d%Wa)L,&X46^e7-0f[(/ZW7@MYU0-pZR/u@?nPhJq1Tk7t*i<^GeZ3^u]R[+.4?<dZiXY,<rJmhe/AVoh6Dq_-`TT5K72^
%DiXaGbH$Lb1.Qde-N)^?q;LRnn9H!@r6OEHn'sK`@N0ruN8gK9+tV,PT-ISN#JN%%Na_**[#RZulD8o^Ol<&Ga+06?C`K^>mRMhN
%b]Y$&o&a#Fh!U1M\%UCm<$H$[a@G'0r5a0[f!4h'QO!*45/IuVNh[tgj%FN2InC@upW.2irMjjRH#hY^a%S"eYe*Ab^3'kLD/\a+
%>!I*l<S+WC4hG(0hgFn?LV!-AbIH</h.QAJBXb?pqrlMj1:m/=Ni/WIk%sL5e5KrqK?2f.G^5K=K\['R4fWMjbokdd?>b8"*t<=R
%9isV<AjN*3Aj6LYEX0MJH85d#aD9H]-?0Stg$"u@Ktk><KBSaZ*=R#de*4G)K:qoCO);MR(`K0q:ZceH0+V@37*j7^>X>WQ?4;E6
%_3r_Fo@mmSet\fld3P^n7rm7*<89dX"3i7&8.o6-I)rq<K:YT%1:>fK#Mgo9BeY9$ChF:hI<7*(SIEB3H6XL'A.U@60\Pg7,kbAL
%V,u(R7#/(n)0FX10Sa6^W69NBLF-ZlY,b2-p+:I4r(%E:$Su`l)MIRlIH8p6d>L"A3J44)50T_B)0RPERL2)f4A-K;0o6_]&a0ZU
%?1__=9o_Ke7:53(SFMKcp1"`,L_09if9f"iZ&LC2o%[tkmmSH,G"IrNZ_:[)lspa`T0bGs&eUiVWs"0-$UtjEOheT)]u)[F@&YnU
%o.j&5GjiI([qcYJCr0Wt2-H[P<]c<shcn,@fECob2B$7hHPiT(N2kB'r@U"ULL'Q!0Qp$Q46HMpFqHdU4N60]GX3jlE&EP1'/ktC
%<F2C.ZC>.d?k`FB$VqdeN;L=ZKRKS:dNG#2C][f/MSs4jR[3\W'4'tA?7^HEQtkQ*0h_BLgjmEcer2-`Jk2f`0",L1+go!1(@i.G
%J7Z7H[=`<S[>CF__X/H5]#IG4qfK3%e1UkSBia:`<WKNtPO65>LdnB$Ener8Bu!-b,s98YpLb%cUe5isD`J_I`;YX+H^^8\1aT.-
%e%D>d&X$Cm\V%_8*9][Z,?Kgj*FW*C@"0Tm@'IeF%)P/NA!Kc6U1MpAESn_PU'g*mJis]?Yr@OoY7e2D'KL>,2e`Dg[%?J)J4^5e
%BI+@-,fG,3I+_UmH=N66F'8a?I0&(UBpkXf9[b\a@Z+WYK9R>)M'\ss\Tr:NW1[pH@=jo1*.`3Jk0PmDpCe&U1YulYB$P`cD05hK
%[k,QR[aQAYd7lF`$R!qj:p^\2,p#IN\P8fE\/6jA1pcc'&0oGDnG3#pr"eg1]8XL9I5aY5:*4(rN\gc"JG_&o=\&f5X)*<Ff_3,)
%C7OBcKT%.p:+V(.nT4\PPT6?gnQ5ISnTD(@CW;9Gco(6>T0Vf>(jTF"`\=W93OAus0UqF#p%D".1r2t&4*1f"P#P;b=sP<U&\PJt
%`\VY@pP`00`%nDf/&-eaV+I,-F;sdE^a:h7pU!!>YQOPlXT?@@7SjCL;U'q?LdMttbK78MX(lSG^h"<6!e>Ep$Z)+MfCDr-OiADB
%^5>LL#HgsgUmoi^%'[d#P59H_P#Wu&*K5Ifb(T8+O5T2")Z:FXciZGp*d>dgYam@^AJ]'<.g@atcj2u_&OdV?]DuRE*&Dr05^#tT
%oDl1*Ohh_UlG?kY#rSEV11hb5's=pPD.5`.;=ae*0'K(ej55G,C!m"W(7!l%%?ls%!cPK+0'm/ddLm6U^o9UFP#?3HqO!r:WF]7k
%6mA-Tp9Lro([TQoGK;n,*O]0'_O_md!C[5f(DaXHQmB52,Wmji59Ic]>Tl?5Wt05SlD0Y($BgD55S?J0_An/5-jI4frSRQA\X$q2
%/go)gU<+0o6*7V641(:[QlmMeRiY*`-4a@78A`0a@Bg=R5pB:\T#NCI(ATA%_&@ieW8T&.MB'I-'"Z(,%@^'/L`l@BFs/CZ`Kh==
%Nb)p6f$Q<'4>qY]jG=KR8_'5,JP"+Z-2M?BJu"2cBV:i2Eh4EL(lS%)QHO'>Tj!Ic6fCnCTf3,%/+\@lKCjBKU]G/2mb/:A]<R#i
%/[?]jfZHJHW78W.;ttO8+$u@\!@WL41IF4U"jZs*WrS_)k@HrG!pe?Q:IX42RECV=T\hQa\U%h$dk2'@fZ>VsB];nUK![_ir(sCe
%m*;h<KK6Il+XB\>jWJ)a<07hk9TW(QISg!XD.%RJ]/0GGe\83c[s0%*8(+G)`=WBNf'R@k%J=1m+bpem!:!+;(BIg%Mh@-<\17@]
%1Eu=qMF.00T(tKf4nT+OORT^jD;Q^6Q)0F%H]AhAlZZ0U/<MX[7H*j4OA:&uj&!&mX.m;GK+="e:aFRJ-LNo!4J>Wq:gi<Og'n]R
%ogiP.b^Yj2PkN0dUum#XL#o8t'UaT9U$RJi!>cXPOQV*,I+SKP2WqiH163B"bq>Y>&o<i5?a44UgO(QS%f,g,E!)92&m=6O+Tt9@
%i$6C05R1e:3uZkuY9-(n&>2<V4["jWU3UtiW`;V4nU0o/,Ft9aeT_1AQWR),Upbo[kl;1:lcnct:R_^pGoXecTEhm$TVlI2C_KO9
%iG%9Pge&0D4?.4s1EA0d6t.<1%jcCTO@"X/*!i)B?I;CJN;cdGhm\'*>Pt::GD1T2H!Pi9UJ.RuSW&!^&`ocmK>LO.:MbBG-YWeO
%J6NJGAX$qc3OEBa$P-VcG%,.rAg-BS"'U4U1KCD5Jo.XI/fs4:NfonMaJ_MK`aafD3s?!@SiH]p(_P71BLOc,eHI48N<<b/#4`9F
%D'=/r\@2hLoqUXYJK"9R?:IKMYQgm_m`ZU]Jq;*<O;:\TA5XPQ?ZPJ[Y_'64P,6/2/WNXdD<(^"0:>X&/sko]/o27+'^KL35p,V>
%kW20ZX`=9E_!t*kK*YLDL*/Xp<1a75KF&jR\Y0+b*jBc_Q3('9[#5I]YtXe[msD>JR-?HqlA9rqdc-4"5ct&1pBLgp@1VEE?$NbG
%9!a1UgL)RpTLBmR,mL^sc$\t"fj2Xe-'T`CTdTop>m^b";1a^o71%,4V$I*_Oe_Iaq$e&`rOJaKoMu3?BG5e6O./XL%<T<VIDUbm
%',6#W#/ga&TnIpsp4*Gn8i;M@U<q@VYmJAO6F,4a&h2JL2R^uO"5;C]XY9)ZGoIpq3$S!NS6`6"dR8aX!`fPZ'Nj%C<uFm:^*E59
%A64P$6>aRX13iH$5>Fc%\jWD5O*;cBM&Cg9,k3""-A/QgYVh<X45q+YAL]J\2dThAWYMJ_UmGP`b^#aQ_%IAaSpOR+;.V-`OT\&r
%@*qLOL;"E7':op1^`HnF+L%Fs(XT&o&'u3dCo+jbcZ/E]?u2>$rJoD$_CLNgCQ\gcKUrp:b%eID7qNPEPuRHQZLO\9=K/0d<A7_.
%`<0Si)9qgqaFW:XCsL54ObPY)gW1__8;A=9Ta8e\$U(0%,)`BA:i)k;_J,Pb%ng7gA0TuL)P0hlX$mr2:jJ_[ZK,1QJmJ"]);XX'
%,Fr#?C`Z34,r,no!RW-S?'*iXBi'%B'>5"d*J$M&77idPZP(3rP&,hH_uXO0V;_e82PS+V`@_j1G[$_m\rY2OMGu`7<Cg#aGW,q3
%0KFZ$`B?LB2(fe=$-b7X(V2<)O-V&I0P^T@C-[>"a"?>3;Tt^`UHc@uO[*kqqHPkXgg6WWE^8lH-4CeO%8DYP;iI7bUXfi/$[IPs
%BdO<?*h"^72N37jl#AtYSh!*;W:Xn9'.rRF:)`Lq_%j22$&uR-"Gt$XU_!g\?A:XN"jmG<QE4p:]0I*`e;T>l_Vgdc#W9SU*f)-e
%Ta>]_81/6)Z,[Lp<fj?Ua>-H<p0ecLV!/;Q-^O)*%$_X_4X24@RjP1F):jBKb=[m5e95@5'/Ejd!1&]d0k$J*ROW$pYR%pi7*I9@
%F;dZ^*4lgd;?[!5b9Cd%n5?n_[]t]AI"9o\I@\p'MA#JGd3ODDT[#7`^hTNt-u>#-m%G%$,@_UTUoGtDE1`!<_::o:6PN#oX!>?c
%fGRLbG3l&8Ds;kRDM_>u]Sp7j'A)QkJ8F@hlnb*7Q=H)GN*5G`,gj=;bT=81bS/aVSH=0QrQ=oWUqn*P1<u9kpLk"'c1`9BKR;c0
%Q2\L-WF/JohBO'39PIX@G\olQ[g<1e(MG$E*6pfd:Fb]8S1[FFZm5sN")L1W&$n5mg4749Pq?Oq:Td/&J\R0KGLc<@Vp_;:B,*6j
%WcBZ6KZ7Kndo&4N6O.)1G,eI3SX'Jg2>)_HKP]AVl6.pMEEC@tf-Mtb@HB2)W?<QRgf4q)Q=(eoVLc*>Y*(ePC(2.6M4J6n:W/$s
%je@*ikjgBMN^gTn4/EAjaN0_`kk3c'N53TWDpY50WVn)'QkXfcE`8M$SUZ?jA(E[?1QlN/(*QjlRlX3p7L+@<b&+0fIt0k@Ht>#=
%pjH7.d"C,JLJ6(siH7["6q<XW$F]74+M/r2l\L&_?R33>WVrG@Qh-ZK]>p@uJb[Vc+&!QQ`!'RA:2hd@)F`.n:>fNF9G"^sVqu=i
%+pb88k/WIo[E<S5=YWnEH+(U7OVKDg0G2*"+BdAO"'uQ&G<,r6JPgVGL<dt(B6K?rb>)."g/6phbd/UF`N0,UGreApOg6j]RBA(\
%W27UT!;#N;&.Zpf]>(f+\G%;7#0E#`65.<!nfCS%1ggH[9a@=]3l9lb9\=bq6dPT-BQh3Y\%LTZ;0`.?O0$-E8R((13KAG#'D=&e
%+QLk:cl0OK2<W_TF`pW3qP9Di/].9aAf\+AaCcB7RgPcMhqO2R\.(00(ECdX;uaEo8c<'eI=/#"(UaYU%:R)Zpj<U@lT!U[=0Ek?
%4N73VEhb!aX3!ZJIFmQcRI?3NS-3[dT#**Jb1PF9MU1a!$i@4;4^kfAgXsIg#0s%G_DbZ:KP+p6Su.GEkPN)k$Tp1O!&7?W&2W5<
%AJIfgm)pRk,/e!R]6eAU2Z63<1b#lT4NFu+^&62h(NiMcFmRlWL0a/b-?cX%hdRIQ9$a-jjf/hp-&b'P>r]lASrJ.UMoW.3YMOCZ
%c-bjn"&=:"pUU3IfS.q"FO5ZRO5BK5MnkW6c=,W@GIc=K4;tiaThRY'?-kPqicpuE9.A)d5aXJ?nRW]gZ/UhnWotaG*<,)Ec#NWZ
%#-Q"G?H\kJfYqs$:,#Oc62@@Nol)Ifl*MH%d:O'Wprr*Af2Lg-T'tm%$FEV55QuDn-d`14Ib%m#\rM7I]@[dEfS`J&3I_$PZ%Fln
%6T.HIgtu0RGa+$2:V,b[d*L#j[Rh@73H1%nh!9#tT<N[##lSQQO'ib5p0b4`_m51ClR%U4)YZU)IPc6,of`:Gm)!\=Mj#0kr@[j<
%4i4%f9Q"cf9."peY!1d0>.>^hDqFVr]iqSqbI?UCIJ8'%H+84C4&XH2Dn]Gl"cHU?''eS:n+aN]c)]q.I/2<=ol0ZumCUol(S;I%
%X1.]JhriU\eU$bhq9A.#\,QnUr\F?BV_AC*$5;m+0S3rso/$+8ZT*N^iVPUMmmm:EPfafV\M1np0mk&63GAhClef=C/aiVDj6!5^
%fm5jADrFlGX,_V2YNG:SlOTkET0b3hqn`/%4`bPHNt$rA&TCE1GR_tU)KB&HgL'-eeK+WQ=52mB?7fg!Zh9-gGiJ2l&%EH;2[s=d
%X:\(R&WZq+_2DtpoFUs3pgq+#q;rd4mWlO\^OoBer2R>7huCt8XKVKue2N<?7MS.A^1mg05A<#78JF<b"`V`<bN6Y?Aj$7=\siX_
%ht==ZJ!k5XIt#fVEu"TPoW-[-kL"N7^V.1-3^*6e?V'pHa&nmn6iIN'!rl/jTm6OVLUX>Gir4SpM:h1r\qA'tkp2?snanDS<Uc0]
%_8p'h52R5`'B9o.aD_lo2;g9pNKJT(HUq&@ok&3WSA5'`IP^FMl,q\"\Tkl\h>P!r*f\b^pHO^f>cj:skjQ<U@VV?c(4ATf-.TO#
%C'r*'`Ab&7\i$=8ZL=,t([nfa9Z=[Ff=0Yp10#@!V*ScsHD4U(R5*UIRUWth)u<[+U9?U/mE+@V"u68_^/M%NBLXpf]-b\#2o8W1
%@50`fTCT\R1<U,)Hmqs09j0)G:o\bB^l=$$jX2_O2J&>;-8u<7n2eL?Xlm@rD$CC22iG.,<[AaLGDk2pk`aU/Mp7d2;W$l%8BEm?
%'tgnA(2"ENS;+W.VW-4i%cTDi=kf,2B:lkb&S.[,XY!_+[@Z2*5Vi?@mNqO:Rpt;-.Ju)@?_""!D/h,!_9eus+)-?((umDMHQ)KI
%8MC3'%IW2j'ooq(3#^\eI.>OL0E.T10?2*nV@nkU.)FQ6iY>B?'pQ!@(IaHb]'cprMR\J8KH02VGki&r,d3kKA7Y6$7@le:neau`
%#J$IRfef1/'pLJ+9!U!@ZQtI&6s5>+"R.bFdP<E&4@QIBQm,u:A=?2T&edPY7=lJ"7L>#kil.+kM@6p6:8Ej]&InGD+-S9ThP1\j
%1^@r_>_/U',.KVL4>lm>?G;5IaG8b`$)^TH:b!k>FoqK*k>3o`(jHSo]u3/p&T8!qqB9Eq`I+jkJ0H=>.OZSXm\$'Wq+G\N=--78
%WC/cM&0JV#%h$nNq,8aXPR3Qe$GJ-8iPAD^/;5^e/t%d2/^ft=pa?<WdZ9q3ek4:eS-RR-5.j)@jbs/*.'G2EYnZl0UeIFTZ(Rkd
%'YdZMlP5\O044d4.b'/n(PMFf57Q-X[GoAZ?(a[b?+C'O,J#\D_i!l,%':p+pbaRQKM*TC(eR=eJ:lpBVbe^:b&IUV%3GbmQY0,-
%R=>f3,FEsC"$N$&'.>0N^bO)!SqAIe+IIih&9j(DqXT?/M)#kt.V6mcI`A`\D+5hJ_XfO7s$Yj?TL(+f;h:6C[UL\"cJi],133i2
%Z"QTEd9m`2_([a:c_2sXnsPOBC;cmF$>tG\AO8:=;oZ4C1l=-LjU:`RQY^kCPij(^E<8#o^bR)eob&qPOEdWV=$`R4DU4/,9Rrbn
%"HI.tON]&e]mSaKEQGCA3&Qd>_Fb-I&d,S_PWs'nX<@SpRDoOAE=Toj!XG;D0WMq0OKm6*a\W<iB&M>U@PApn;:=be`GI8Ilu7V*
%6jZC-0i:]gqpY\,!NdO,jW5/4b_TpiQ2r?'([@UMRY);MXH)O0P`eS2dp[FXE@dr^oaK#38k&'9Pd0D9TM_@T?j9+Q-/MsaniS*[
%kS@F6''^>%)C5!=]-j/t'_,o.KJKf38)Z!OA4#;*`(:<bPrd-eBcP:F`ppi>b@p`^+)op<eTk*X4OnE`YnQI^\/jciSEi1R'hmFa
%Oski$VRd)%'QsecQ`:.,r37u$Mj-m<$9hi(8*1%f63S38ks7W/aK$Vg]=;Shl\p[WVGrZKE,G[t2n`>/o$P0NfLph0%)c$V.a2fd
%.F]rbm.6+'=cK8VouK6B;PpHf4C*>?6l(%CJrZO),,`AeP-gJ'/l8>7IZj(N\DOTr]aAXulLWl^a;uO-oFhiAOA-G--qY+1VBCI5
%]:d(p,cW+4\n&0K'JSl5BGCh:;\XgS(rAd2Jl2Y$-)9"e+E=E7@DM#$M8As0I%_f#O[,4oGfC>S+?\(giqu^g'^0"eA.uV0&5NON
%07e^R-mS-[A4n_[Uu@jUCB?,EdLF?%^ngIS,.r^K'tWqpKOT\T/.2aoaT=PORS5G(P#rRAk_I+!e>uAP#0Xa81ja:HR!9+-H6,l3
%+t*!8QT6)-!ZC5k':=D'UV'3u7kXD(b?-F9V9FD-!G%S.0`0?^6']58TiIgjM&Rc"!];=4dTD(d`D@W2=:-&f_gmIa/c/Ib17_*H
%,*fqRMFe9e8;Z&1Qk^dg)1UY^m$b_K.q'LYSBR\;.1B+5!Z]Ea(=bM[a=7h@`[$@O=pU$W#ZDr"KVij*$"'Y;?_mGsLC-H9RaSL7
%'VBsk+'*elq$BXg_1fp1ITYAT[()AnO0Pq.Jej2FU(/W+W.\$e+2Ef!@$Qh"'Tm\UC,$&bPuK&6CdNGHJs$^t;YF-=MN*I93JBR2
%QMs`ZJ,t5S0bm0qN01]3k/:BQ;''O#cr:?:@O[ERReSYq7*D9,aMh((Sm'*EJ5rA[0YVoHQRue7H7P3rNBVVD?8Da+pbC9CZl1=_
%T*m=O@kGU73^0BS8aMOAE7.Wni^R#Oi^gf&Q&mYaL,ZrKRh8$.M%UDU$>F)G8-YFmT,J*0b%P627)#a;qP$)IN7&![b?-$YS/?Q%
%C1BYp:s`#[Z$KFj<O$e9k-E#LS,-XS(8u4nJ/bg9-e[d+Y&T$r#P0@mF!Qtf@b0n/`;'2?bq$9$Ad,9`m`[(McK8-^b`>T</I#b%
%T26%&L^HT2,WQpM*2(<e/Hd]o.fS#Y\HQa?/>uI_PnOU1G*UK*A%TC$TjK=`3H(/+Jj2t<hqQ5(64(J])Ee1X>$raoc3ani&Qf(,
%fG+bgoE=S]5UWZ1!bZ*J?kU<a,nq1/4_0B$:m"/NN<J-tnsdSM<F2VpBc[Y^m!Ke]7SVpF#fG]G!G\^8#uG,!F_I#@ZRA)q.Sumd
%*B2-Lq.@kb>L<q3IVQ6.e$u,a(0VG9$Q:[_ChQqL)"cY$U1=Ah7k0"`"lggj,:t-U;o$$L`\Ta[NCO=VpSL:'("'@]BT8HQ+X*:f
%4;']QgZ8JNWGqQ`;<=KdinBd>)odU[Q=m4;#G^-Rib!`[l^oID-#G)6UVK"!bWImo3-H0DV6l,bE#?qo6sus5)CT&m<Zh!2'1>R/
%=HK50clk$ciH%;BTYRYf21RA*.Qk&7JfT,G9FGAoM$QOJ3)W@a:bHDoi^l8=.toEd<6=&j&`H=lZIF^]iD79Pe@:Z.Q,]V2<Yh8@
%=?'2N#Z<t@&L0eE_Mf$ZMDU=e15GNU6]HRrNPLJH._m;']]+c*:A->;A)D@.h*o`$_0$5d%T$YpPsUJ$CfZm1CC/f@(`25Tob'@*
%IABocX9*cS_lCk.2:eUg,,PaalNG3=Tto9)FeJ<i'(-PB#09$/:ht\fO#:gW:hq#T<bO?6eLt9C99c\M'nT"Y$A0,D\Sd7%FsppU
%+rf%T(Li"Pp8:mV:<M]U+`!9;G,C'H9I\Y\d&p?24UE]3!EkKC&u8(()<GBT6JKkOCdD_:9$#kQP?"M)]8]V[R$as'3U!dqBX^oB
%!Wu[KTPH=g6i8=UT.:Go+WPc/;3L#Q*&6,`3qD2D1d(C!UGre^(d>P=A*C%6'T?L>"=s`BH2[<Q-Z>SYc1i@KK_?mPn^8BjKAs:@
%?QA06!&$T"bVQ=Q%H&J@368;ofZQ`]FHo6[DV`N8CVou=nUs#WV%d6$g[YVSLO5rG$SRKK49aH0dSGQG/C$FYQ3C><=H#rB*2"do
%UN'k8\!1g^TAZo<+51'Ps3&J*7@(]S('SQ+cNnc!W+1OM'G9B>@uG7R\cK8?nLW37>@tf3;;4b=?YRn^$#UFI*q2Q=6ue3?1c4l"
%#d3[=O!#e>X(7n3`%<h'V'95sBI.+&1/2A;aS*O\7na@p=\L/$AmW]iN2bU"eKSi[<uqOfBEkP0/QPao1.A@JT\>dt.<ZM#/]ck;
%\P:#D(5U(k9j]pV\eW$+fV#C+l&h@\fn=5[fgHZ[TY1MfTj4)0aZl^<eu"Gg@P0Sdo2$CM,;GOka]t7Y;ZW0B5Hr)-[A^FsTA&2=
%;=tt**hgW:#OO+bY6_i>68E1Rj;F2TTaLY%,XYOaAgSA:0oTn"SpTuA"R:Sdp;.*&5L@=c"qB(/&E:lpZJ($s:tM'W+q.C;caFNf
%A.X#Y:l$pc7cBu7W#h[&bNhOM%!ZrA"t(.MZk?_uZ,TFX_+QTS<_+ds'QaaL:BU!kjuTJ9`-K29:b>a+29:Vt=G%NKS3h(D@#j6'
%%:UgJaB$fR/?*."(6O_B,1Uj:O;Pp8/JQf7bIL=e9U-9OEm#?Tc>JO3ZrJu+/?48@=jtr$AP:9_:8T2f:d)+V!]qP%WNr&"h,INN
%filOA;R2FJD3V/sC_+e/#0OC#:qR3aZ#*7SDM]B1!3=;a;&)leJc2:N)3F"FM6gqCm](tKArM^8hiSs!$<jO$<0`@k,IWQV-A';o
%(@*a`X6&rM[d*(Vg(T>AO@nnmjGX%8XF6.#ecRA*&r*?\]N@gO/DlS3B1[8h\ZR:0&XB`HFhX")7'8$kaj/A@?*'kao\G(F,YoGH
%nH+jD&s;bmP4U5eofSE26BV"?'OT8$WGXfKP&7PMR<VeQX%g3k=-`KYdN2E8"2IULQcelpZMg_$Iq6tTKe*SVZCp#edgfF8YN5?X
%2)[YQ^F7[rWPub7O0eS6-_;!JGYR\oNqLUs:?+I7ffLAm^Bi2(GWq<E"OCV**liR:Z_%?G@!hm9s+9N%Yue0q[VN!A#]Es8G\q4b
%V-U>0irpSXF'Pg"D@qd'[)*Ufg8j^LKD<<CCTHmu+@UW;6B/t597;h6O1mlGck06A=.c4ubjjsKAQDUFP7Ls&PojAhLQB.CEm%[j
%jS:FbGj_*b=V(?LXMLaWr!@p&5+0jKgo$R$5>IO0"']4,>W"=UnRf.U)9&(Br#+gK@!aUp00h1%/NkhnHkUqu5`EY!0Qm.5onW/C
%>'iQbepUCY_Ml.>Qe2tEZMrmHRX@Ehf`<Y@&I>EDbiKi,Fc!i!0_5D:]1g0+E_It;PeoS.F.^%9AL0O+lsU4#elhVX_5NYO8sR1A
%U%Arj;G+VZk'dpb<U;6tU!!A6BG6u!;QK^nEQ]cs-0<>lOZPY'U6b]j.4L8Td)>BH]ZWi<X353O8PRBC_":5LZq/AU'Nu1hH&X(-
%[a1:$W/.S@b3g\:6n_o/'('K#\[rJ'X*Jb,+tKFi6Btl2?k"<\&6mE($<1A^B_Bc[P\qr'rWR&\M"2WhMIqDX><ZngEW6(tg@*5Q
%U0$?+]ZU(qZ?H&K2SE3u+'.F<CA_.upT!diAZmc\>7DiWDo2LR+DDPqOL97)=q*JBRC8cb\X.t0Jr('N2]S%"%q:,,1YaN2_2g^g
%"iM:r*4S7'0]s1`#Y,A4qS\g>1W>2FVl#k8QW$n9,l1XHX;TteIM%O5'Iq9=4@Xmg=?#m5WW^9E#"&*'Q6]<S[E/<abm+;njr(Ue
%+lFWX$KB.HD]`8?7W(#\"&BE>4JM]`K%TZHnCNRr0;e^RVO0kY9,_-Q'TZP\p1[MI&%VAN"!b9OiIK\naR+N5%`n$fg^_EmJD:XU
%m=<t%aR+N5%`n$fh"DQ%rq%*6jE<e+#NU%nD?o6G5].*jgnrI6>TZ-=\lG"X&\H;\V/_eB!kVH4*=oakU'"o7:uM[cMQJFdFWjnE
%aL6VhMQ1HMMFKih@\HT.lBDXWKYt`+Kl^<TY1gh@g_.Eg\atb>hFradr#XW`W`(%.e46>N7u]c+ii&mt>"c675dr>kmc*Rn0FDH.
%jKR'+B5?9/UH"1)>/K'KaBg&in-WZM&kXD>NI&t*C]tL+_0g->SdrX/o7JVNc6=K4ZH"0<AE8g00](7qP[`<K)WthYCd.M,T*=Hi
%3!Wb_f3m-^I^MU94LU")0r"0akuu!5FKLCbZ8EDf2UXRe$2HDKD5D7+Z'EOudR\uF&R/Ct\<tK07eS7#[&tm`X3"kI'>%/4O@eh#
%TsTg`730?X`)2@sa%9$N%OZD$TIH:(kfW-p3LMD<Y8:`2Z<;gUE4$O86!%2ek8XYiW)Y'2PaW>/2MDdKCp)i>7Y`JAm7KsPb&Q/c
%Am<I<<Z4o#aOCpu;)q'"kgh#WJtLPVS=8%V@B#aa<&+,:_Ga$bg0O'PWc#,k.5;m]I"_H[`?A7j86A]f;k%A[ZW<mg#*d7E0k?Sj
%<VfTg+:L+#nqAtrV36*TFD.c*M1[$F1ob*@9'@e?kk(IY*Z4Vn9CgCXctH)\;b7mO6jZ(TcOMDSVb6Oe*$#]?P&WF3%PQiKbf#=#
%H&`QF[<Q4p5]c6.U]aBGRD9Yu.7n/CM)d:6k>^dOM&8r)*@G?rS+a->*3h#RSs)RG/KdpC9VPJJR=N4f8>8\:\KsNgOeA0fe$j/2
%Y"9`PPJC:u`ghp#`0^[:D'2Dm6Hl^%8Lg88e(B@[W7At5bVFuOBQ-tnECO\B18>$d,pd+FBdYckBVg?'A0EN01"6qQa[aH8b'1[H
%/Q=3B!;\/V&/GPe'1lX5j.T:?&qERVA"F2-O4k7;8t`pk*N;C'm/[0FK)5p;\0#9T'A?65r@2(u0RfQDE^H_($LHs&I[(sPRG<bK
%br30oL,YcAg\Bp"h])`g,]#:A3,O\]dNmNqb>aA):o@]1BbKN!PDH1\WA<'Sb$lr,@KKG7bgjj44k="1<_HA'!"C/i2A.J@it!-/
%dfh[8Gf'PAF=K]uhuHUVK7I_[a#9<["mDo&*&&QW-7-^*Us)E8emLVB]eg.SLB5mdU%P,!5Hi'MIGg2N:d7^\e`U2tO?RVS+#p&,
%m.hLH#7fu#L\-/peMa36*7>'%kl[P*mG1V!@;6e1#7fu#L\--bqS:9G*uHA,+F,"PI:0ac+ap"<pIC!^A:b/(rWCG6ZZhA7Vj`JI
%Z6Nl5@Uh1I@*d[SXr//l=VK,AM5_H0Zj@-f@:HcF'b(Bt'ff6;RR3[G;D(mP@r.T2081.i:fnM3L':rXSa3`B[r#+03aWd!/)u5X
%p7f`Q.<KS(U!lb>HI'-pl'QTq:XUee%6Su^P4gc:O<H7.Na\&j$6u1(8k7DL+)Q0(o>NXm\U`dB*0>`2N7r,,j"85#gV?DSp:U)G
%^#ZFmU"/j[]k5Go"[![!h;6$#hT"0V?05!=d`&.ZL.pm%qR1;)CIK#$YsOp/>]ZSs((08?N"WS0d"&;Rk;3/XW$k_aR]%LCeNg>k
%#]%Y>^4B['SgXlq7'EJR3AIf`<]t5n>SX6l0Z+>CoKro_&46Ep0\[ac*(&kE&GdQ'rk(V^s7obmmPr3OS)fF_go?[\"p*h)%Hs>P
%Pn0KM.0dkqM=9W7Ju"F%Z)3:OGRkOtHb:l$pSQQSc!4Q#pK$0qd>jH?`89scs1?nJs.4$+GGR0Bm%$gdJXt8SO"rLuhRg8b"-5"!
%V#t80Kh)KB+VFT&OCaS@U#?6[UK?j(e[DDV4(;4Bj3&8"$1BmGn>lY%NZYp)-"3hr4@nLLT($U2n4eE-G)pkg6-gH,Yd,mPg@gAA
%qSer;heShR>&[<1Kj'G6?QV7MZ\[Rda%s(6;qCp-/ampkHcK4=hU@>.1&8kJ-r;qrR;*O0nW5+q=o$*.oMkh[j`^ZKE`)ef4lk@5
%$nSUXJ./IA2*V\Vq1<]OT-Db;Da#GQi0_1>61E9no2F)u`,hM,XT[d4JHEeSIe1AB3^)X@(>nbUcXaf`-6fWJGoN$H^gN/FMosZ/
%O5BT+(YB:peC7'i1U`DA/mnIbk"BVhH]X@t'"%G_PH<8e&s^=Ia(Up_9S!g*G#BXSW+pjWm8'AJoqr&.VTkmMdWR=rX5<X%DtC'>
%IHrCURP5>3\mP'3GQ$ic\po.?LHR0jM7/8!4^<C$Vd"T9D&`7<]^1'7"<k>/3.CReQi0=!ff(M@[Tos]F.db^3k+3l>=*OFoW<T9
%5bDnbp9&nKn`UE$&=Vp)Y<]J=ptPs'`"%H4")'T?<qj4M4a\d?Gu+(4oMc![g#5s5ObrP?SQ`g(/mu?\EFHtXrqA9X\-WUgK>S\o
%fA_AM^r(L"`'@%L#QCROBRAZ=id]kX^i.NFFq=Ktgg+&=2=L%M%s70GM7tl^55KT`O)#g3;6's$jD7!K-\D['g!r%os*N?"haEKI
%Hf0\1b,%5ic-.l/Cu#1XcjJ2]HJg`pl^uK*s%r^hQ3Vldl%-Uos*g:>Ibf4YE'3WL0soa=?P6OnoP4<me(/&eD>q\WGUJ:58p:E7
%n-QLnW!@dh]D`[2n9=]c]/-V5s1Yd$n-u44pV2c*s8*fXpmGXK2l:tlRO>3Ypo,ME<?CqTs*j7/"YFI1ph?c6Ia.oL8\K=%W]X6T
%>he1f^XN5^Yo`[9p:j*.r.b6"h#lR-^NVj1)ufRgCR"k4m=@L00F$865O.mVB=sqo".sQ<jaeLXfY_S;r2A'H^X=1u^?'p<$m,21
%?/rd"jj2*P^PDjf$%(Sh=QqVfi:$6OO8Jb1>9<Q._ZR[0s*iu&hs^-ODp+K22tH(sp:tllIY72m$KZJPjX:Z;<-pUWNks0G``c4;
%RT$HXl`e8/^ZOcG%_J%)KB;:#h#kE*Gi5J9k(0.1`TWqcA61If_,EJcCGe9*"5cU-rkj!=93'%(B?1Us%2;dooOh!L$js"9WH+lq
%X'fu?.Bl"ah?h=\!@K%"M!0V.BBHPZH7(A<PEg&Y5X!$W$0C7VFC%-BcNp+<#ae+a?Mc&4r-ZXC62;k[h?g_n%qCm(O!#/HN+`Jb
%3HQ/#c9N/Mag4\P(,9rh!"_b^HH2bZmEmM7gm3hq!"7Ocg[W`^_-)G)-!Dg-]C).oG'doW6/(>%S8+<DWMpDNPpL)mc3%g'+$IRh
%m@R8M`j#Cp>&k35Hn?=6$csp_qH1,c+7.38kh!-OP/g'U#N:?A&5Fc@$fbr`C)>1"On=BU0$'r8Cq470:SLDC-e*%%A1fCS%n!s;
%MD'%F1D[jE>k8S;>dP1UNNp!/An4A(-(?&2V2S^`@T:edS._)CObHmTh@#a`R5f;ci`VM-O%1H:7]NEF"k"nM?Gj6]s2>:p"GFoI
%j'!lM72c3d87!h"mW-/C-Fb9e6srbbnE#mnqha/K@RB>KfT.:&"^:;8^tp=?9b#Cd(lPDP$80@+^f!meZ`)*B,)]&E$GlfMW<mj=
%j<A,0aQ(2dPIYNa03BJF8dNPJ5HuC80K,Rjb*1?R`h=WC!@I@Rl:*.]$"[(:DB+3sSs@6`ZeI5UQ'JE"cHR$imVH`0;bQI!1eL.g
%Z>Gt@]Y1iS1F?b,ng,,WJJ9SL?_DgV9]j(%.3l`^gEn4*njtaF8\,j7=ns>^19\>u/3at'5q>_JGIshBB:$j/5`.9IiB#0C6jMG6
%:cga_H!JO"T';=rB;6CPk\2Xap&*h;Q9QkG/[^2c,g6^b^"ND)j;h<QDNtt)-<\E4fUJdkhg?FGa8$2Ifec3aa=2,2,V:=M$e4CQ
%T4GQlfege('#g4)@q+iq_g+(=(<riPn-QLHO1UrV),qmR(r)Y=[S:Jsc#g7'H<+X9=BLRVkn2**)m0rYIQb]W-RXu.Z%]?K$l?WG
%",)u4:SP7.V&_(W=R!\$SR9i)g97XS_@5:e.CPNmf$]"q=V=*(",jp`BYoV-;X0B[h`%ALO*,9#,$euO\M3p14@']DZHtMQeVu,"
%UBlq]2(#`Z=FoeW:gVI!o\J8mZu(%cht"_27rN%9Dp&WjI3"R3!urf;Y1aO^nL6$`m)2LjmTXDI/+!mPBQ5Pf*`EY+3^uTgTo!s@
%<cKn*(9A,TFcEaV7H,!-M,t@[8f]oj=@,ia,A:O,72$#s_pUbfB*[Ha9%J[nTIPf#.0V.M,fV/Yhl'4XD,T'Z0%$&N_Q%E'9-IRF
%&^uOSmE2)Zb5eS4JRNs%+td*Bf(F2I*W3;t[`0J#lFH\*%2i*jYJq_ql4Z=hL5`*!`mi&[G,"t>6cRV!A*UmF)uR*uN2]1aeFW07
%qH.P2W;X,YN2]1ae0/>eKk3penuFnHZ;JJ'p&olIH;-cH<6Mu?d.q=I_N@'?/:XcFkMVGCE6('7r/0b_C)h7(%QOcLS:g!qF)XZJ
%4sVR!P*?JKb0Mk8\Ops9Y:.l!U3MsiPZ*?H[Sp'SBbdU_]dK(Jo^V`TrV.jmV=">O=&htB5EEo4)rYAe',/ed-',g!4M:7`."C5n
%W*54YG6`oR\c[nR$LAV/Acbj(;:HS,N'Not@"uVn"rFmd[p\RbM&dE+L?6PmOlASraREltEm>2r@Qm[1K,%RAZFsstl>BcXY(c4?
%R$4!i7UtD'U6[9P&Tehh5Sbi_9PKWu[RcP#LE&u>;_<olei'"Y]N-egW:1?3mqOWB;R@@lBJSlDlG+8l-IQ[p82[FAEf"6uFM&#D
%EM<W''Fk``\M&$[Q\g`S+dYp$8&sV\RHc&>Tm"AMI\f$5YrGsbi`I(%rB&Om4=3?:Z23)g"gfr`4e@fSXPVEl5i;u8ES;h/;f(?!
%l"!N>au-NRY1V)om-*\!o*/)OJ9c(bCnOGIEm9V4Ke\]:NIV?`6"B*]<018c,H4!ZRUWuME,<AB<qo'M`;s`.$!qBND7;7:2EitB
%%'F:fK,R`3k)LmaFS^#U1EP3IBnF!s:SGhbI]XOsr*$U&>Vd#F!@u[7T[G>860K-l<%j;lOeC+JG#)mrOttSa/U_K8PcDd)FDJuZ
%9&<I%8OJJ+/TAW;+)sY=9Fsd.(^Z"a<Z$Z.6;e=6W<\9!/:]E3$#q0R&8E2C;_.l)5KG?R>8:;hQ:rd((6bSb-SSbo32-G3\CjL4
%'SDXKeT#Z_c*M+L$,Xn6ZU,5a?C6RoJ]^e_-A[JZ%=XeoAFE11:_Ld@R#t>Ql]j,iKoti%./8KEcX<k'iIr^cSYT=Qk/EA9qLhJ$
%-PQ^h%N`XtTmstr(bljP#%PSZN#7KcK/$gh7L[:m_&+mD,6hYr@#W`PN4:9G_K0SSp)!cn%Bj/Noq)NMX'1O]Z,R%*E#^C062=[2
%X,L7U9D/Oq+IaQ(D!YU9Bt-/?)AsAW`,maf=Lf2&bE(6@C8CF3R%b-7$&"$OjV<F)NM<^*g*P2E,"4q*0<d^\)JZbQ1YJ=d>8^tk
%qD]8<g<M-'TcKFG[0/Srb]@u314!^'lDl8dbf-H)EZZ-uJ85fjfb)2V_8>B35]A]aaH:2g-f:hXVO5`!>S9AgKZ`3tP5$%e>=u_1
%3$'FWTgfUZF4lsq6>-]rfVB-_;h@F';*7Q$Le:EuaqR5JKWGb]aU(UKa;KET@hSANn!JWUO-iL*8.!SEWQ$l9(*Lk_7?BH;]En%B
%XD:\5G')X8'"8R:<M7@7J6shl<=/tiRHR^2!`jsjMM"eNM]32-`0@bD8#W.kX.!E^Fsmnn1.gP.O,TW5E?+brc2b&BA.tO**Im2_
%o[r^oA;q@Vd3HT@]f[VMI.sBRZAL]LH.NZV+slV)/Rbt^A(DQ3>I9W,#]JBEYf915Xjf+*78p\B6oUq`c\U>Z=^lPk?F_*;54#3c
%Yro%ch3unED%o'GQH:SN)PSc2-7tSA5eh.5WuhD_3in6hfi#2n^.OB2ooc(9!h7naZliRf@l9N-;K&`#Cp2u5C_\N7(0ID))I9YZ
%c'kb3g,`e^X#8BW61hFk>3j`jHg$cAX</,/[\^Jk)LL6!$]MK=2gKMM*eY*lI[%MR/2]:XA614'QJ>)mf2]C5VQ/,sXA,7)Dt@/M
%3;D,E6jEk^0P&E_nDbqT:okebZ66G_Z@MZ-q@4J''.Q#2`YBQI6l:Z$IEP5@CraMq]pG1eLAdG5gPHqp.`SB+6]Fsr'$-ueZ*Hg*
%rG<%gW=mrh,Z_=X[\tWZ>#&*Tg^[E=cVae%/$tb]5l%.>e3IIN,#2m=.SSD$N0e?\"^.l=b?BU)4XHcH#:@S4F!L#C`7YIur^^nH
%9eJI5/>`]\Q*gH:#d'6>$:/n^E%e0Tet0>BPO1pigCmGm-_Y?\RC2bQ=A8ET.kRj.ANc_QmBq5;AT^PNDisT@P-BA>5PWt47<uVG
%jK-X-Y@roWCrXJaaPHDeLW$W/?U:,M(qka5',C`;.8M1Kr:JC%JKc!]dLlSW+HK]S+eDdJF1oWRB*SIrNlq#)$o:1t,CbqopPUHe
%SWn!+#_ACL^PJ=[7&S'jaW:PQ+:U'fjD@`Eb[ZONOhX.W><;>PJ9Y#?C.Y%R,s>^1qK$$t>!-U<Xt;r@0")Q+i179DXZK7g.UT+:
%CgJgHbc8C2JRVbmd,!I/fuqn0RK3^L?r*2l^Sd%O>A<VlH20f#^#Ifr)<!WAj@P2!.76lKEpV;)15Y^g.;OAfOl[sS4j?cWP(&aL
%rqP3#WHN&1`36#soiZ6$A$eo]Y80G1admcpH*p?=?L@+.i]1<sb2aL+^K1fEk`pCdW:c[o:aY7W&rRPu:0o?_GbLqh?7;_,k'T#,
%XDY#)fCj?Hah(ef`%e-O-a`"S;d%J`=MkBSL(KSZ9O^$%6p2N"Wc#ioa[ob&CrBIncZLrtMs.$k2^Q1LP#jW/9Yu@j7XL:E\<<r.
%"l[Y;q$W[`>mL/(j2P!HgfTda3oDQINZ60OY8`C?'gIr;$&+$(G<7gFe&g+nNQZ502TL'kEq)EMlI8ZaAd2f<Wp0/<5DR^@a]^;F
%5%FB#Xt%XZeIDa@?>o9mX:]e0$i7A'.<_"HDJP$-g>-u4L'pf)o^1/'e'c^+.IQE,Wd!3';<eK0E!Xp^3hKknmss0Fds7s1+f3Jb
%BOM'B+'Rc'96'f.mo#iA:dSfm$@A*Hf+i#TE-WWd,++X1^=l=MC>R+g<=Vi*qfigdrq_@@Z4f^n/f;n&Oi*?&<\e(kV>Rb39MjN^
%*ChV68b(uC_k1d9_q8rcoGgB=YmsZ0iF%LYd'_EO:s0E[Pc3B)CtDQU&2.>%-ruWKCn`-p37"(?OP48WOL1-"2^>*C]P+kH']d3]
%B7GR-h$omF%>7@?I1=E'#%gX5[A1Q@\CdJ9)0&D222X0+@sp!?.#jDqRP1A/Ls&[gX;kbT6uk9g("\1H.t2^HZt/"J6*#FH1Je)*
%&4Y[U?5PoS)p#"9mjLaO&5&mi/.GR%Y#p2p+3/meAhh(1=/R_^cl$hNQ2?CY@/SNC,b,(9.V1.5m6=K73&:&X96#81>mpKD"]pP!
%`u%%TNlSb&\bOifCH*MKF_IR7$AZi76SQgtbVKCn%)G%n0[C<SF0&c@mC5b3X_u0Z/7_0s*b`Fkg/%c2Pc"lok_%<"a)>^;^u8.E
%"(4<QnJT?B%A.<"-u()B@t]U4]*1L+GE6G/q6]l^0j^Ib5U%8AB(P/%GXi"u@=0;GiDFqE<hp*f\^]f`JAM^Cb^dPM,LB!^!'!H!
%QTPT/W)Y]_#tMoHU<#PMQ@K_$h#=ZbL>'F#\$g65EJJ:]`5$0iVl*e!UCN:IO9qtkqb;ilER=^6g0mBDFB^&+W^F4ILl%"rPp!Y"
%\.>D=)+CL02QJXRgD45:CgeRCf1a0JJg1rqNGIh6erVQ!ptX&i2/t2%eteIsX)PPMTr_J4hRFmf@Ym"5.-!n!)6@i(N,$Y+lJZWB
%U:(h7%)14Xa4PCUbjB8Ke9sG^,VNGCS>'Ec&BJ'<OnWK92+Q`J<Ub6FoMek59Lb6d3,p0D=CXbENj"9bZO0,b#b6QLJUH`e+kL>8
%bHZ)&[/s06OX3=/FD^iJ0kX<E=51@()V.FF"dilb17=Hd&UQ0)(ND1G,T<I'c->erH1p'&/("DprebD[>naeUl(I^nP.s\o=_JOa
%f1k-cKhpC8(UddO;i<4dpXqFG"u=T<8Dg_IlO*3b8r*M2:*mX;C4F?!@chDe9:d1e\>r*T'<$3QZr:C%;2(Fh/L,!0<:<@[BI<08
%6"oXMB^J!^\'d=uI37Ird1]g_da`Q=M^4`cm7s"j/u`T8\jGkib(-DDVf'@5\*CZlHm^&a";0?rJXI#C.jA)sZoCn):3Mm/dW5K\
%9^&#fC1fm!,aBaRnB`UH[78a\^0Y$\qj18+P4pCe2u%tCl^u.C(MAY3W6ol<7\--lARF6`jbpjoV;QGW;+ohc]l;0oW$QD*92'(4
%OFZ=hP&Cp.<UpT;;$@Se+4I,hLkQ$"O]mgHJ-D`2!QKda*msg+HXtFq<KNQn4$c.Y..<f?(6PuS&<i\`bOL7^m(aBEXKX$&3?-E$
%>#s^ODX9J=V<(s^U/PQ5S:RgMFF<AlE?@(.W<n8KKq5KJ\Xh"AjU97"j!bX9%AN.j:A9@J>:c</QBGCS>W\n`P\P#>l"Z(7F<@`I
%V`,o5h+hfXC:5ACBnVUBhTX1R_TJC.qdPa\9XIHYWib&JQCi^+Y]D4[&:HWjSFSSSibWNeCGqS<)pMR@c"[ak<D'<J3`!r4Q!Te7
%!0%lKH#i:g\Q7#2>39(R4kIuQ.uFM7<5!4^)bb18`%%`dS@gVW;!qU.1oCZ5ACc+fF:E-dfGXnNb<tB3PiR.+_,*S;!^4I.lD(n+
%/Qh&^O1P7&$p$R'H]HK:-Q_&a#5=Y(4_J`[);K9;pRK&_k8<VI\,b#!@Tm#5P'YcB'j-'^O]1]^gjRtK0;qBPpPZ29T6fAN/n^dY
%3VaZ3fr*E9#KhUu6F8<sYWGpKSR')Rj%<s[h%^XdDfP!g_+Pp--&t'JmEi2iSS-:<Z9<fcT&@oC#Z2P2GQoOe_27>7fnt>k%cYCd
%eg1!R!:pYu(:Z%p[7$u1k;J^]oE<<%]oVRUUaK5$3#*GGrC@Fb;Zub&iCO.N1#O,Ur\<=Q"9(%5+%(;$&=t_3-Oo$+"0sX()[!BS
%X8`Dq]i(nG5SB*6,TJclTG\D.@Xhjlk1!kgRDhK#bN%GkVA"1.5amXhQ%gkp"gXMmfP*X&.u'09-L/cDh[s_g(,n/DB)0L'_L!d#
%7Oi^-cnQ!DCuR&77DOL+-R39O0J0]e2c2d3eu"7S?C8t!NFm1QoiC9d]gUNm*<nP.\IqLjfq@,VV(A".=GfEo0A9p7id'N!VT*k$
%(qnVRJH*P+IG+WLTgc,WAITH^.4naI/Q2uCrD_u#e5P/NO<!g8EjX$8UaKP=Y!j32H4R*=r3p2$M*s#pVFN,h%4dM]8SGBSI97O&
%4X@s"%(-&DW3V-&3LWOr;5Mj`P(,;$Du2e!>[La[V]s2UQkdCD>`-rkQ>Lqg;1:=kpeO;nM7&EYMP(VRe:8nJ%uNKBctgIqPT6Q1
%M*f9P:!TiRYk7?ac7W.DpF949mCfPW9gkO`J'\"8&,ts-B@K1>Pem@H$;Rs\)[W2A\]9VI79t^:&WQobHO=`q33e*YUc/2q.&kX!
%rd_9\9'=%!NFc,=24-<kaiF;-];!Hsl4K_,s6tUf7OK0S<([ZP.]$g#EC;)g#OEIoGO:;.CSANZG[r14]e`M7l1ubb&]bcTCg0k0
%Zm_.HNb+&5+=^+((YeYr%^geom89D\dY3AnKg3eagr?H8-Fr0tI;"aQW:@0.eA?;JELG=pB>50qET`4r>"Xe:)P"bPd;!R;cJ25P
%UXJ`WOI--A!BK*MA5t^U8:?pOEcs=kGtr_>^+ipXigpCm:CgXhR4&r6WA+s(R)RT\e;gf,MD-&:a^>f;'U:5X0LOsM@($>=0iT,M
%V;)mRa=,Yo_2Wqb*>dM8B&g[7*YR*6$:ScJNn`>e2mZ+o"[,N2ZR@";p0;;HAYR)7lM?.JV0)(]C@0R*G=U4)qlW8FS\)&id^Ja^
%kAI@8XSp(X_K2OhjDQL.6"^KE(#:;%\Y/JhJ//g"VIcpK!b)uo+QNH2[aGLnN[33"TI<'m/#@FHiR!%3mY/)jSY9[I'T=kaW0&/.
%D3/;sa(rQ_-VgN['o_U9j%%C4[tt(m"`<[_?pcA3D9&OW=\m6MJM)\Mbp1[@oY?eHe1U,[Bbe%X*t--';jrn6[L6s/*Qp'\>p\f>
%a?U.k(/HN.$RH`uB`hENYS(dX<b1hq8`SaG.SX:sBa%NO[%bAON\\#N#-W,Zl<)eJ$Q[Q.2@!=7=QNm2CPE*Z!];J)XR\?;Xi%QS
%<`s5d@^iK3"sp+PYrFhq'maq\grU7q3J<RFE^n`MUYPcE:nYhD.JBO.0r2PZB>(7'5V&n"NA>B'oh@fUm6e@[^?Cp]@Q,_.Ur4(1
%!7"d6OEICh=$N]e226l8:ud+A3^Sh^OQhe2'lG%,r)7C\Yj^VFhAY$^EZ7V[.KfFVJ?ONOa0P0Gnh%6BHl#"6af4h$74kE,9L>PG
%<Q!+_0t)H;-+AW:mA8-+DZgN]RpR'U6bO#Cp+m+jOmoINi%)+5Nn'G7PZ!:GKhJi2U%1<Fd9"'U?CHb9;McKiMT91E-JC9djI8hr
%N^PuCA!)Rl@HL"B(Fi3C'rU&N1(g.t9)MRZ:4m)FIG"%!N'E^GK8fG7*_,)oFb-A-C/er;]i;SrLn)Bp/_`*`FoaUY?^4j<\7[h'
%^>]t61+ruKdiB;!3)p8)!p+I\H+4SM_WaqajldBk6s$ohaW3\bhS=="G^<X$e$HAL5T@,K`U"1V'r=1m</YpX:e6)O*\7b9`KMf5
%RaE8&%VmnOqM%P#+];g+e/0AeL.I:I;IbO4(a:hl8<"cjis[+h9WWsfXeD[GF518*["bmOqr7>(mI$HZh\ReP_m8;mQMmBpHmSM0
%\b:n:ChV(ARe^L+n*QIihbr8C7q0(6QVIsGm2FdBf3k=R0TIDol%q=%#1oV9nNlFNkmQUqXSUq%]GQm@h>En,I3$H:gZ8(11%8GG
%@C!V`bR_X'=?FPam_YokZ#,KNYVE+_'='4eA5SB(pag`jDRjSi@#!*"Z.S\cf4n)4PfgNt,?5O."Sh@`D"\GiYW;C)KR/INLM`$:
%r1d_tlHrMsnP]%9.Go/'#$Hqe@)`8FjYa>kKgoAnM2c@X`l?!K/`SNY(9NoV`1#eE(!Bm>lM6Lb3b2kfWdL"B^S!_\1+V1.gp6q+
%lJk9QFd;o2I6m+6]):tn=tE3@A%-U&P]jZ<COmDkpIuTn/dI:jX#VU2pC?nT1pc]:<]=U+WLkYUm?Y*tE`Os/i$c)X]*a]`3^a[P
%Wp7u/E++2!H<L*O0K<'h6#E;.4?N''Lft>mYt#;_"Sfi2V$`+46_(05,PW7]F)fq^<HU.Z2Y.E:gd6EVNo:#L*K]"V\K-dd!P'54
%gB"i*OP9fH4Tjb'XJ*'\Q.@_WoZiN(,s0Dtgbofn[gi3BV39SfrIKVT\)aB*&VXgtRYdT#L4/*/l2"UArH\uI0=Ylng[YF5b!RH+
%[,ir=3:L7BKJ^,Kf!<.Y[<h!;C1d'Oc/mD!Rnn5f\)8MRFZuCThCdUT15laiJD)d/&tkm3Rs!hl->!+,Y0Z+.$nAYJfcFA<8"1/?
%5;;Yj&'2eAHjn*:J:%dHa+/OGaN&gY%*6J>I%2VUiS+W-",R:86m8muJZPR(qgtGnNn7KOjX>"Y-m#kW!eQ7k+\2(One:>2RZ;=>
%Ieehc[uK]he%WC]%6p=SEYBrS,,5PZ.Q9*Zf_Ebg;QBE/8ibRYrp62@R#qg"9cQ/q7L,)bm2:)_SAb<$Z^Y:,2b)k87<+n@"9Xdd
%:'Uk%9dB1VXrn+#<C)oS'F]b'DCJ$6V.O)s1qZH/0XL6-$+5/n3(S.!*$hQI7OC#j(oL0QO\rZ;(+jErJTC^bUd9rC:`:'@TY[UX
%<;I]/deKad4Xq=FVN^2%"kb#?K2S]DFpaM$0*q%)i*-?;O]gk#IMB`99-)MDOeaFtP;X^4pms"O#D`LdR-.A/:g[&/ECiJlV=5-4
%nk%4&8.5hrg^aPfLaY/@V'IMTO\7,k'i=0\8KlM14aZsgierE(8cl%"UaUb,QBJJ<PMe@MOs[)_<e@\Kb$1gN&Y\ET$EfPS86q<<
%!PB?c^e0I8>R9sg+d.QGL]g?b02]eC#^%#C6<T2'3OONW&6&df#pm#>eqL\5e6!L$?&U*HQ']i9o>#&eWprJ`9rqgRkD:^S=iaPb
%$5oU;XH[:B9[n<kJl^94)#PnKB11`6N!5.A.rGXs^h:%eiDHRb6qEj^Q-LW54!5\/'P.O"*M@!Wc8j$0TkC6pX9e?k&2eE#_EC,/
%r:i9Pis9CNNsZOL9rKu?1D%M[OF1=7W=8Q\8YIocK[_LnH$Vf:W@1tCiBhk3LmSN9Y]B]&.A\/P9`8#m7&g/QNVJt6es76!;u\BH
%+)/rJ23CS,-+ti%4')?b-M+dZU=;'SY:E>h2H?f))9Y1/qQ@li\RVNolVOEuhb/s*"jE>lka"3sWE<82-@JMO5(c!$quih\WrMJq
%FD%25CH/puCJM]N@dsm+o;a;@<PG4hKI"][_?tZ;nipP^'98K?PNn\7pqLdb9%8>)'eB6t'POUHk$.dE_er(H:p3`)-pd((?`UNR
%oY,E_-Y'%]CJhi_IT)f(_isO'momPTpjGo`**O]h"YAS<M!/RL.+*9[9YJLH4VWZ'r`.BrS*q(1#TRV6Yd!%NG-=YOS/D\+KG"\)
%3$ep#iYKq1_H]^6e#Z9klBMf&g@N4tMIncFa1/0l"Ga@>@$j>C3d8)E"'<WDTbJhG#W:!ZP-4sj9\R#3ZKbC'VI@n'[R`Bbc1=?O
%-8stT0hF9ZKAd7XR>,8j>X4R.#&cX9fd.uE,nk!HPJ"/b&s?4'@)\:;`<N:)5`2ciH.l/KZ@[ZB&\+BH5VWoK$Ebad?N5#i&6OqD
%HKO]W3U!O2`L4L9!i*#C-'aaB/>-IkX"W_=aur*hHn&BPec)ht0;If:_.3U1[\oI8_s9S%Z4c?Sa`DNYEK1d>:mo?lJHJqB0d)1:
%06I'TYa0lEV:mdUGHIU<\So4VRX3bg+;8Zo_%b_a'NX(7%0JM>5_9&'dSO=Z*=hE;"J'DYCZ'Z-VBk7Q=AT6*Ztu>*eUd\M/YV+2
%@"'pQBC&?d'_'NNp:Ghkcp')N7>(K:Q*Sa&JtR^bg-J@<E!!0R2h9(4FP-XIbuX9BpeiEYe#Di<[!-\64-RD(:.XOpO-=rX<pD3#
%Nm%uKF0b0j/8MD&W&6S7brB64N\M&53[kc?P&caQ\L&NP85qM])+2g(8c3+gMk'8sb9b=@TPK;/=f*Ec20&c_PR5IY>1Q4hBu9+.
%!_JY@P*8Cr2<EMuBCEfJn&(h#lte/YP!]<<\VVKcKTMlpObP3\<nbUBThGs71J&Wn$B:TENcsDO2cZVIX-f:%9u'jj<,3*q2U``4
%Cfj`C;sX[Y<8=-WS!koI$/K]2[7"Dc!j"jER83N'Btak(;#@p/Sbp+-mIcW&<2Ac7b`^]oP.'iNd[lIu-$&EG8Es*@Ru4S@LfC=4
%4BbE&;EG>eTf\&')TbM*`1sj.Nh(>MDc!1!B!e.;1j#Zok`X?u2q*RX>RImeKsi93F]*Yq9^a>&9Nl,<::H@L%+:kV-h1f>L-$ed
%;mQRmVbs#i#b`RooNO^:4ST=^;pUNaPQB#ejE'c_)01-FX<&]iZ'XSX!9d-Oa+Ib1]]TXO#L*Q,#dsqs.U[A"J^IM#PX*Vu6__+V
%U+2pH=bB+j@>#&FL'!2%,AdHK`r_!Y8cgPDK:r@"etGp*.+*c8$gej5#iruJ./T%/GD'U[D]s\)#sD3"/f573#;h)t2>emg>@>6B
%&7Sc'8K@6+eB1SK!2#kV/PqI>FkBUn6?UqE+j[)%nk:Wb!up_D#f]d6q4YULWW@9d5b2YHUHUE:n:\JH=96n_Ui1gGOTdg)_8hM!
%"Tpl-^Qmf6;Dk,fWFQff+\1Y!5u6]-"$&.'=9fh2:PTB;V?APa)IcZ9(`B8L6'2@j1a%MN[%TP`17"Y&Bo!@9S2fE[k:5,r#pG>2
%mq^i*JL!s/d=tTR5O3t;"mF_G2=:GY[5B"65+b)(T2a-5K7&dblpWU.A+=8C07d+"\g_"ts20(pW/T[mZ_aJN=OKHU/u1E<5D+j0
%4BS:)jb0_WB#Dm82H[-e'AC33@)[`556F/#+24u[P76_*%mC0\71POu$Buo'*n3_W*qWtNOB2PS\1f:<J%d7_(Q]N2$/nl9j15W2
%)d?9$DU@#WYapfJYd[?.6YW.Y;o6/1ZtG3"6+!0+K*%fN+Bm"d/'+`g+>f]6Zj(n9'mJi&G<qm\^^<88T=f@:D!D"5W>KYJ`t+4n
%dXW.2%55AE\=)Z8-\*(#Aq:,QAW@9BE-:g=YlM+V*0Ubq<IKD'f!lZCJ#P>fCto)S#s\\P:>)+;n'#BeB+)ZXD_!fEBVoR?_G7kR
%*M.&Ng3%75\BB*@J5e#!1dMI:1CBpUC8))5):'E-:XsY?\%I=bIcWIIjlYAr5,\(T40I27#,Q"j#R(I?H.'ZS5\_)T,s`&9Dn9g7
%b,A!V+Nj%p@&l`P+B5DQA,ML3SoE;.f_.IEq@@4>(2u'e1l`[\f;%un35)*t#<D\.]<Q!kO"WErXUYK!4$Xnt!E#./><T/W5V<c8
%NdPB:i#;HC&['SJ=];hIA\/EFWI[5M7FqV;\E\0#\>KX57SRH>2pc&JVA6Z]G<dg$"2`MsVaaI*Y,\QXXFi.]42A5?/^E3+gYeA]
%5RS#0eEGFj^';g0'4MQ("\*_E^sW3aG!dd'?ECTk<8(`F/l8CYk=0k1P+HVbc1g_tDGO]Ado/ibDl*.jZ^m]]G"e$[/92?n-%:A3
%WWHAs`&._L`'dj/N*?X&b1g/+8:U:N:'4q*irEks.)h?W,*"Ze1I\Vb)R&igmb5:K(uoM7BpV*HM.GF`9Y4(W^NFk#;SZCmnSN1H
%8_F_>;idOo",Sq@)=r[<Cq0qjp)F@mfu7D.J5(t5f#,L^jiBY^!FuUX)ecl8#1B.q>Uf/,hGtfk_h;c(Y*kDsX+oi>)-INE+'k^d
%$F3%Mq@kV?b-(<f:CdG[R[T6AL?8^F6h<>U.SM8>Sq;[i'%@=\a)B]$KaM]qiCsAG8?.<!KK@f&:-,IA-Rl9`pA1*'j(q9rbU7VC
%Uui4:ZQ40ZHb-/XW9_E=9V!Uh;MUEsQDbJr:*_jedhCLXi%``+LtVuf.n&2p%m(':KY`<WSZ6':48;5l<`Z64';fCIlKP[uc:63=
%7Ze=Gp*TL(*jXThN<aa9D,u.:mHU=!`nP@!O+095N@8G>eB_i'*3CJ`[O2)X.Y19pK</T.B2C)]*-J]1%]kY[)(;WMLT$`E&8Kt^
%5Tg-7@<87=)/J-*3Nn]7Qa&"C^m\/)V:nfo\hl<gVE>TjCtmmYI>d8XJJoJs5X2AQ>=]j/S2cL4WgEEBYW&Pg<A-;%[L,\JlYo8c
%Y>p./Uk!1Z>'gqSZ(!I:;ngA<_VbV#*LTY#0424F5\!,1.uL'KGDgL2`bSe@$]lUPU!@LS'fV$,D&MQ8^7"a02\%4NfIhT]n*;N$
%j-/f5CD5VMl2o?bppH\59a0,eaAi>FUklGaf=HET8^pFBn(0_j&>g\4[LI%q4mq$OmV:Z":h7H_WWCI,>;E[(a6[W`/AQ)VVTebB
%b[t?sCNJVVPUCu&"in5$D(/%hM<fk-[Tdo/o.<E,\V>kkLTJmd<N9B%\M84s&b'P-1>Q90`Z8^Y>P>2(*GMp>,htIh)/=P6W<N92
%fRElp#XeSOi#fl83S9t?<&`1]^o0/I8e<JK3AM`Bp8oIk9Yn.lR*<B"?Wc%t(YU.)3iRu<hQ"*C7`@#fZu/l[r6fB8'oVn?hQGLI
%=A7jf=:a(9Bl.+V2_Ub;9=V:FX-@)9SZ^=.3SPu]Zmr%Tlpk;2;58fE:pLI-JurV-!auG4A[9LCpS<Q_T>%MBPSW;>dF;XQdW0>7
%.E1ACbW_Va;e(qc1G,/`,*>4j,`hfUr$*0WB_.:PI^J&]cjlU;3%E&kh)QjQ_%3=a+0(/HNupEl?kttMC.Th'+$$YumQNHE+]Y7f
%La&.U%"%?`;NR)18M^EV+-gKb6lK]=9X0TZ-S(aDin>E9GJ[*'$96LS^<3"FP$$J<)[ifS,6LdpNI.IEOq`!SMO#kp_Q6?LFF7ej
%EmZ>79dR3g\(hfpA6UL&D:AWsk=?S7P`$#!M"2j!?pnTZKeAE4dX5e@"D#P+PoQ]pGgoV;bAqP_O-7K8DE0%ubnT&lBa\X5*V1nH
%oQ,2T?Z56'gC)MEgLIYGOEMnLS5OiqRmjcd01p(XUqR5TXTpk3%W%*62pbD*h4;E]?l$WdE+@+#(kP#1>df/;:4S4Mb$gY>I7GDH
%UOu#BKUKV4!H!@-(o#4rJqRK.%`:9uC%`9,lqu\n`*C/!7_'8?(lm!s!d\[%E:)>)S6(\nQGea+'oD^"Kp"+:P<=\eA4S6s1LdAd
%VNHt408.9>_a2t!!2Hio7QSS`-aqN]j>Bn&bfZNG#V4gAL6t$=((ErN,@rDO&V9o"@U_nP9lCUXaE*;ga-?=c$?oGNK57.q)m-Qs
%)EY&6*9s7c]N'>m'-QQa6rSnt.8:)+'&#"Snp,;ihV=[*]"Qteh60^KnJ^/r;jQU2$)VJKcCD7g^/5/W4XZQ<\EF-/WdIpr[X;2E
%T3Gr59PP`=mJG-C[Jf6Ps-*/)6EccJTpSRtVX*DSHao.E-fJo);A)peqOd3$$JCg`P&g#jb`GS;8B2s_R2`H"*E)Gq_W#2@k*d9P
%G*^3G(-pJAeRXOo\K].g.Z"Wj.t_'&ZUT6M,F.gZ25/Zf'm`RY<V"p!^8'D\9%dcl6^9E,fk+5BXP0OOQj0oZ-r''>0*<N.b-RK+
%9*+#4&XqG4OO=M4D#QHrGF3upju4;"Sm%1cd/lUt^/"82ArG`AK)(RVB]W;WOm2L>IX2/Rcl`)*<L,W?`1L4sGVe8__Y]CWN-mK\
%QilECEL!jHKQe0oJWF+V=()LoM@$OA4'@Gd_ea7G-e?efS)MV9X4p_A`U.8Wqu5]8n*Y.:a1'C_n),RKolkr_CAG=i"MS`Baa.^;
%Wf@gVSo<$Y"uV(XU]t@7:+$:Rd[heO-=>Z[OdBlhWc=FJ9D5!2Q=Q%%^QLEr>fL^p_oV9q"_s$JSY[%E`S%=C@"12YK"*r-,aZ;4
%:pZ$MT.49(,;,V8P#>0p5Y(nU8jeJL4[o=JJjutVKT($T4<@WSZqI]i,6JBH'Z`j6."TEXmL*Qg\LfDp\n!B=D(/&O`25eZl?1TS
%Zt2S-/GlOtmX!<EAJi"OI4_G#,W_6mm^6X3onSROiCY+Z_eY`(m`F52:(>U:*(&bH4\.cXRNL7IWY+Y9Ua^SM@:)s-7R)TeMjUQE
%]c0:MZ'anjQ31RkcCI(oRN6bf5-_ZXB:j&(QggR7nX$HZrmc+qgruJH5M*)/?bj:'I/D04X.),_XqoWY`ThWTraWuM?]I>KrPS1A
%^AMfUfrQ!.+#``f^Pr.!-Pl%@XFAIfc\po0H@AM""Ja;X^>5/0n_`Ji]/b<8l0@Ycc`]:fe\gb`Zt$cFr@aql?c+PP^3?dUFgc[Z
%9AWNUro81,\aMNRG4pL5KmRjcrp,\M=a^21VpP$a!a5:GR,U=2)u'a3i&CZ'eh1id1_NSF<nk8_FuSEA*c:]4[%#E2R!'-l5@,"R
%YOuSIch#-QT/So:U/!i<k5;Ztg&0X#20.P\qq^eAZ,g<s8)-:Uq#5RqqfUbN,MFLeCOA&OlaOKq[@Z8?/GkO03q6kl"B;\_c$;C_
%T24)1s7J(\^$`cMCZce?EOW"#S&OO$CSFr@]Vk@M>V(6LTl]o^$1VF1*B`684MGQC]6*.1\SH]L?1/Pkk!/9KQZ^@'qu29E_rA+_
%2`eefSolU\HG+W,?dD$@^\`:rh5<]T)K`XcFP`\@Lt1=/4km'h4dohT4n<tL=!-j2pPVb\l1.Ml6)r)q)u.(7^DhS]BQg;TfgUO*
%2e[AeB(ss?HlSS\%jj#EG/r2#H=1iI@X!-Uh7N=gVS_o9e`)$Sm7rN&%BA6Wg't(<=fZ_N2i>;_lJ)o`edUm"A't=sUp('%Uk5n0
%MQ=e$iu$VXn7A-\LG><`q!_k=g+Ak_b(Y\BF)W)\3QgmXq;$)B#=4s;gak@A?i,Wtk1&Fn#<26uMq`-hl,`I?o@^!ekd)sFk8m>W
%gqfEF+]H/R*Aq:"\@LcE:X/=T[[UU`F`Ych\m=.cR9/"l%j)jYZT`0;F7R_5BB4O[GU#G-s5"$Q?c$S<IL0A?G.3fEp/uFcM8sAo
%rS;MAB)o,JbNj**UE3,bV]H9\kV9L%U)-iP."KW*<`<VRhe%B1B[1pQ^R;3N!]GGgZ'r%kIopirYcd?$lmK.lO0$4BDAOC@Z*k=q
%p<u4`dS2V!FYUf2l%LbCV]T"90:$fHcRqKUJ%P'3"O7UdmFRjqCF.;\?[O_X\A)CpDTCS83c,qB2c+\gcsKQM48!=fS;?'")K`*S
%^@*/Tps]uQg%bW9VoAmdi'b?PRJ=N:ESgEi4b)^2VpbkMLoP*K2M?M4&>&STF;`]$2FM1&6(\"C\0(0&q6b4N?>P)i0]2Mb=O))L
%m(j&ng-tQP%2!rIm66a'Qt-![I/SMSSU!m:0&OWU6QU'bK+7Y'2WPo&DM&C$#pt96H*AG&2WV]/9IhMpOTY'qSu_,/fT"9n4R3$Q
%%X-mKDEQR2]/\MP2]h>*-X[/um)DP_r"ia"mX\d%/De'e\=]+g>?F%+qp8I*MPH#H4ZM67qAndQY<d9p,N6/1+0/[sba6N'Dn?st
%`&L^UiNqk#Z57Uh^Yid?;.#@8GMJ^p:Rq0MqMHQIqgoT[hCTWWZ2l+1.>4c=LVEhV/083)'8FV2*r5C*H9T+B&luR=QS@M:moNlq
%\l^QIRkNCbRkIk/fkmX(Dns['r+s0pH7[AEIWdch;UWH$0OM]/T'2Sbma9V=X@Jals&sepk`n2"T6Xt7VHONBnP-dr9n.T:)^.Z1
%)j/k"P3i-?79)TF\R7ti6GSBR]D4<T]Ba*f4ue]E5`[oO/`-YdD-h6F"g3=W-bnPiR^?,ubp<J]1&rs0n1jts*s_9Z0FIt9K#/)u
%1&rs0n1jts"7S&G0-<@HE]imUEr:;[#!dJd$I;j"8=(*X],)f6nd*FXAZU-"aQT"]l+@[1oLUfWl3T!;,^VNDKGApT@7XL?8rdS_
%^FEPnme2R`<j>nG?Hj7VGl+^)T('U;lAO\ac"U9"O/-BYquYQDmga-nZ,^P!icJ=+SG!fO+bS7*_<G'4qN9l#MA&QiP]0eNb]OUI
%n7<;R&gY\@'Erm&S4Bh06qY)PY=I:bNm\B/q%p7SCqiH0qL5[=AaK`WX#\(HYY*5$hkV'TK=25'06SmD`tUDW54(cL/o]9PNOh.0
%,1WS#I>!<D,>&=[&sTVHp[3LE_:c&aht6PV3#gGfNOp1mp&2>mS2T,J[p6%Qf]2mf\'*It040b7UXe2eHEm;+$h(*^I.KkCW%:.$
%=EN0DZ2SS%;:"s+b;>Y3iLT']H478H"*6e9qE";go]#ep/m:<Gs*8doqQ7C]hKJF<"%,huPD_X)mH7eaP%P_`5,@g4iAGgMl$'?h
%l-radj8st1_B+WN\HPVH@=OU+&t_oG>3ZaKm0rR2H-/2b+rOX!^7?=/lE&J%m#b*-@na?f#Y!o"'FchF_/Ek?+R`KELC!GO_*=(o
%1k=DC*L\.'r%s#dL'[A!#a-,NaA7"c]_Enc@<"E3`Gp\V5E3X%L`epA`Gp\V+4eH\*M\[=D*1;kq/K0*r?pPY#BmjQnl$Kqk@'82
%1EOkg(M?;OQaIu]+5>Z>_h[]a2mZk<j`@n,5$"G-Hs".3=O(j^Ck6Ra<otp9LIpq$m!_-(ci;T!1qlbq?L@Z#[I&/1HF)7/GF9)7
%E$IL6a2P>#0fiqhX)[UZ1RJ`smoG?18/bjEZXp`E@kK&hkLjQjEe!.ABmZ[@ff`q[Ze<;]N:GtqY-6dKq^l,hkK)^Kbb2NgH$R\l
%92IUo\(_gEg2,cSPC-Vm+T)'KEQ=S:B:gF/ZV*iPnQ?A/r8b1p4<M^fPidAn-cNtEF7u5GP)73fcPbA-p5hF5IKj)JK,pBnOQ'*k
%\NFJCk"Z%\I6s%@;4QL(l;!p$fZiXm9mCQ^kj/K<93Qn.f)G2W^7Ht.cNNC#UJWuforu\WAoF%-^\>\hS[4A7g2n!p"`[6YDQeOL
%9/^gUNkEb)B'2Nn?_&R4q#`E7-Rp&WeN&:^*"3/QEBUqIJ(J<<L(gBY]`Sa>*qe/]:-3a+o-/_rVRke[dKB-h2EKpi<\0SiL@\Mn
%*F(.fa2RV;mU4[0kr^n#nl+3u.?_B,E9!`8iqoQ"^Ul]!rbdA+n%hKUR1SZD`5_I)OUR8a+.K%oa\Jp1BD]C)j1G!L6_?f=:-0M0
%8UJhGWXi+4Nn90]r,+O\j2!ji\QN_a^\4(,k1&FB&NB<*Mq_QP/>3=2ZVAujEbV.mXJYYnX6a7n^]#62A,"Wdk9$aiES!6_3sYHt
%ZC>>6f'Vb2cd]P?Ie`E:SFqGBS<K#aXQAGb53n=tom4'ZrcZg^F14n-<hj9Mhe%B1+?PZu2m[X&fpC#I*cq@clK$U#DVYJleWf?1
%Do(IZ@$'(/i^9npnpE^H\HckT>(Xb#;Y@!k$.!<K3?KK`!1iPT'ET!Ogi+:+.0GKBpf!O_]]j_Vj-K'UT9+`=)`p5.mnJkQO\8b@
%s+CBZ@nsPI>qq*ppWR]]#>/t"F08"L%!-<RF5:mIVc)gM>Y@1;UrBU1HX-sS5,'LWUC5YZS&I`:r*Q">/7J>%P0;]5[U;100&V5k
%>2T:k>-?`VYaZ)ln)0]h))tua/f6S*_"e2[G:oBr3*mT/do:(']U1]gR_E4L97;plDu05AmD0!fP7Jo-52"bN540jiF@k`KLd%e0
%NgQ6QO8:]mkBXfOU\'D@h43@<2naAVPOm(!=;]I^SV,SADhH>V$b/1n./?NW3n:,;Vk/"q6M@T?H.joiY+K]s.<h-@07%L?ID>TQ
%h[\7chQ^b^;Rc#,&=.jY^^St#pE7%U46n\"3'\XAa6l.f=-$,Pf+I\%^L&cl*M/(6[A#lLED.81eS6i*>!4i65&DH+H'.%Enk)$F
%N,q[AFP[<ML(-/F2@LOF55R=0_hO\JZ5Mi%RFR'53BuB>nJmhPI?<=/9M9JB,;SW(q2BMPp]Ct>UA";,H<,fuF'LPJKQRd-)FkT4
%#?QnK>i,cfNPSWT=TnM.?a*1(c^nc"]CSl-:2OO5&\'lo5oFdP6!$-Z?1#F1*KT:=&V"j#hAs9JEU(@fi=LCbfp_LB53WZY3Zo>2
%f6%9cj!7(PliI`X5&D,JNK_n<cY^r<LrOsYSD)$mLrOsY%#DnP+rZ]S&G'c6r&P;sb)ms>E@=NlSSRUPrgDr1F^.8%%I^TaNaC!+
%309.AMU'mlMm[h4^V-;U<:@sKG/cSdSZt)bp)gN-a&hYEQ`g7R1A%fS6:44'B$`q1IWt?Jc`jamT^N?dhW+:B*^[`:n!uo]#(>t4
%Re(O_HTbVV#CZ'nqHf4K)UuIL;tll-,NM/L)\g"Pi>WKF6/fFlKeMSAqP`K60oEnt);edhpAA6GVC/P-I<Gqrb86I,h]K3fh%s-U
%664?fYFS>V>(5n1G)hdLk^rHq5"'SPN"4/[M=.qGdD3b^9ihGg3ejF-"Ym2E\A5nmrZ")a&n4BaJ7lR_Tf&Igr'!H]WTT`.B>!n0
%Y@0E`M:'4Li9Y92Du3(ak;(`(54\/M$2iF,JL<Oac=PrpF)trS^n1G;HX\"@1TWc.Fo(gaMi\/"p)pEB=ZQ@9k2\+*5P-WaPs<T4
%Ds,<qoB#n]+5YGYjB1e"HC+a-DdW+!,Hj#Uir3gU]:OM>hep0!h4<Yjj,I"U2.$.)bM?Z#0DgQGlGSlu+t(^fHb`Hj_q%&rTXl2i
%+6OeEpDB<>Of1q.JbIi8UN>/eXj?.%kEtb>(QFtJ$gRgmSIGtme!Nec0VHI&Had=0ki9-BV]BP(HOT"JeRon+*Noq<3=2Uq>;Eh$
%=_nkgp/tJAWQ/aR%q]Z;:&Xj2e;2rJF3d&hq/m"k[Y:t^&j\_I=O"?]h=`#,lg'<:%pQ[WS,ooj5$#"UMqe'/7fpEjg%,!o<M+Y<
%eu?])Ph1QKhTk$Q&h2nS@l7i+r,)-tO61u.YaMV?MACU%Z't<&4eMbTa'<r"=>'J2`@m:R=j1b"+*pZW^HU6i>X1X,cRpE2kliIj
%f9bQTd\eh_!ahJ&-VCRN3;&-epOJ7Lc5#I;Z<U7],\2N\b)%8(I:h'@/3RY6Mpau"4;2(d?:8r4^*jd@%pWJ)01qkV%)+-B0?Tol
%g0CF,MZ4:`U@_n=-dU?K?^+KSW!?[oPMpGHlAO)K`_N+Z?'6j5T>mDEX?WMGjrAeaHB%#-Zg3ugH/9KQp%%Sj7cO>$DOf$<4R68m
%o+!B&X!-U%$Y)s"::^APkM!T7**9L2(uVscrcuN.'T^\6q7<%1SU'q[4k%[bN:(D=Y/aT/Qd4f@FMYcV#"CO*3ad'%'OUaoS&t&W
%ApErNN$#b/DKYg`C=tj@T7&&YO3u/'roW=#n*]DON5'_II";7S;hf#I<B$tfo?hg]E<#OngY(u\4g<H)f/IZ0]=o9T\)hG:>eK5+
%+K,4K=tMsort!^G[s\/M?Ue+;6dQ,5G+PCA*VY=@kdj.Z%P91s2"EejSlc'&ZlK)=F8i=EDdIA]=O-AD2Z3I>lF0uDLK!3]ic]H+
%npTSh(kY*fk4R`Oh/][EnODEr5@k8?nrFZ;ilc!7p]KFPJ+2a<iV=ELC\7#XTE"#4DI12H5ObZP\:L)Uc/8egqTO9?G!D**UkcN)
%rua7bV[)O]Vr#cbInK\3V_h.<5G^pW0-YcG:O&GG(Qes+@sGjF:&aH5[uE=gQ/l*+V'C5I7SsfWM_If:(ga"H*ejBS+/V>_TD3sZ
%-TSkrUO;]p@^"A[h5r%K#/[i?GkYHf2-\?bRlNFqeQZia$:>[*e=,1=WAUX[T>?H@o:n:1Hc>C^I.#B1i80Hd2cH?0Wb8(DHBq%f
%?T]Z`07*HReTG*"J,3+/WRG9$;]JqISc,q3i7`gJCJTUIS6u&ur#6%O4T?(ds8Frb9]egJZ9/HhI]oCXYtFHlmO!iY]FR5&]PR6)
%%t=t]D"Q98ic$aRRic:k427H36iAO<qUO5WV&lo?(tpp,qop@_7$F^^U.96,=@_W!f7/0m]38ZDs+e;%eirKt"_h/J\pcoBJnh`F
%EVnhAkNW/>Z1un4fAHa(QtuN/>:tMk[:JoB<HFg?l&q]'H*^KTrT)5$s4?Z:RpTgoq_*.cU2Vl:Yu=ZLGB<5e4o;C.]:_;RFrO<;
%>j0Vfo1bjM:V%eJoY6tc@s`o)_Kj>Toe5p-=u>&l3q\S&naqjoWapMJVVbK/AoE%kD<#L*);V%urr,UMMdQ@f"[)N9L`G/prG]MS
%I5h9$pT,Y:`Vg2k?!KaJdIa?d5@`Q_hAm^2BA_$H:$)7r^RY@QT)g=S?S8K7LQ-d!HV&>@GsORhr.k)a\Y\7HEB:[j5>HlMJ*)Nk
%#7\knSIO?<VoQ8d+q4p3,eHZi:r7FaX5Dc:F=Yr1=XVS5/5AHAh`YqlG130)1&GZ*^NmVH`iIXuG.h0u5hu-Hrbh?+HI3t,"l2lD
%U6C]jLh3l+L,Mmk%FG5X]T]jd&+e'4#%Xk=ge@_.S,#9e"?>X7F4T%:Of,)CGWDDR+>*TKW]]qGpVkb[kkg.[h8<js_sDh.?SDCI
%m_PY?k4bq<KD$"6rf*J,^7F0]]^(_Vs7oS1ph]AX@^Ch9]oGVRKu\@EF]'\Z4>E_bs(-==n[7hH1o:Dmho"8`\qCAI^R_PuYL`=B
%q.=0:k'eX%d<=J-ZeP3bZhO(=X4?%DSXPIZ4qo?Dh062pRl^#J^KXj3cC`@IMu3?`+(k8^aCgXjde.@c[RZ!7]X_6OR;jgm*Yf3T
%Q0r>9X>l";e$=?X>ArB$B'Yr62*/F3K$ddYgA2S`$P]:nI^oUkIg+m3I_F0hhc]FFot3$>RO?5a8K<M*GA[=mXV$;YVcjP`H'>,Z
%^cH>=T&&8\c.3_A%ddBRN:'DqmehLFi>k(m!:lb!k&@AB_Od3/kG,ZB*RO'LK!J9WPKTqfaE[[LI.ZIspW[AlZe3LY/s_ET'']<>
%6to82<Y9I7]DZkqs4SY07CQVU=)V`p+6IbXbBriM/s#c.jURbO\6o9G]!K.f>HB^S$X\<Gq>G3=hOoI$gr#Ahs7c=2/PSr0Y933#
%TXFNhs8V6cFPZ]+cI[7G/?:+.qDM[)fCsL\CWn1#'b&q<A87=c2tK5r;WF:2,AXB7Iis7:T+<aEkKu6[?g#Uu)tlbi1p_bDK=SZb
%pRCj@(VQ&_)YdAVmTM1-Qf@>q_fD`fkO3A.cu\\n$T5?B^B#PBlLp\)n9VhH\(Lt7$/.:EIpLmZfBknZ551Psok]I9dlH/Hj$t(Z
%r9781(mDU2,9>U7`+m]dG-`#O#L=shW0hYqju%*UNnIRk1dn]ShcqfNG;(ld-2ARYqg7N?<G-'DZ#e$U=QjD4;?5hbk/3-emC3)=
%SXP?b7@-K)L+]uBX`*>\/OM>jr4CM!rB=9rp)CN&6Fb4j<SNB>*+8@&p#m>7HoMeNm=mX;p,,u*q[-VYO<*:k]Lpd/F+5bY_()ec
%O3prjIV\refXL\<mE5)"BQ6[T/pjUVM"0m1B(>B,qVdmQ5W?8K6u]+?='R$"!m/qGESmKi4QlT&6.dGNB9Yr]V3'mOSKu@1`p<Nb
%IqRa\G7l9qrOm0)f+.!6l?Amrqp@)/qj6Q;D*RB1%/t3McZl"iBDnu?Dt*2oCN&;%n`K\W%J[**WjpL?7SipZ^K5?WhC^].B#kTi
%$J2W$56('LLL74@,(!S.H[!FYTb94Dci5\'s)R!Vhf$%G\,(mW3D:u5`qT0@Dd<#5h:9)Vs)%GHM:\e4(o%PDDDhl948F<n>%(Go
%T6='.Z!1k(DeZ#T`-.Z\]";;93of@2q\cpAc.pDS[%DUs;UKD2'WpeHrU>5n@cpS2rRLkmZ^^c:?=.sCB?`BFpt`e_Da/7+,9rds
%lSLR/H?V`Ba_`E]cJQriP2IolI@qY7:1/&#gBGmg/X=#]h*D"S]iXqLG-oVZ!5#8A=l-:<XUGa+0sfII][t^9Y4dL1J9o_UYpj3"
%/$a)d8)6h"ZH_dFP#dQOE*E/&f:Ch6%cKjpcJC:g:/[\3CAP5k=53?N]aJmm^j+VfHqTOVDjFH`o67Nrjb=P8\WX#Jlc%?74Gu@=
%3VVqG7q6i!s"<_WG1OfZ9QOere_dLj]PS>n-cti"=]sfmrGVDdCV-Sl=W>'C1&;nYiJkcLT8AiRM8G+$_@%4ma8gh[^X'lEp6/jN
%>]VJK6rj9@qrXubGH4,FR[fe.OV(s1@`PWO]ljZg*mZJ3WpSWBPkEWlPVD^XBD+(9?T`AEW^f780CH13d9jlE&"T0P.Mm^$ddR9)
%B8>fD+ZNE9Uh5K;cpK21PK@%C:t$/2rs?#@%)[kFiGl%#V5[YuCQ$,tm7Y"4?bLRF\oC4MZl@^5mfaI*.9"Xs#t[/:,!9aQo3hI5
%?6A2E5BXL0([#lZh>Z"!c<n/%m=9>eUHW5OgItDerp5e[I(\?>>?:gNVQlJ;gR-[o#'4Hp=?@N"?raD1dAp1`Ie$;jG^f2$HJ)>!
%XZl0&qgXXe#9)WX)<F.??=CW\</,8PBP*O-rTa^i`K+3[CZk(<?hpm4I-8?BQ_!gLr,Q%bG'DNOr:4RZ[s*RCRA6DJnVF*j_7@)]
%XQ8RIJ1bBSrX4IX.h<3Mq<J8dk5W0orR[)T9gCA#)7Z.H?!*.&(gnR4C]$O#_,O(d=,bI4rp<79QEL$]jn\W,f)AP419B+"%]c5:
%)<fNG[;Q;"rNY7@*:((nD[.L[rmT'!IdF0YV+L2G@^[<t*4;VdB,$_:hu1maUDSAtjo5"89f)Xf6[Rh^gs_Z=1K2UXhbPijYC3U/
%nZ-_,Siq>nlMT/Hm*?A(]W3]Z`uR#0,,efMJ9UptBJ.m0p@eO'AO@qF)CInQNAM(<?#;P_:o-1cEiK@a*X5o1^iOr..#aYa_-+1P
%UX"UH,JTQ45cW5chM7lf!Nspbp94JKR0d/GmJF)i3r$AdV4N9cT9%p)r`B'XESmdIp$H..T@0UVXioQ!pNNVCQl61#F]E6:!#$Gl
%s.@Q,LR[202@m"KPJ+@WcTYC4Hr:KA+Zs](n+ZSV<WE!j@.OJlGmK]S]ri9g++JaeijZ=F%im0PISE]$KT.EUN1'gr4Z.2<oKM`c
%g:oQ7=/CAXZJ4.?H^kc)`3KgUFZ+Ne3d\BHN0@ZLbBN*p@3i3Tl-oh7;]cQD3VQA(iQHQHV#LWXgYVh?F7?k`fT3K&Fd;F^I@`c3
%_8s'#DOD*<prhCJ@@,3:UB_1"URg;nOj6*m\8s$Q`B)]^8gQOcDa$/Po&@&if?[c/H[b4^47cj+IeMNuh2bW$m%(YuI,`SbZO>N'
%1C'i;e([OcjH\Dr[r1!q2m9<q3dZAMgQ2$7]O^Koe&M9K?$EOJC%9*;maUUR2_u7^Y?h!F0RIcb?EUK"]t/7DRpL73qtu6(O&fkr
%q9:8pgXgAF0@%e3rG^t+.iWuh(T,15doXtU>Mg5]]q4sOVD$3]m]RU0^A.]tif/3Ra7>rhokaWVcIlk'22b\ph=kEOFt/cZoZ*_n
%YNAk%B)_T$>Pm#XGs-NAoCD5#.gIlB(De`qripk=f#Ca=%F*Mq]=/<"/8i.MQKEC'GFi0pRfE/2iF@1BL1]N&RDj<TnoaZ[c*Pak
%6$:NZ$ZA5Afrr/]q7:f`j3EMWl29eqglpudHT[,ICE#M'CW`Pr(Y>#)_kV8\+8srpfB,i?1Df5(^\$sRm)%GRb6se(0&66^m`CMk
%f@SV<j1"E693Wngq:2@S]U$9KT6b]mqp!rVq45tncVAu%q!,oTb*+VgnH%fcYMT6Al>,D05@2[]mB*#:]m0MTe]V\$eb/<o/g"o?
%\SpeXbf.n09RGjsin]5OlHH*2S*?@,2QgjL>[FIhD!kXp2goC]IO@;6j_sp8jn.oVSSKUF/R9h,fj9S\?H/0fd_c!QMq@s\G^79B
%5P^b>HXlMdrM1D&_FZ<%bP3VPg;?nGR/_Ot:()^RZ*D`Ff-g#??=(6eB)0Ba(Z4_NLd/PGVpHa_2;S/emWeTK`>d"PjL8pNQL=;9
%$^[19n^Hisp.j`-kM=)r2jQ)L`L@sPbCcBl^NOb[e*h3g2;<rQo,c*\I8.Cirb`[llbO.V\a,;reYX]t3&/2CQDT"KoAHL,0B/o&
%\^eYp(DjP5htt!l[W_AoI!ktd;0dE_q9ukZ$hFlF\"7DcSc/E]b(oh^H2m'm>Fs1XET>$d>BB=qH2i9[_=HT`B5\Tp5K1fI[rtPs
%=C0Xk@-S`gGaHk=NW$[$o96AipZ<Nu>e%8UG^eZoc]6:.DZR)XpFe=`0&HM9m43\7NL8=0YHE?SD/T%7pE,/TDIdd71SK`sr7_O+
%e<@Ir*\8EcC[&gXkn!LD[@<*1nuGn`HuSK/[H5BM,8Vt<SDPu<7b;F#Er1cqMo"b$oAdXtRO<JWJ#_q>gmWS:f+?hE]D1LQ]B+*<
%pL`R!CTB,Tq,;47nOSCI,lW$n2ODa\q/UrC@sn3"l/Kk0npk*55592kK[#^W%5@'`h-IX*lGoGX^[U4BdQtIUrq,_cH=<G*Y/A03
%4+@Z%r3om'e!JpXEQ_6DDr+]sYF/V.^N$LcRi>pYIc\o%j2O`Yp9)%#BA0ATB?>>jQG7p:ID.pN56#TblLJD/@5$KIoaZgoK28Q*
%[D'&]Zl%5=S:9r4adsAkqi=DBf#>i$^0I'*oR14nIV8,1rOLI>cVN)(gq22[n7Ck4rpP%+b]J.kpNZ#afm;E=1\:.rb"!&7k81VQ
%hMu`kq]Ard0)b><[S$2gL3p+*h=Bofld$aCh^uS:+.pe@4hZ:uI,14$a/^k;nu&&CCF%^?k5nsG\7#>SGA[?N\M)^\f5@!t4]27=
%nV+CM[+)FY-b<%Hrl<HtlX-7n:7dT_Jt^M=:ESj%2kM)$+MYO5p!1BSQ/CmT_n>fMo5a9@]=SIAf/!)<p=enfR<lue5H6hJ3AYS[
%r-1<tjN"8Br08mh9WOE6fl-1XcL@"i2sMKs='tEaSWrQESM]e"hL9:lVg!'Jp!X_C]=WQ!0D1rEB'VZ'4Yc7YB,B[5V`rn7[,:2g
%Vb\kjDtPu0;ub.2;[[p9oW@uMp-\[(rO'97H"4+kGJ62(+6M$=rNS(YIsdWe5LsGYHfq!XOFNjoImPu>%6sd?mVMn\1dE,X]gqYE
%l%:u7TY>C,>(,JcS362obFA1F`k;6Bqh&\WP,C8)O-ap?f?bo8'WeI[CZn,t*oZG20%JiSbh!r_<oo$Wn]Zohq>e_P%gRUB95'iV
%T(&Q'gakVPc^_^B^CY=Vn*7T9H?j0E0[;_8md?">^[l=259)6&>PU-H%\Eq[1gfq7#P1<$^lOo@+8%9)qD`fGd.\RW\/-MnoM4lb
%cRX`+q"2/#oU8/&GNojJ-,4'-L%HK*\^(2La$[>bnECg8\?_cf'=[YK'n`X7)_gpBC\2dqiSZSK3W0MUderh\onDRc?Gh!8qVLP_
%mshl<L8LA^jR%a!2*,(1ADT'uF7bm<X5DqR),m/[#BpS'TjGTCK23F?mk:Tsd.^V%ln\aY)V=6Nq.mui<TD-V]4_NUhlqHKE/2a.
%c,[Kk8KR@0TDJ[bX8i-o(CXX!iuh%3J8\2T=ra!KT/$/'5[fBgk4?Cnp^7.:KK"8KTLkj"TKQ%3,`RS43R&A3gRJ/X_M]+YS9Zun
%U0a3krSua@IEh?Lg!/&^R;CRUM,rd4l?WA;Abk0\5HcW1\1mNZgO+JsX$SRiWiB-YT4adeI/78[qor@"Zh[:oG0mquGd])Jk9#gQ
%<+!O(dH]O0(OpVme#FOGnHN9+Mn8msna<jomm[^CI*tIIBs:WG\mDE!iJVJ=>"!RTp5cQCjqft"<aO8.3qA_]ou5)E>aW5&FRf(8
%]p!O3rd;"1o[gKPn_9hn@"I!He*4?\],+7t+Ub\]__A!L:c.=lIotL=Yd?1XXcJg8hk!(&OhRMm:9.ab*o8pW$=>SigR*K:#5c@Y
%-a,_oZ,-,A#CDNp=f)'Y)F!D"s-8cI[l"$ZRf?:-ViMM?`nZ$N\@-VI=Z(cuIU6>9eSKXHMs\afR4`nM\TsOl_0DXko/Gf4mFqAu
%WDZ)4c7`O/H8X/F_3q&m_84(2V#B'_`7%V1qKhbiimslW-^V:a^8tdal0AD#[BmW]4PIBCM&Eo`_q+4]:JTR%l06Ng^A_\*8EL3e
%NN$+Z0R`pI1Wgs:Fari9Zfe7O2S/\Vd*01k^Q0\^S[nKD@sMKmpJ58r_^!i^Ydcg)\4N/03cs3@O(Can<hEZi*c-O-e#%$bop57$
%r(d1ZEa[E+E/?)hmIWCn4F5>UMYI,$_Y1fh>hkcsq9Y]tH07(<\L_ZilWu2\jRkJ)=BW7Qhd*qb&:a)MD!^S3h;);t/d\eFrIrkq
%\(GGa]mB.nheml<mGj&C!`rd34ICJ9CZA@T[-QW9m*cW%2p.sqQX=&`pVUmohd/IP`IDP`T6Fn]h):VF/X/ULmdf_RD]bVJ/,,[l
%U^(2mDI._ro5(,T.LUG'n+cG9l+%%+k&8TC+7l&6o^nenhUaP`Lq\6m=0CDLDLYal3r!i0HVRt&eI.l&h:o\MX`H[In`p!%+4Kbm
%]"Ve3gOJd/ftjH1OF?ZpjMJr=-a$EIo^1D,n!^dGs7uZ5;^;MfDY`76GVfBQ?9^1>6TY\CioZ(f^X)@bcC9OT'/.[4krSiXYrhVu
%DJB(@f/'cXjjU]E]_lAWl0RurUH;K.hg0CI=jf4RSIo$'r9c[Mq3UP7IPln9])bZP=>%o;]hZ',d%bh)iun-I:;/mI:;pRVj0H#(
%^GTmJ6PgTmao0'*SUBbpl-6dS*aJjRlHHAaHTS!`"R+7jDO9Oq(I#Q<W7sJlJ(IBLrc<kbM*G?SOB:?7\m%V>LD."$Dm"$D6D"-1
%Qf!;g^^*A?L=Njo55_t$200u2P[;-%m@_)_o%#[]!chm)?+IT@IR\=Dhn/`feVgo?^[cf\`SQ&dG&DH]_3;j+`uEL6=+:1^4ZL:_
%grFC'RG3dpc_]5401i&.hu>E40(3$^4A@M'Je]?nXYR>i[eKc8IJA+ad?<hXpAltYGDl4`m9a.DpNbUs"X?35]X*(W;5LCH"[ke@
%+^A4Gn8W`"m`CN2^Z?hE^V!ZpJ%>GQJ%XFJo)"3CgIq!:c[6a6Ds2^sR9._)HF!JBjI+'3D]d8Q#Mf<-0Qq#@):jSlTBe7uhZ/Gf
%Y)cfpo/l3a`Lb5iLJtj/DYDh,q(_X-_W'/EoTdZS,B(8)nql7jci<h1HW@)i7UHs6\Tn)0mi.0(]B.K!eb'<rSZ<"9R:gY(?h6X7
%3;`7:a3?R3oDtGp^Xb9TFeWd"NAn1Nk7%c\<T3"6/kqt*M5+iBFQnc8>BBQ,*I5btq"=2XHg$W`-`:Zq51`O)nE&J-9C"O_KZ/:^
%:-9s9:OcQ>4h/,pM(TNOF-r:0[XU@RANsL(We6]=EbUb(i,!rYpi,Kga4W\cT$CiB^[sBRH.p5AYLE<jF5ciY42^?aXFB#t?X%i_
%CnK!9])(c8:HOkr/<FS(G7Pb_eU8KODOnN7lL!B`Xf#sPGa^aS)/j+s[X<H[[o<%lir-F.X0Z11C:Oc>En+r,0$L.n<u5JP4Su]q
%?^%'A[lLoY[sr)Kf^S_&HoN3TbjF6#n9+Q\o(kY5?Z',0:7dB%<V</;^)CIGRs01K2U!T>jDT/\Ric8&ri,)PO&#/al+K`j9ujj5
%Wd/^XoB`k(?[eVoHMQF*V>"W?:G;MG/F[9;quP*`\L*h#TsmfM0?h-/:k)0R?!_o'h]@6d_55i`l.+O2o3D5bgZ,3h$ILm/gudGV
%5Nq4gX/]idhs5CApc)BU.\Z=5/pn)b+"F(u]A7u3Zg5=H(lo2n/ma@po]dmoouH]k\+=NMs#B]Mqp<'*pS0j`qr2beK-?E6l1Njl
%Qtt:8ANG;/k+6sM\\5Lqk4T:D_XQsX1\*,'h0eh`iu#Le377.nflQ,ro"odb!!VfbWpn8]>?ZCJnm$Z9f4TRaIQ7/gcYAr>>@1Qp
%kHE-Q2t$*#jV[.7X.)oPqVp?.:S1_AH@*6/p<-[XgZV8c?S>3[hR3@\pT6LI>MlL4q>B(.h<W?=]m9,Hp#=QfhTXoOoek?=0>>+k
%#&$.<Y1sb)?F;'h$d<g+m_So!Qh#KJHabWNhW(Vh0!3Eqo(^,lVYnB4;>ol,l!4CL+J/KnkIt;*S9qnmIrX`Of%]MG?W/WJkK8F'
%[WIRret:4Ld@Ji/>^A]gGZA\-4s(a]I0oj-rjI4S%+\iqna;79DX;/UM]WI!T$_o#NMh5>0&55c=[%&u<Z.9*nhm2Sp9/<++mqR%
%eXLd=de_[Uc%YQN2fg"g]pXHKNVk`a-U,$*03$3U@!_@g*@OCDkB@\#YJ'aKmbsoW^K4u\rdOkU/9AF'?$LNb/.HU&^6j9<rl`m`
%if9Gqm.JX!^/=[2%p+GM0B.sA&&KJgs6r$T++EIlh!41hB2-9MiR="jnFRAFdgJD(CE=KqQC7]YZMaFnafU*q2&Q/I]V3qVDLM2\
%hL>>pjnZ+OLGY+C-_K^(q,:9#^&#D>B)d&l*_Yt"k70""WYNGk?T+M-n%*T284DR\m?<TLjJi?#S/HMkUjud_MZ%4=/aV:S]sp)o
%doVk@ceNRqoQ!mW8)F)_AG<pLen<Z?hm$a9jFCCEo6X86&f[J=nR[n8R-niL;l^YcD>,[94dYp+G@m.ak!+9?34jEJj3dV?]B@Hk
%M\NZWqo@um[H4ri2.E-b9Ae(N3MEXjqa36b:S2t^")5*V/ak9Ids`Ed^Ra/I]lqk3Wb_3LI<f7Lf8M+SGCOufSQB]D8.@<"`l@l?
%Q/CK3s0;LiNSU`%r_7Sn)tRnHQmaKdPB"22r"<V[\LP,(S;c@oID<MoG%]rXms=-D`IeQ_b+";b85C4:13\2n<AELbk5<o=qo(\0
%GBkguU)KUC'_-EjD=?2\S\7)ST/S[JhAQ=J?d%]r_JM!VDfmt)I[e%EaM"RCF7$I!5j'k1-#Q]2m`QodgAW5L1Nh^]XFMbOA,L)a
%10k]7I(aKCEID9_oAYJkbNi6t?Z[sep,pg*HPKLS7Zhp6P%bj&nF/kMI<Y6$bdb6XhK85GfC!$niR@-em[G=0cWn+H\$Qb5GrPJ6
%nUl>i\[(c"fcKq/QTR58b[tQMVL"JM(OflSl2'3PGM1d9Xnh9)*t`[:(+.e:H7o/AErP[ifhY6of&+4ZGpJujcU[!MitL;u8d&KW
%r7l&Ch-41!E;nEodcs@&\p<D]e_]r3J%k`gmZAHtDlpaeE3I*J1sOA4&cUnOguFrRA7qg<Q#@@-V>5FLk'*]IlE(kJp$(8lrKVSO
%jO0u%3'@*:j$X[H5X+ee3H3^C\N=TYimWZ%Qg68OH>+4ENRdB!4pd>Fk2OtFRqEio5M":>Y0HAd4M&<&qU<[daMmtkX\X"4fXt<k
%c8T&@%R'7=n_V=^7rtTf]Kb&,.BS'P(^":"eaKZ3?!@9u>LbIj^]17!9^h^Yi6eThoc0OKOD,6n?$M+NU$]ulB>9M?YW_4;Q*'k#
%BBT!O[a+R!9cl4di6As3ji-tIL`^pC33>C)rTr']&&)+g]C^JM%Ccul<W2Ogo%@6FQZ(d(&+1tPrVf!p5*-@mUL)Z(@0SJ"CGYVV
%\ddhn';V,e:XBAuR9_Ndb=h[$m/]ClmF%'7pWM`#:Rk)([TEL)*DoUbks,'?WuG3g_5m+ZbY9nV^2<Ak2"gAQ5HTeQ-ueL$50g=W
%oY38#`jGX*e1U%qpRWt\?X6u"r@L6YET2ATolg32jnl6q!`b"ZI+KJ8rTD?3Y:j.\,C21P^]*&Mb4Zo0Si4EuX?Xk^MbEdtQE#2U
%J#_8pbE(>[2p_Nos5"U2$k>cS/lJ[?Tub.!E54L1p#43MhRK*<E+B+9YG*$dI2+2J&rPAjg*.mS"U`SG]!Ja7K-K@M^J/]/df2^E
%gpk^("Bdon>^f='($5`un)NDNp"Igi)aAVN`O2c(f"QObgc5/0*`m)snkiii3eCD:kV%>:lF60:qoD`!H42Xa-f<PL2V,V@oeF\j
%.L1;S^RU`Rp[.i#5hAQ`=lfWq&M/#4^&5/iSB/njqEaZiAZ:[[O10-E4g&99_B$RG6%a^6djPuuVtes;r\S#kj<^cD^IQ!Uf;(5L
%"7$/=h3-Yhj6==ta#!B<o8>m;HImG14%fMG^@raAd\B&)H@2'V,]-=hO[b9]R9XYb]TL=`/G#O@.$NW_ingR+S`Zba5%1@a`k+)R
%]Ce+gK@SrD%5"e:W$WtA/[!,=?5>Nmg#1<.+RY`07L%N%:1(itRd*VY++.>n;ApC#O-<$297r+>C,eSd4h!"p/ld6tf,I/lim-E?
%-4^d#K!]@d4Xs1rhl-H,\tFJ#lE;WgnkiZL?^Sj1C&IDbmF/MjG_W[PF%I?4o+R7g12(\!@/\jRQXA:'(_T2sLJpKg.YSp^Icu^,
%UFohY48AekoDKccS,`K2_cT&W%n\L'\FsA&c6-ui.&k=/If%3&P4i#"@Hq\2'ZI*D]Wh*`94MgW*aSS.+*E'_Dh%`G\,G.-`Vk;T
%ELl2Y2/C3D&cKC`69dVg\C_kf1[TU?aSA^n`uja<Cq$30>Bf&P5N12&[K!<PTk0=RnWPUiZM'GAEh8m#G^lsnI<g>2qdUoErIm\W
%YQf/pDgUrON4<5]\f+Y9Tmu(Q;%;&D4*o1C#9'#;UHW90S+Jo/-Zq?HAhh9"7sbAgNih'_<&dMD?EReA$H^'W^O?+)M@<O)@8LT(
%C7uYrj0&ib*OQbq"5MR6Y8b*fEbH7//PCT!O8c0t)@/9;J$SafXih_a*LM2gs0'2S;(BKGf"^Ue?i.RCp7KU,Oo)o3M7obMZ/X.U
%*o<-2CV]SI5@oVbZ8`6hHQ/3ZIV5E.de;789D&+.bL8ZWO5;k6T6kh7rL/M&-nP*cq(dDMreJZ:[6qVB1$!pfrMh=*Vpak6<,k(l
%^un<>cob>6j_asYMZf(>q`JS>du;EULW%0hj/JW(Gr.$9k03Q!r1XPC:IIU3&!$LhWYecRL?AMSLqqkQ^]1<ubtiNF0BrOr)VWLq
%LT:[YeYD3We%g09$a+p8>lFG-p\it&p<G=u=o+kj#FiYcX!<<<I]i\@:0HtLK,nL"edHa&/2WaUE(9WTjP7;:SL9o:j\RCV\N<a0
%F8e-3ahR;RlE]fjLZ,(9o=0pS>,Tc5$Rr@\lui#ro7U>q)<kC]T;bL%S#<3ig/J&pjZV=sO[LBlMCdp>F+.k8O&3%V4l]]j4MA'\
%F_0jbNGn-BN6QK`l^^gU5t_Xd/c)YJ/%t-GDXI<"EnA:km7\>&SXQ_@`6FNEJ).563/5($7..pBS:4&t5@jclTXEVR8'GSKX^)[f
%giUins!I!Oef)q1eI*@@VaJ'Sn$Q^J?PMm,9]r=N],?r.bRqT9)b\=UW#6[uQg9.5*&@8g_saScWTiL/penLjVK4FI\T;@tr^6X9
%&nejugj4%Q?9-JW0hg7Qf<&;-R<Ab#LKlL9ZaPPuS"K`F$BGhFX_hFU;Ao'&g>7UUIVUCZ=18.:q;gSiQd%$^DQiGElth.J=`MD(
%gN)M?=0=+@J#g3[1%d!0ElI<XH"ZSQ<R9;7H0(asE8"R-@cX[sXImThjIa,$';s@O^\j,4."bM!^i/I,XlPVFkBN#I]OpqSc$q_d
%1Fe;Phh&":s5#s7H_]!W/'`7%'iR58(B=:ca6rTPk^GFiBB+kZ*BA07?ZD(^V'b?GV0DXA;5^\a]-s8u$:]fC%I&'9;#GYbq<ti-
%q_)$d%Z\)^D>\A?gY2)3:]C8nMk#n$C;L@QX3.@R6^aAqTkYFT80a8oCN[#aLNJf&$ZgO!M"']\rjQ24>H^p-!:@6T#dr:GgVGj=
%cPg]=3\&,9s0<>WLMo\GRcSFW3d6&<q6PSMj2XCaJ\[Pg*E9GSlp'f-2&!="'Bjjd1\L,V#@F)Cr(Q:bLbm4UM4a,_&KA9uTeR[:
%A*VHLo[4@62b],cfp">$Nn\pA1uk[tgPrp2c.!',7-an]Q=l.2Ed'H@9Mr*V`CtiKCs#(;5's%"e7cgfTXS.=[*2M0,u+3<eA(l/
%1gB6<6&RX*Tt+E(7bh=lc5=7NVu#ro:X;<t_#tqc'[\"a(3"2\WVl%.e<OIBY/e]SHM#9_=NSOEB@Y+Df((<A"1hUh-b!*WZem"f
%9=d.t6L1-L6o2q%=bR7u^3t*[6B84qQ**)PYPM!Q9T(]LJ(f)?J6Z/V0$VrQc$=)l(:ttO;aP<0]:tX8^@9e0B84P=*KRm2;LQ+4
%Cap5,3Vk3bkeg]u64<HDR%KnD;E?%p?"XU!$RXJJLr1`IBr8D>Th-'Sk].&VAc0^@_HqJeRhlHKD#G>[ZMlcLOb\+U+1lkoR'Br[
%LGp^F_6loLdH\Xg?\Cn<K(_fB)OV@*@pKg6+=6'-cs3ZpTJrjMLMc@4:sB'Q]CJCVWUf7-mHN'!''iM>L@:.F-A:GHr<g(sjYkMk
%pdCJ2*etRO7qo6n[<d0Ef5Wdj\#7_5)<2(]*fAFcYeomp>3AK!_)T$Q(jTNN(7DQY]N&)AU'f(]l=MesFQ:d`bEia%X(Ibm;)&`$
%>>O"!Ift&\+bt?>0.Zl0Wum1a>J%a.-&+TdGfD"AqIIs);,S23;3L0CL1aSUCn5JsSM57nf.Jc#FC!:ZnAu3'.R/VpQ/)XDRqTe,
%o;oSB^XBA`?gX%t7d=7*=,4@mFh;5.\(dj*]4CHs3oO?oIG2QZ*!pn4*<pS,BX?E-%+R^:(*M5(SS#BpX.TcIZF;g-R'f23`<BH7
%??mciFZI17P'&'#3LDkm.RiWDU0d+-paR_ITPs(rOUY9N-RT.TXk]Km>tX_2[!K_Gbs49t>!3MPmIc9J<\nlRdY46O;()WK]nU3+
%*P%!?*kAG!Q^t?]O'GJ4ki<'@*no(\GXtqFB9Nfs7o,;bn9jG$6D.`Yr<XX`'>32);ch(@S`6&Ub[-VsPi:/C0Jp>BL+Z^RUUe+P
%\%nYZe[Xl8K$rk+4&B/8V63$ZqIEr-c+:)X4P)a9'$3JEFugobhZR-2q1q#Z_D"\rIXuE=ZED[!#hd^o736unWU^/`[/QH.@=ac?
%2gTF[LZR`JjacA%DiXL^FK0g+fhu2?OpIsXNJ<-#37ZHul4E8j.kQ;Iq[XL3b]`/22ghUD#.DF1[/CG"DjT3Y4TX5J^:e7]8uldP
%T,X$nldLbG.`f06M)YdJkk*$Ci[b7)[&o/1..-GK-p(_!KT-A.BW]pH&X!PZQZPFr9VUArij"Z[/,Z7YjRB-"gVm#f4o>sLb(*1+
%W@c=B6Y'5OH7sj[#:-N<-HL-Gn2_mr\gs\Ec;+$s';@XD1,L5@<Xlc$,;OHS#N"rll4fFk(\?!g5`Mf`?glR",OH!;B5`>m[DQG#
%irt7*'!gAsC]h!+@4HJP"T3=SgC%khq,hpNJ#W!^HXb_46a&D0d:%9a"r:,SrgIRu7:-OQGU3l4=QZQbofss#hXYokk+c:NUDR0J
%2-&B,jGr]sOpPtG"7OAbRbX4![l9G%D9Uu"DP,0-'+N?Fh\P9j+Y.c>*$R0\\+^<@I5%ChNA2:J?k9Y`*,N%!C^f^R_8Hd@n6ghQ
%qg>U`6R#sCC]ioV=PeUn3@#'ca6=OC.1J]LEm>\0J!F8=)rE#ESuJ?NRRHROC"Y<[N+;7E`Ye#"Chfcld#T]Z#pT[daq.:4pc:r$
%p#UAK[=b7.3.W\>_5Q"e(.9<LVh6r$,h2Fn10JFOf$W^jQ-\]8G@W`-BcZ?Y0Z+=?^_D_>\^_op4c_'EFK0=[b<>B_.W_O(d[QBq
%nL>/Bl,OT/e#^,iq($=(m;VJ]iNR<pS+q:^Ak/1W2'ZM8=X%Dre4B0Wb2$bSA?)J;]#"j,'n)g5dI@9"I:*j[IB1k4IlDKP2@eBW
%H''jV"j$k9W3<<geIp?7?!7H0*u(BZ5d%-rQ^W>*pt_5#X-p"\Q%aa04bUhm\FN$<KBl&WU"cj$g)&<$X)m@+gRHc3lbPop3^6?o
%LJmbf?^fcEr<ldG8/VejbQs2eO9NA3Ojf7-de2@iZU[mY\i(up7.pq>[66Ju$Kada`e_(&HBeof<eY@a/&OUd-YV?ZWS#0eW>o-a
%YR764W\\=RbB9O/Zg`4P<Q5MgE4:aN^tb_s<`[9N0(CRab>#G4YUd0Gm4*VL@*?Jq-.n@O&,((nAHt_:#..?!0<Mfi]/2Kr,b:#P
%+OdaQqr<Xn:XH]Hp>G"o7e)O#)b+3^aNbco636_8BEPJobXS<97T@,S[/H:a)-XC(q"2/12Xgo'53`16lHHZJFXL.K#p`J"c"3`j
%:A00uQEk.2Yt(rPZ#VrGYC3]R50O*GU7Q6<TSt06W`ajdYT>\4FC5bn3D<AF4\Tt!B!AgA;[Ll`2gf=N]&<5i'ofK'2W!hD6E7,,
%VAU_K(9ZTjd]_oX0W>.N^fu%K%Ac\5q@+tQ3SDGn'H,9&bT4V%N2N;3qZ)T@)UpW2mcb,td$Db.*2=RiQ)Ano3S,<'8,(t@ITRKW
%DTLUJ+CU>d7fsc^%I_;u)[)u[To3bI%4$$l"hY3>"qnL(0]3ZlXL'=C'd]rg=IQU8.&"PuBa4a8KJ#W3;Lq7b@3mqc[V%r6/%L6/
%MA!K_0U3A!*2YTXYYS;a&<DbZfj^2m6+5DMPpoC_EHYY3FFjhbk;:j=0OZ7f=meIK=Dpsj(nR_EPA_Ne6a&.u!(#f6$0UjkjIq>K
%AsY\VfRI!6-Nr2bfV^4N6p!fVfGiTs3$B-<'ZD:8:0>W'ZP=0bS<1Hir$Vmdp1Z[cE1"jGU$HDn$5GU8?r>UP6%p.gCr[>ZKs%<g
%.TYbP"u`9^@>4Z*l=#BVVJdGTkQ\2Nrgrf5DTLXq:CRj-<=r<q;P+qt.bA%cH?BcVG(`O9'T:6:ZYbD'=a*1P6WWs:&G$k_GFs0G
%?)^6Bb?^AIr)pI&X--PO9Y^0#<boS:X%+6eD@1f.g?Hrup/\di=4itH*$Q2R')5b@.YU8##+$<unDK`q4&!&6K(l1C4sLA`NKBV>
%Ql&(7En?PYTg^KVckmt)G'Mpg:m?[hYd+2XLM(@H6:pba):kEQaC<sLr=?'>b2F!:Rm!WnBIYOQKQtR>"j9'j6ZWPL'Xq?I$gIhp
%eTcnHEJ06"0f547LVP(t=YK;**@AhC3RaHj-ucF2^A@=mNQ`]MiEX7`>kZ6++7'7/iHXq?4</hDkh@WbRrh1=k`LX,;]2J-_rNSW
%)[kt`UZC:^#nk/tg2T8rrt?$PUr2&i3-:$Yeo7DFTrS]RjiBP0B_m/`"kdI-(P]2W<*.Q[OD2R$.SXdU4uSR/j0sc&<*IM:hTjbE
%V5Zf0a$qPhLGL_E;J?SR;J`/W3ZWPX)bK^"hDRr"i(0^+P#SA937=_t^l]\K&!$;($BF%=2Dj0R^_+r!dHaJE8qsDlSe9F&ElLT4
%bF>?]YS#*C3XQT@WO.bVO<n]g\Ucfl_a`o8p&*@!NF:`95WpE0":I=W>8fJ!a[H^I"\1%h3"qJ'#k:H:)6??'gT+.N0YC[p[?$j4
%m4^_&l5pmqNMN.Y=g=)]93i26N/^e?)-kdtOTb'Xa\KiF;GT;QCaA+nN9t$u$0nfp`J:^\8dcOBU=dO@X^NH&nc/j0Vg%YZC(D7$
%-F6E=1ogm;@j;9e@T2b1)?Ei8J$H:FP-_&p,G5Ji4;p*ZE]<>c"KcD8MN*/;R0G4]_<oOWa:H-W^^88l^sGURigC^pYL#gt.X`!K
%8Pi<S[t2m9n6=3@Ttj2#9]<nQV-^C[#)n(d;c@*D0Tu9-E5k<ZI/FHPEUlA))YDKd&X&So?sj/p(7f1)1W(Eh;M4Kr=9R[chSBT^
%gNP.t66t$SJJ8h"=ndH@,"-KE@oR!+ekhJM\W;X?abku&kaQpY;%ZKXE,$I0_/)_?:kM2M0u=J)!a;u^I%Ma5TZGgEde[sC`2H4f
%X8B+lMF4O4Jjhptbq78O8>"H87XF,Z"@>I5i@&^W!eCmgkn%7N,7g@@WL6p7AE+.#,73(8ZYC<o_63+XF621@I)6DEOo#)H_]d]D
%q!cUZ7#*`&)FrU-CiJ`m>\0h0@%BcI!&Q7/0PKO`M.@Wi1@D.l'N.)Pl\%`37CXLtiXfUNLpn+\SW;#nQpha'TG^CsbJF'Tl7rgr
%&7+5XF;lB)IW/6a7j@@4entHSd++ZF61r59Cd"a!&#t(nh1%6`Y]8sId<AU4Nrr9#''qL4*URH$'5(.7K=&<!c\1M%`XRob6n;EA
%K@(4Yg5#CD3[_U2[^k_;?)JQmU9T$r?PEpK)Nhm*KCu9Pb'ol;1*>Y7Kn2DAs)U?M9s/M/(e,(37L$au:A4b5RsL=NK;A(7dHek_
%,DN0a`KNq#'+mC>f0SQ?-W$#g[4Sr6=KZ+BKJ_VQ@5@bfrTBRu`<)7WRjlps0XG/WQ8od7,NG.o5^#NUEO7rU7]OPm<QOi+Z&!P6
%lga"jBiUeM55&nBcDjc.hClcM@;9E'EUX.)V87&C%iq?$`Yp&Mm.Hu!F52,MXMk7I:WY6_=&-9JE4"D.Om?X@6g&TQ)%Q8_!_84l
%CVGjNkBer?__L,Q=r>7uVU)W'[3?5OV2?q5fq2?#/dC:Xf&u"mVfPl:lV=3"8?\Xms6J"&s7s"ugV3FCQ:*Q_os")V!&g"<gslF)
%XkM-66uj"]&WIblUP>3^='e$MX-TD4NH5Bn@b(ptRpfra1R1O1+ZW]OYkfX%iK`bGeKt@^c#g`_P9?Lq0F`mJ"W7_GTi#rHC?UK[
%.')'1s4p\\__;,[@A"VAZju!@),cpnSYUO*<urqL0Jd/Cf+]7N9WD`K?'f<sOfm:'VCdhLY0qe7m;Ra4PgUXQFOaD"hY%1=7#Pke
%@#+EsR#qk6c`0.`Ar^3SVAKOq7YH=rE]U]&T[,/h4^j@\0.`DA<@*;es'UZoF$j;Tf5EV77s+5anj2/Yi6au")3IUCB1EFf*7.A"
%:LUfY2q&19JW\&GKo`VrZ]Kc;g9mn/<KF$GXm2s-7K"r5&k3b4FthI%*Z,`)(j\-JFtZdMEAC=4Na*)OKD6X/KEF")PeW`)jW4k0
%PY:I_fal&cS_mb]_IQ_WlApg90%p6f7qfIWL8gQ%Ta+&q'o(S).8DFQ&$=s9s0=0Z%[nYYEnV]1,PJU\/VuD.ajMeBN@`U9W.4K%
%-uIR'ir.D?ci<Xj]kob$j<J37o`2[mnH/9+lB/^e1,a%j,$X8dm"L.d-@oXlEF6!k$Q0Eb=t!Ua[tO)!eZK[N--9^1L2S;0@u?R2
%;kOGEiZ++dl<u\@o;p*:oBhNB:QHu6VYH9FKg+1.6Z4n;)Tbjo@jQKBfo@FpKg/R6&4e)TkEbd@\`(Vu!=`aS-(4c"G\YbEanjVU
%7H-q/WppgeCZDG48lgX&&&1;9LuqpCh@Q)1J*Nj%T8:V4G\$:)1=$dN%@'c5[OUpGcrPG\dfNR$N\:iV#IK1KbS*-rb(&OuUeX<@
%N\[r"X'0*nIBrN8IEW2+Fk21V$I9@6Wp#Je15I=#1-)%GH01Kg&_S:>A-NX*!>*JC6b(SNX\P(!bRh>QXtVa*a?T_?^Ur]G>9j&t
%JVk@uj:sR$IR^JVPhAQe3A7bNSo>$$9PZpOm<6,N-;,W"Z&N1G\Z8?OfH2Y8WO(u]lK=/R#&H+aG1"M#qF&P@SVa&,A+C;>&Ik$"
%QECpMBkhrp>?(/EKfHa?L\^"\>PB-c;u:#,-PJBsjE43<]R!l_\\)h3s%Ha[HhRA5TAADer?i,tlR&d8mbEMr%9<i`FkG-`T+8TX
%G_GS<UDn]_HQ!s9hCk`EFHu6Up"A<H?:b9?.^H>Cld9HG<@-s=X7eH8!q0ZUf2B*>%`iThYUr5Q:3@)"<nNlK]s/K)TE3J78Q8CD
%)/XOF)rO:&[fIXlQ,DodI>>a7!lf("pgpH4S/K6!#,EkK:**5T4u=];PLYL>SmiI$#7\*KZ5o#-$h,WFWDqtd<R:ib_-*3"cqu!#
%*KYO%Mr"^h&-$%X*f`:m!jBTRHi-KF#>b;7#Q4d#>['05[*h'AB]E]i(Nk*gKQGUBH)jS;8h[Z"IXZ0_rQ"?drU4O8Z65<XbX_GI
%EJk>ETPX]:7O!#!fqY'!:-hf6O-'HH,ZR^cK-*L[;5P$X>tfE/A4V8VQe&CpD)%#:Ks-sXZmo%GXjRZccH?..S-:T7X%K".1e0oD
%T^$Z:WeBGT<+`E3+]X?LQe,sE_IA2</qCoEHng:R4d!ffY8SX;H'fRRDt%m6-A''"P(Zhcs($i2q2^1QkeY@L%TCOW<FcqIIM2k'
%KAGgslEMS=0jqVF'[Jt":j0)O#Lp>KXG$\3*/%)5Cr4[gQ.=8;QibahHVWJ75%.51dao+I*#(EL[L1TB0JDsZ%<9<G/m7D9&m$C!
%&bq>GN(Ac\j_\2O$J-Y87gmlMeUm^5Xrtt;=eY(*g0@((FXebJG)_@DLBgt#j??t^F3Z7H#d52@'lSe1H=VnKGJkB8,h:ZU>fY#L
%+4T^(fDbnBJd?s.:!WT,Ym#qop3\92%-^RE<s#f"3n-<E$."2$L6PL@d7%4*6#YA'($_J3Gmff)W<.VGWbZjUNuX,g((?Lk,nE4;
%ji.ndJ?sR_](iKrl&cr0972TH"g+aIop_uLb#um&dMYUFRC<OcUe51V/NWjh6,3u9V3jG:N+8IZm3BC6jV\l?=@NMOWG2M/,RY;d
%g@0LR7uFdb_j:m<BmKm,k.gojq4Bm#YlBKM4`p+MNV;gjL((kRI#,5&0f]udnP'$enQ9LX>Xkd!<6.o_b7/!?63e4p71TC?^kP4t
%Q/tP@d-=ZoKWdc(TE/5^2$,+k!S-E?WebWl>YiKce#^ta,<9qg<B[oWP-2/W"W6'qB-q":Toq_c<5T=5+I@]0SGIc[BRiC?9^%iZ
%4TRqTR9I+\fK-iqLJ+b'_'gHu*P=tfes*!rl2(_rU;Oa;),O8A,",nb`Hc'7CuF52<0>-q5r?FcP=l1-g_lVjJ\r+`d&O3[L_cb(
%;T\J:d%t$r'==cer(nA(Ce<OcL(PINqq/u\J<l"njR<7Pi2YWUfK7^CWCT&^"dOr:NJP0]#`@Tf=n#XHGu)bfHlk>:drl"*"`.>F
%FJePm*p@c1"35BH_Z+S_X#_2).&BQHB+4$'d.L3``F=9+#mlN,(DMbXIt:N#-aaeIDoA^e<O<)EMP1ok"g#/UjNt/KNblL+Mg6Fe
%J@H(YUGu.5n3U^kb>R)jK*oqg#*]2X`T_,i@p'.cSk]`M7s`M>&SHJY_s&:>*!8D@5rY+O*_Hu@$#Jp)q1o7.Ej-P):=L@*ieT\s
%/TV1.BFukFW:uF8Zau.]Y07ji$O+L(4@87;Z5Vh</:Eqea0c5F[??cA4e^YR:d,J2=.$f[N5\-I9(5[5(mM-Af>fEN:>qj^>,%7?
%"bT/FZW@Yt?1hkXR`Rj0<F#)1KCd(gd<<*f:o:?'YR3b@2/^B7rhoS&/&]cJWX&$A_I=&&>/8I,'Ql\O0sjHj\.-=%qCaC#n\tmI
%<6`5i1N^rFEU^i?d*T!'M#.efiii^p5-'R&m@/X75_qJU2ZYMkJRcTtDZV,7]me)%$0]J+:kidO'W$_DYNa_jol^H#_MAe+Kj]]c
%NuESbGEA`M2Zg7O#bL6!JJL=>1->e2+SlFUKNSa'JI[fC:t'b\+D<B[a2cEiqYr8(<(2hd?mul3;MV@IWpLGR<,8[dllielJ>G;<
%)uZ+uUah[-*W\%XY8$^-qhFIr_GmfZ<[9,7BQlr^K-L&\`o+;ETG'L"0*]3/"Rkhh6s3/nXXl:M(LF7JI8M`OYm(67"V(n0)GOWU
%-hgah)TD"rblg5n5W2SrN$U3OBl^4!07+#0ErX[s]:t202GE+uUa#FBHQ?S50Qiamq)IihW8iQY'c)CXbtZ?0LL2h;e`_+!(cWs9
%.Wudq!](oHTnq'[=a@"->e,cHD.F/<oJ$bmb]:"kq1A[L$sXd-Ke%\nTNKgFkcfi)s40K/6eoI=C/V-LMY#'A\H&h+#t"7u(2.d0
%C+!On6kV!nYnlkpY0PW/P?fMg).X,R)DppXKZ95oaKA'GToeR6;`'V(lmR4[/RhiJK$ZlYckkg[`5U_`EZDP)PQhj;$USMNh+\<0
%LLuFn,q4cI^Ntpf6ShWlBu)NWWc$@B<gr&n$-N@4Fn@Y+SIIXVa@42jL%DQ7cG9H(Nt`?hi>&#3bWKQLm4\i\>N=l<GeknXM;d)P
%)!7MGk"(&/XD%Z%dK9a'_E(8CMI3oT8<K0\4=XCW_;3tPrf^dWb'=)KK@)(uH,-6B0KE<>FTat]SQN:tqL7;Hi/V&B(=6M6TS78B
%S1irD#&)uWAIeRc%[0P-3pcrFCd^'rdL3ou61`JN)8A&!3/9erNjUW9$h,V`WsulN3C,==$s#Gs0?r%c)DeA5]kV[gnL-.oa2=Y%
%$*)#qIpQ]*h%Ua$dF&fQVuQut(pmbbcpCeE>gS@P6"lMB75IdPr1sd+?om;H"mM4fh'3=Fd'>d,P+X57.ZCKh9$<@?4V0I&=e24Q
%U?@;$#&Tc5&9gi*02i?sYj1na5blg^$7MFVc9nTMB96iLD>urY?k#,kiZ'OHrM="3"hu78o'i.jo9ts@,2MgS,tYn'/(";6IAkp9
%i;':M5Y.,uLB:8PfRhE$7GWH4"Q4/6=?^3>\bZiMMSUj5&E8tBHOJ&;Ogu@'hN;WF.^\irJ@K^J')U2Bp*pbJ#6PlESC_sNJ)=[T
%ahHsOHc3ULk4hKdQDs^*d<oOdM@[Z\[a+/M%+_l[mBUK#QBM]$NTjqMQnc$l8&WQ[=ZtVaK:^6e/RXis,CPo0fkNAZfkaYaONG;S
%OIVE3=r:qE,Mk_m;4tJD$7TXokG9G5S.VHIjL)cq0&RA&Ku:hD2Gk-Lc([%.QrN@t$i`<T:+6s5pb.ck&Cu[J@$$#'I0F-t[E]1#
%iDE-sC5BEgcKNW[atu_BEcjtu6@i^<a`Y2BWn@&&cH\qn[%PR[QjGq<'f1MlYaL2$[7D%_!e&7JNbCipTb=%g!^I/Uc&!3G&h>FM
%a)rssf+%r.M(1hlkQHdhM*ndrR%-4<ACm5C(%5CnrL5cSKF6ifZ-<o=@sBS=(5#OANWL*g<3!2Jein\l:`u#738PAR.L6bZBP#U_
%*Nn;:@msfk(;#YSXGa;)WCo!PQ:h%jD&osGTSnbueRMoEe716H8dCQ8GFF?g(AXH)lWG#)\Z/@ma:?>ud>EBDM,G"n*qVp8;03Cr
%'kd/JJdULGBmqYN2O#"%-+m10[&B<\WmLqA,R]=UApPf4KhOPS7*G9\.KuW@UWPT<[25fsKu$uD79gsk'ifXZ(T@d!9McsAQ)od<
%JZcj^;^DZVMGt"B'9#58;LE4i7ZVo<!,==Tg7dREX!/rakG#$\[XF:;5k^K$(kiDh>hW>s^T^![(XK-Tl\*iG.RJ7pN6FB!#Ms/C
%7hMjY!gf.&8hJea.MkOJA^6+Lc)+%WLVoEc&-T1gk7eFq9L't[,=!n7Z-W[-'9IN>9-GGF<,(E_Vh]G1o+4A9RL%![EaWTO8V<&h
%bdaI8(+SH#Al=\8fc2<-E%GI`cp]Du40#:!Tnh:o;'s2bMTFj2+Kl#,#+!@PLX8?"B1Jr3KRfASc`\BH*;(^q8^Be5@`F%nK&@TE
%gk:ijoua*W+p0c0a7Y;Z;#"bWgo"4^+?N8W/m9D'7#FpsI81]>=kV--#DRZZpe3%j([kh.LF,G@$*"mU3%UkX/Q)q8e8Pa+B[1.k
%B.uBEa1Q..c3Wqn83O@dG26!-$!rR=cPejc*ESU/R@Hc8bO!O<W7VM?BnD"XiWSuqhFB4lSEnQGle+!'HSTT*(F$R+^+[I[6)2l%
%*\!$fHI,5$h0&G>VPJ:$ORT_(YVbOfK3SD9'?tJm!JZY%+b1=Q45a!$=mC[u9l0N2<h.eT<.uJgcml,Z"OA#Vbi*];7<1.'T%%7V
%2K[tu;8Xe1;F2iW&A/6'G/!(K5R=$9n6k]0k7LPt7Nb_+4#&l>:4Z/S<4-_:hc2X!dZM*cg,-#Zp'nT.&7DN,i0%F#)<6R.1JMOn
%9s&JmKBpHe:I3fa"B.Y%`!W8',8<Vo]YoaO"pc3'MAmiiXdTgF@J+23/QRX.[Gd+*[2=n0Y$>`j8A\Pu!(73WDu]=.*r!5hi%Ac_
%*!D!1?gsmjD]Upo"Gs9oLW8+n5R8ghflQ5TTqWr\M@1/<p'l^\-OFh1*c?f7d>LU;MM+$@lL9dt4!)?c$.2h1<.]ds;joW1,7tk>
%BKR4oK^m9BphpW2NX,UhaeY`+)]](r6nCq$VcG=#)%7rU`A[oTM)H,2"W8;jO3*5X!3>C]PeDEg8rn8Bi8?9T=+q9<GYY7/co!A=
%6;qRE;!1F^1?(TsLrMkDaRA2(HJla%-+=nI$1%Ml+p]]GSGAia?#.Ou.!gkf$!h6WI#73-@%E\r9AHU[PS&caH.ML8cQRBQ-]'a9
%\dpt)WQPVZ]1BK_LcCI_409pCGaIOY/kh-7D%)h=aXT;_":R\u$_N*<:k<66S0#/UeoC8<(qstg9%s_KX!BqE71=@l@nUMBJr']X
%GXKM\c_e9bJ@H3J^nhB($RN7t'fNDSRjbG0cS]gDE.W@'c>Q"0$dYfu7"`ed[*/[R6*'jneC/=^#3]Vq1d:7Q/p@M?67<VsS5Gg.
%+MeStLK#2cl_U;/6%N2t9ee:dQZng%k=?&1?bg0+P%=45@&a/!iFtGmCrFnE1ZXW'W-=27J]j%Ip)U/Ymk@loA--.oWC3Pt0FAH#
%iMQl3)hm6FekQs9n7.t)_0J"aL`>9iC%-S:.#F]*;q=UB:#su[);/_WgRT#M$0FZm08"alLWQ.67SAU85"SrenMsS%La"[/'*tst
%%n/n]3jWM-.#UiYeWE>(`<T^WQiTs>+r&K<?ugK]NuNjB69c\.$)Q4DTZ?_Lb;]^eKq&o$GFX<qZ9e<edJ15UW)SDtB9#f/T`ijp
%&FA%hRA>/QTZ`/nZC06]:f7$*d&erm0D)4/7VFQt'7q!p[N%SNQFI;`I3udM=h"R3+iA3>M;u]#R^!F+l4HXHVCN!DHS:?B#N*hh
%A.ioN<\.o`0Ni'S=i\eNEUU4DE"U3S#i:]jE4A+mpDQt@,'+[DNc!AR9]%T8ml;Bk[,;6Z#9_@0#pjV4F?1;EE6&bhFk$ATbq#VN
%6+0%&Br=Rn*GB+J7"I*ua,Y%];Uu;uVI7_IE*C4=AW\0&\qVq,_,2Bk+(r[A0h;`G`AL];*<TB1'njCO"tPLUPkq<udc:!u#;=H6
%8NlK_%Gd0M&Oe&^fD<GHj9H_N&J14$jmJL0:.<N]j(Z[B-)?8;./>*j/ZeE601n,giHZ*2!0IO_:3p/Cj=+agn2:7UImsYIa(\!W
%5$;FPW/a/j=!oo2V:n'uL1Rl`XN.m7Kbc5)=bRt4:C[55?*@B6$P6^C=EPKr[c0/8&i5N?4`Bsjb#TTCXiCld!L2n,S=iE3Vks$d
%J_*En-of0@)`)gUM%m(<P:4\60NfX$Ni#3>lLI9`#n"u`KL>)[3Jm)GD]DFle?$qb0;\4P<1o]OVa0i[lDZ#9f,#H,<=8Q$Xr`@i
%&MuI21DNf@q8iFRDR2aM,%33mW*eh1X!4-(MI9VLRC'kB(GnV!?lrhP0j+s:ZR0\2n<$:*DH*\).jL]8@d14LOjL;F`chQY(HY;#
%hJ"YZ3>RIkEGl\;26+26Z%bgn1;uo@"M?:B#6lZUR.&>:#;&ni=lN6gbNOX';F*sG1/;+$.;R%(ljJ"2j&H.Q,DoN0?"C?_=KQC3
%N1=[.Q_rXSjRS48MF98@W_fCb0W1\i3@Yjacq=d(gTb&o>,8a#LM-7h0eIp*7WH3LD,9GcMVADLN4>r=Z/[H''`[C]];sLpXi<c_
%5fLdCcU*dlQcttS=*\eXee?dPZ.piiM[L7p&aI?qOlC79i3!oSV+*;T6si:CM:`goVp`bMn3ToF*6ZF`1.[r@c%rF,,Ykb_m7I5G
%pej7-;(!Z%`Bp=725cU#8$7B4E=-q_"L`Vj0biYrGZKlPh.Tq.Z3s20b,qIQ#mt<L$$QE<1(L4mq>h>'o7I1S%M_`;@UPKF0c]1*
%$GqQ-/DQ=iH(g#UVN;Uo0@&6WSOA*,`%HWX/'U^8#]aI]#[W1-qbHbQD(.'40KDGGOM-3oK3[qAa&T'q)qS$^ntd[ki:Re^Y7Q"O
%?-ohlY%3OViWq9"PM%AkA`1SQl>_G[TnT>*6"@Q>V$3j!e3sinh-mU/;R7Kd3#^2M+SU\)%??QRXoRk!2^7]"WbKHQ+em<KfuQrX
%(f=?67RWKN1`4V5.FoHF_VlVZ]+`;E.U]7)M5/WN4,i^^BQT-4WLX@+Z%d=t&[%"OE)`?ch4=2;<b*ji-GcY1;DAOtM*cGY&Q(=3
%WBa`$pJ)IB:j^7-lZ#9rJ53L%$1+6hL1%V9-lpjj&\L&"&uq$<+Fbl.c#p]bZRC:C[?(P9li9]Jf"e=G(CD2o0<bOnC\jdL:bm84
%Aqs@8l);g\+^2)Y&Q7hELu1`p.>g'N,)T,AV]mN-i=u@JOQ"SVO"tc!fcp)^3_m#VLE`dV+["\[#_:T:En@^X`.Io0C<:(Y?<Ro[
%Fa-ZBH-K.t+>PL*eq5EW9:JVGQKhnR,i;&o`I!<G3sVs9,it*G>%DRsTHmF?^FV4.`7'H5=dD??'QGRr<PokQ7EH&/4r&X.o&8fh
%d;^J[/pMN+:sM9g[4\NG1fk5';!=UoU6?!&kl$pL@Tmbt)L1/U?PN=i^jKodoHofB.[kn:Tr-KQPClM#[U9,p4pRu'KT<>O`m!^f
%Y8ct9JO\%Ib]E2)U.((:MQlUSS4*N30'$E=)_K<G8t$#bEouAfejbXW:KE&O;UtskEd'K?W=b%7^/Q?[i=e@.U>kgnkikN,gJX3C
%DtCbb@]Q(7ZTutn2M9QU/I2b-RQ*G>\^pr2S9R.*A=gkJ]Luai?2ODKo$TtJUm?=dM\[5*A&cdW0s;Hk%h?0meD!:[XYX@,4tR=\
%J,mn9-9KOdO@@MTr6J@>7_T&o(3mr/*s\JV!+@_!39,s0>M&J)q%n$MOrI-0&M+L1VSnH#)J5>QS^dsSV/@lL5OfK)bVK;g6A]\e
%q?5W2W$E\[I)H,@5"'@sj7X`Ybg_D=J4MG)OquZ4,qEZ?f1IP:9G;K63/3\h5kN(@kOG]WkRd^M,2?ZD1E6-bN(^uS'ftkt".+nU
%'n.8qIR2$/UudXm3W,Rga.cSJU1JO;kU:PEKa&7s+mB9<%rs-$HEAPl5h:IO7C"T[1XUdgUP)u4Z>1cEmp0g6LOfsnOA"3)KJJ??
%!\K29.0E6ucl<;B;@P7`.70B._C5;$(h`p&R%WN!MEmOr04fYb<S&s(j6$$E/StWZ,n43TW0Odf:MIos&.l8.%#SUa?4eY%5[CmN
%Dj[WA&s]2hp0C8G'qP&cFpQ6+rZ9[JC5Q%iJOAp(Y72B2"E0+(9/YLD/3,5r1^27\f%?deK'cQ(PWb@:Q8'@+RG(U_-6fLs"eq#e
%=/(j7HGli&MA`Z3*"-_>bOL0h$3YmS;g=2I.r%R:DEa+#d6^*4d=>*T1[HmVjoj0[l#*f<X\'-iRsM4b!obKu"HJ=*`I3jtbF=7g
%MOalq=IM<olK"VSFUg#^TnZetcq@mK;9dd5O4.nJasY6DdGV4,mM?!Z>H]b]SOPGK,h*DpZUiGdgi8QYOD*I'L0MALDP\8^4=M&@
%'6M\=@2a(q[7<R3OjQfhF;tKE18i0P+%m9hBhEZln6F>?!>1DeLoMiBW#eXu]Qu(^'BJFp^'[Y?K`%?+BdS2%OeEqqjt%sq"^-#'
%@kSLq]f?S.UrY]mFb(KNGD.1uh!Rl%1F[THoJ.Lmn=ki(.0KNK)LORjXG$9_8_S>Wn^a@_YS>lj&;?j(,[#C.0%?\Jlr<]t7m_4\
%L,5BDb9!)"j7_#r3P*E<_J'(lNPO/d%:.ncMFO<pi9q>QLE[9TE]QeSAB.*3SH;$R@?_,MOj2n#K\F4mQ3^!BliHl-.HHl<</HBX
%Q(37q1f++oJj,Lc=34$%0#][=@\>>C&]K;0&Dl$DE1/4E$5_YK"RR(e*]@>JHA=:6X08q&SQ7)WTk/q:2+L-OOR>MJo+>E&(nUp?
%T\?o$4ml5X\NiaHHB"7L3@MaE"Em9\>%gHFb>:HS#@Y<%9.V"?SN>*,W]J$0iU'q::DFQm7L<Y2go2ir=#*dL,eTJ[5b^^>K(,<\
%8Xs68p#Nf)%V`SW'71S4E4.c3,!8Jj;95&^hbn/'\>,ep!c/Y6'`%;GBK1:('TXhBNg/lMbT)Bn1D79WYa"@L`m*ghUQLdMc6t0j
%9X;*D15_8?(<nbQ=7[-!$6rB7BER>/U\<g5[DYTYjd?m-('Ci/,RL=:Of2]8RSJFf%Y-9apWE#Vg`hd4USVEt_2K!"A/-Je2[-IA
%"#S$!o34a9#>LC!d&.3@Jti.*I\r;m>^2SE)GcA+0FCKta_<__Ua@:.n;`-`5YHn94?TCZ%7H@GXYJ\c8S'-=><3>^!8BB4\)f#'
%6,LY4\V64]l=@o%C?!O.']n`CaM>tkoCY)^+oNOQ_SH8s`=Qk5$bHB^);nufe:2#8ZrfgYIYlpSF>a_ok`(jsa+XTRU=b8WG\C5"
%fp@q(ZH,SDe-ePEb,]2n`QhrU']\YlEYK7rb"@SVqgNcfNuNd@94t]MW5sd)IncTe$&n[ggS]eu8t#h&jN+1+'OF8"O?::\9rs)*
%HQZgMo4m7tgc\*5#;k,]HjZn''H-'C76O#0:3u3eUQ1W'7-l*[7B0eV?-qpq(=!?d/I?A],_*.H!kO3T8'ua!i1Z6uH-nN8&$o^j
%Mgtj62-/G)63=QGOF#@rS:JRRNLSDW?8[C/McTuC:<*DK>p##Umb%9-!PL'\JVjd>7Sa8^HUl=#dGI5T5f@o*!fWI7Ja?cdH[uT8
%d?Fu.d5j8MTuuFs'g%PM*$m>G"J,]C'X:<U:6GhK;^]-s-@;qhIqL?WTQ$@=J6"2Kf>L>;45dKIJ>n[bV]?dT5mOEdJ3"fqR6rt"
%82M5J&`>Z];NDcO7#T9`6/EK@a"HDJ[__!0F:IDMGm`4$e4ZZkV5BWlk<;k$%^J\_U&f?,PC]c)b"P_5+&/_b5j]EQFgfal%=-(C
%-V4Z5ic`l&@4UH8D@m3ug0o"n"(t7PU^^FRVk01g$'@T[hQ5!'lMRp4n8._o"3Rq^N=9A:3#7VA&5'^1^g3h9r+5'%D9;"K*qR6[
%a2qg"$X&<Q:/hRO&Ko$NFq*bSR0mJfET8Fm.;%Y/TVN6Y#ILU8HrWCUMOe?53AU#[=0PbI.LaH+^`Xm&\5UZr3TMX#`2Eni-5!u5
%ml(#kaq`fBC?V+u,luX$c,WRb!<sH+BO-tT(Z5p!1qZIr+^eJI'SS*I@L+*'PR[1_-*Yika`K[.WQ1&B9A2Rrbi$Q55e*s1g`:`K
%$BXDsne=W[G;PXa%"VeNauRSG(]m_;6J[TCI[=Y#_:PH$Y8LkMO=EEt[+8es@*^PnTI&i_JX`bI?4)S2=pc@#DLmm2f;`J-OjW/d
%=ogI@*`AX76'02Q_:"9KeYQ;97*X<2$6aqiO=5du9-FG4+Wu6hPTKRnTiJ9qTatB:O[.u.%"XLeM&e6eOJY;)d-A%hXVLt`-7IiK
%:b;gH=Xtm,hNaP-#:1PhWMO0*:c3$92sfR"Y;C3]#:-^"<kV"f>X`$R2MLoC&4jTO%`i'T'#mjIXcCO\l0.*a"K@;^I26+!=b_-#
%Y4+1s3J]k"W"su2)%6LId%hEYd1CmmDGlN7O,QUn(dq,?.gWpUSJM$ocmAsU:`W'!/\%Z6B=:Dq[R@qXL+jl'8XkP+p/[8B3(]9"
%-UG)*:r+\!"Z\,#i$a:\MUd4mS`K'*[`IFEcAM@JQ&NGX'37A+PnnoOF9oo:!.aDm*5,1,3/!,KUB$(kZ*e`KV+&HA`0]jF\W[)$
%M8EW1h7SrM(@#uH(iIQn*]G9GOI=9?(35>Pa[YCf">E0!qj%>&-1VL++XK?tl$!Ai9gYl+;-ITXhB/=ZcbYq:JQn!*2e7&FaE)pM
%T9A:^R6+;88BuUKqCV3:7g\np1OHR/.JlQNP:ST"9000"ZSTHj/KlNgA6iXp8_G8%SKsj9hSloPr9?S#6D_7XLkS/u$\E_aP-@"-
%k4?)a$p$5C/_<dqiY9!5*#d9ma+ItG,#"J+,EO),L_R1MM&4;u6s,6l$_T&3A04]i?je!QQ3KEE%UBG_O-jX]9#6B.d4"l'>"rb*
%j4R#X2]Yb3VFSe&81e#46`NDs-t*Bb4`.J5hbs._q)ANO7$<-<'\Tm5>g/*s)X*.n\-kqAW]tlQ.;NfgUu]EJPBu"41=?U(S%E>Z
%Z)3s:-FFtD+!n/r#7tBCBZ\J0;5e6I1m`DV'H:_BMa(Cf_pbnDW"dRl&JV?B?4*p0Oe`R=<VZ\F(9^fn/6)\^b^^r+2M1iO(eGj!
%]W:F+_kI*(-;dID:9Q3>GJ`0=$6)lL6#P4M3\0G?Hjn(]"':AU1krg-$?KhCM_Z4s!GH"1O*dX!Kj._",f(CUd-<#WL=e.M9XeiF
%,$A;eo9g$UZm+14JMcK4"`PLZ/#X8&BNTT$WJ_NO:iV-#-&E1'"#WE;l=?>3XPa5F7Y`2E'"H[f#?MUbG>?aPq9\DZA543L\^40P
%C^JEA$>RK*T^jEL?j0`@WGT!fbS^u*.D[Ee\h7crJIG[LJtd@5.7L_+RFU?K6ia>YbqlY%n**A1#t%2\JD#1PZH;tigkL,`iXk-4
%<t\_j6,5bE-@;$kG)]L!QFk^,Th7YHLRJ["ra<4Nih_:Q42'-X>(P`1X0d;<+HZr22dCnB9hON@n@D8P/O3a!U[j&56t-hfC^/-T
%l=?]6d*7>=\Hk;J>3cJEVDs;ZnrBc28Ek.=U!*&;.6[)fKDOD!idcd3;KjBS<e-:H/@Y\c:f=4%8(=Q)doqXo#J_?.WC9bj&*2&M
%c9p.Zg@=?1b!WJ3*Irq`\)_JT'W\7$,bcTnkNIlI@]3.R2r!,/7D*dRJr+9V^mSh<:[CbgV\JW,MJ.f@Bd%]&k_L]X#Te'P*Y68i
%$AR7?R(BA5I]5jIP0qB6DU2L>2PAbZ,sUef4ET.g/mfDu\WQ*W.cqVR&k(c9.oO7;eHC!EBqC[Bga@5KWq/KD'20(9CpVZ^`<*M&
%BNa+CeFeu^Qlm)IZlR(fRAdXu7WOV)ZotCIi[J\I[6.)L7@JeW:4bMt-*Q7/ZX-YMS0a1(N\SYJ99O!4@44Qt/,HcN)%su[Qr^PV
%Wk4=[e`6A(;&*iJ_e?@,M8:n[RKGchSX;1]'m8IShaq"/GO!s0=<1^8E@*$T<7-@(WAmV,;]I&F6qP*91Q20OB^I?.6*2P\B_l.p
%RY)[6KDNAU9B.n(g*!"1-dC]]1f2=La;T2!.$#4)+='SaOC<uuJg6\+A5%lCh<V&`\<7k@$QbRES^sn7aO_LmVoOc\,&/@'j2*j6
%c9bR)Dn-J@`fNa4'Nurbb41%X*f3/Q$UANV:9a"X$0#%g5+BOKNUT&@p$OLZkqr2>\RCS1Lm6%J06Lqu9S'&iW`LhV0dAH66`\1m
%>a2lre=-!2<)__+&i6N)X'i=t<I&DWKreqK*-%;b01N+C-mr2q@NFa!J9sO(]9X>oW=[pR3B_7&$_'H=)S!3pX]h<Q/^5Q?3.lG3
%84JKuZ>i9j!l6,KSH*akSt-?QHc_eSRW=tq%LY=S$bS!d[)`W0pB&2&53etE0QXb&eC('JU`aPkMT1mrItYs9U0XI%cpHj"J8jmJ
%PoE\1,'PXVLhg]b1._O#><us..8tk"mR\HlQY<6iU3>V5r/td^X9ecMbcDk0'^MDR-N#KfF0kBs>n!j(Pgd_[K.`gZ0g*gGFm<K,
%=BF9q;J:NG+>MO$O@`\p5XbhB8!kthoq8C]8@*jq]iMPA+Ou=1b(4?P6jEMj]T0+_<QSJO*n1b?is&J9i'u&GrCj9gV'T:]UXF0n
%Yb*+TA+T4eeJ&>"m5X$\>WO:;'$-=f(jX0H%`V6/EA&<S*41A&K182k*^Pq&WT?To,NGYi@8Y+c&>JLC>pHKgZj-U`\u>TB8kot_
%=3G3LhH'1Snj`9k_dZ+>I(7LsX:YfUEKG*rc*\q\n,era;D4E^*/0E?im'IN<hP!V?6PPbDTdT/4Oh,UP*%UPYQctkUao2"!AD^_
%QDbQ]L'd7p[j2Y5Y)f("j&REg_Y5nPf2XDnomU9g*.:JVV'QGs;SNQ%OkEu*70'MK>tUasR[$$A<#X;/=I46NUafHnqFSapPr:.K
%9d:M$;&ObpPj1k;]tb7[ohj8s,9+[:SJ_cW&O"0+)/A6V;!J$oddDa/CCDYT3?"^t-]SL'`CI:a$sDOEe<%&oFeB]Zke*`l)(0cW
%gnZ"#*f7%>'(_([9$]5S.&.TQ(>g`6;D:s>0*\P"*0Hp`AH\"E6H<))ENBhoW"fgKj'S.>E>f)!5-<C468oeDKn=6=.Y:PP)`0nY
%:dU85]MZmdQ<IkL;T<A]H;X$cqml!b#^ZWp4"Z4-/JnnY9#YI\Kq+.l!a:%s=tq0%)r>#/l*;(!.#ppd;9k,,8p016:$Q^O>A9BM
%@bn>T?<9[Qj]-qQ/GYXh&#p7>!eM-<PQ!P_RINRb@^1beYuutlHYhZB<K9EY70bCP";@OICK,XI&]*[8D=!94MkT3#(mNF6Eb,7j
%_mK!]?F0rJF^!BH8WsG]QrC&+:si*0YtDu=/WreU#3`%`obkQX(o`BY=g2&p6eDNO*Na`MWt$sVAUh]nlZ!0]O]JNFD:$rr8rH:r
%BW9p',R"jXoVCnEOm"Zs-*L;V$ItM1S=tp79CR#)o?3*N?^\Jq9'0q.e-LV)L#RnpM8eeW0i4,tA>k2_8NUY612IGk,LtAe!TA.[
%$]9!;9r`5q>"]V#S@89j3lrgCb'.a*"qUtUV()[\_.F/GMs(d?m5lT&*+2P"VF[JGHJDq4*q@Ppg6RosC/@Gs$@>]WA')tJXm-+6
%J#&Gu7A*HnSpO5,2FZ&g#9?e&Fa92#.mkRK&Pik?0]+?!G>uI+%cC]oO%iXFl=Ss\ATYO!:CWtZ@L"3R/K_moPq@7eW$Vu,5r?\a
%TOQ%$017=%X.Me^#&(*6s(Y)<)C3L@?\4HN8l,p*/1X]Ue4kpldc1hcU./<b@W`h+PX=\T@ODWGFIcG;N.\tdf_UWolP8#TGgWgA
%p*scn".W.L_,dW,^lHcB\8ZsG%FoT#^]ac4idM$T_pQd19Ilnjn2ukJ["&@@WD4(R+kM)l-B0]>>UjG`KaNPQ+pHFhFdp>2%OHqC
%#uV%:'Rbpe[4%I>d:2U]#IS(_'c0%rV8p8]81*oPi^+q$$IJ?IhhI%--^b?,W4LrtEuWN&8N0O'&9CWEL6@N%><RfHMopMVOoV6g
%QkT:/$Bc+K+=>l45nZ^O\5f2)-qFE--hVbICap>c?KRD=etI>^f=@Xl."l5H;%E(!(lXJgVkoQO&Y587TGT8@i3bTi@73PZq]`V=
%K@Zll[1sn9(EPB9a,OrPZ/RXB/L([DQ[pQaF2N]k"mLY?WSdr'59W$85SCH\0`_Lb1\?!YZ/PhY)Z<*aC?JhhN*:cD'Z))6$[>ig
%'s\Dg!a>!r(e53X$c`SJ\KtKGb[TKJ?1NW*dK$aAZXHZ^)1)o0N0;ZL$7.13Kq&6&TTdt+U)]2foo;+YN\UIaW>S@:&')rZEFW3D
%[.B`MCJ]drQP$p4.D=C2[K1e[Es(hp.T$SHO)s/3DH[%e9$1>j^aBH/5aD;NBT_VJ7BJ1ABgKk4MRX?M?o"[C%4<#.3_HNE[c(V&
%?kcYbB2D)H[YtY\X&`(9"eS$f>*B$h&TnJ5AgDmK?YW!nV4((YlQ[5ur`*puG"O(]'JugM,W$u)4D%cXGN#K<TRaqaH`Rp>9MgG3
%k93Ii"<'MDP1?2`;-)FKQ.4sVkePj#:TY=RLSW9g.jl/j7XZp(8\)`LT3ZM@_;g)Y77PQb$8"#iBH^oGilNK<RmVl&(Ua1"p=H"P
%X[5EM0.L5Joj]C+&E.P,i(tqi,,nE)79X7bY+MWb,-CDa<T(2QMC]+u:A?p$M`a,$`uffT;07g*JFVlY\Fr\W1J.FU%<o:PKP1Q(
%.nEo^,tN.]j:22:5ch\Q1r<lFV,g8QoE'LbeV-Q"LN+)ES`mY?.D@0,k^Dd?$7Y2<5-,GXYhYj>!,<JsoEFFsTOFbZ?e<^0R3Y.n
%Ad_"Y.V^s@fZ@,i4`-*@VHa=s's"131J4cgW$Hm)MOC+E(eu^n,U>mXo_A$OZBpAApd1e&&.1p!)1K`#f';t-+Aao-2&JqEK-o2:
%6)d`^e\fP#QKQ=T9<TRG,IRq$:@tlC$@Q'8JQQYV!>AS)_?5f$)?EdIPsOq;WWOFd_RG>$S)q:N7;Y%<XlZQ0Pf"^L[Er66U@OH7
%_gt'0r$YRR"4c9\1+th,ATXr_WeE/?F_[V5>^@]=eJU<Ha"8H3GgA;.//>(Z=f&VkojQB_GNdD;7,(3$lE64.kc@X;+G\#N,.TuW
%_4Zt88oe*qXDI>Z=d3b)?D*XKG`/7QI02M<>*9(:\@n*C="&YH4mfJ=N+nE)`O?UR"XbL-\[5C/c8!H<T\XU>!$kNc:9"mm.@/-4
%'U5-,!.gf:Q<ljO&rU#cE>*ZRYZ?GO:cAR:Y(T7Gd<8]V?)9SBkrXm^O,d+a&Wpb6TY%$-/CZ-&C"8@j8L9%TM'Oq],Qr6*)iY@u
%Y8"cU5&a"XTg`\o?uja(<M:hB"_Xje@!sMT/XsVR<b'3Rg:r*V[@0;d8h+Zb%:b0<M-_o3_o_nbIuF)fI,^%ZZ@BtFLu&lW`Q&3=
%=i\bOEC\Y)MLq*NE^snO]sYC^L2(rN]Uc45e]*NCkut-6BlFl+GM3f\TG4PFMQC](C9?hKlj%fB^3-3qNm!#YWCFZp&Y<Z5!Ypi+
%S2D]-RRS1EV0&in7Q(_5Yg>>-`,0>ip.,e;e8@T$=^(bIH85W,$&R09<WXjIfCCXZ-2YS#A[5X"FL]4EHJDB!-sc,G$uA2Efrb>4
%P5YUo=d!,S!Z?p)5&n"b7,Oac8du]Q]0p@NL-dKG,/f2^._=8;Zip[\\iBJQP8tfD#_)7)F^Zj.3Wa)2RGoqC[<'R]"Iq=87mj+T
%"<L,`.jp%j*5#N#T]!kQG#=V/L_uk/CcXVWL;=)+eA$'(J(SEe?0:'jLH5N'MZ$D1<?Ytsi_S&qbps8!ifkHsZeh35hf(h*Q(q/L
%;NC*3Fo.,Z*@64;nrjb]lE:@_MFabkL9j7MYU9;lrQDQ>_+#2/;p+F3<_"U!?@0O%bu;`r_fL.ZkcGQU@cas)'#9'%E*U$13S3hK
%n2Xc^*!")'']]FdPcJm3X2dgZl?hHB<k:T%5:`:p&@*'m;s&uMD)cJpER5\Pfg%p<G`Xs&oPS<</iVc*43fBGE*X4nKjpu`g,jg4
%RLdWafq?;0W-abTS^>"!6AR<RZHeBmCkG'fOm_\r-\=L$Ef)FM^'gHO4Z]^cXa25@?:r.u,M-Uo7bc%9Q<QBj7?EDdM'-Wu"#4b!
%'W*m8*!o4rqK3qk.VkoCoOB;SC59pZWlm[9VUC]Jb-4P@%1X.OS%I&8:9oT4j:WIlnYmnYHkHXaj;90:?7V?dJ&me6$dGnED+6LS
%entYsS(ja;4"b;I##Kr`(q^+Ycj42$1Sr,$iPLE%;+G_PTZmZM<MUM?lH(O#X>-DCS=tUIUF#Be!MQULW!rnMpUlE!i`>Hdb-o@m
%Y!MPr*<L'$0$=Hb.Nl+MiJaJ)Oh*%SI3D%b,+\5Gl:GM3l3g/4Mj:.s7*E_EQ5goY8LNX6l7YcsiC#gGA4fat);Ld+'QKB.L?5+<
%:0Dk[;m,fP#sI,[Hhu'<FAl0CRHj#9T)XTF4nX3_TDs^GkKZjdJ&[K3V]HgF2u7F7o\MCg9g@l:5Ntm,ktN7a2!I_!ktTL!TCf"Q
%oVVAHhXm#goTS/(PMYqqhXj.+oVS8QVP!LXfAPjaDu*%DqFPUO,#<O6:O:Jc:O:JcHIGZ9dnb;=:O:JGD:4o&d[OQiW(_Nd:O:Jc
%HIGZ9dnb;=:O:JcHIGZ9e,)^TqFPW%8T4GsDu*%DqFPW%8T4GsDu*%DqFPUOh'S?BoTS/(MKDR=e'f6_^$-oXl'XHo9g@l:5Ntm,
%ktOD,9g@l:5Ntm,ktOD,:%'ICkpO1/-b\al^$5Q8CI:jCdnb;=:O:JcHIGZ9dnb;=:O:JcHIGZ9dgLHLRsreTIX9G3IaX^7d[P^6
%RsreTIaX]lF87/rkpO1/j]a(FkpO1/[J81G2uTO2rM2CNUc87J2nb;"^$.E>GLDt0d[P^6S%^h\a1Z;QhXm#goTS/(PMYqqhXm#g
%oTS/(9_O\,oTS/(PMYqqhXimnhXh5c:O:JcHIGYa:O:Lihr[:#HIGZ9dnb;=:O:Le8T4GsDu*%DqFPW%kt,gi8T4GsDu*%DqFPW%
%8T4Iiru^m1kJm-]IH:QVG.jd1jrgo283u6eOquF],n/4&Uppf'&r$5!A81L`g1sY.!fcJ)I]RF!Y)k/+KZPL(%)ofueuc.fEa[5r
%J5Y\Fk*nq01R--UA[eXCUQb#<fDkrT:+8<^;%5?74U?R?,3L[qpe:i'VqGp>O=Pjr!Not4Z3,37SRNa=*eIE[XIMqQ4p:0?c/o5)
%EU0\/1j(TOgK,92%ZHn,qUG?8]I*Egq2bRRLRC3tWq+Q<j?rlQHBjY?Q%H4>XhTY,s!*u#WYa/l@TWSfs4*#oa#E"P3kT2fSY)@J
%HG5d)N`mRTn^Z_*Z<CtTm/1r(_a"00;2#YuDaBb.s8)cL]=)$/NoTnP5l]fU(pK"@Reqei+%4h>%3.?fiZQBBE'g*dKF^Y,,%^Q,
%H`O/n^=uPMk`:;tk`+s#mHj9->e59^X,mm_RZA%P")t/#Ia540?2+,O#dFGK@adcH^_[^J?VAqh'=a'l`s+#Q:LJaj)`*4,%[%7`
%$Wmt?,\o)AQ9$<EG`rI>%Y[fD"0,R9S/G2.O@f@<kl`*%M#gm*fZJ\FRLYqS=Sm(NB87sp#7?&?`k^hE0ZFZaW!3ZX%$QufQ"H,j
%JdT_#NA%QpM)djF@O7:cnp\`#bqR"H1P?W@P.':XY<QmR?$2r[IIqS"`URD67@mt+:WPg:-RZPA>#!;4R%jHMoBg%+]onY>5Q1Q$
%K=h16Cg'n&Iep`qnG$4*J1ja;Mg!PHeOMV0h*Jp\]Ociq3]LPF6q3k9!+lfgAcT-QW>WN[!*D*o!^FH3>h+=o2F#9i\L&$aa"R/d
%m#,;teY>,@DuT<)/SUJU%"e#6+Y2&?U,c)6e']g@[3m,?#uA93Jr9pb8H&#h)Au(-!__`](Lbrs1FZ<l";TUb,94ER=GpQg6g5K7
%SQ)L%+o+at/NBC3Xmi[L-0neJ>BT[h\qs-uM\+%jMLDggA-?_d"H%Hlg1\W`2adGK9*(q+QM`9!NC[:Ul7dQ;%W(A0Q.5r1L4r<[
%W(u48e*DJ)2\urW*.K]J#`(I,,YjFV.D/c-l!?2KV."nR=0Y%`[V+6j/VA1_E1V/ZRL$*&#=2YneZk8sD=P'2go#SVbr_4X`t4Xh
%^=aL'p7$caMkkJo-Fn`(:g"gKXEgb3MmLGr9d@uAi/$BpF=;^DLA?K)7@TCsr*kT,S4*B^5ulDLKp:,MW"CGW$G,H^LETk)^$VUW
%*W!Z5]/\n%oQ:Behm^X%XP]s8KFM`2i7pC+9Ej+kfQ]eFO8lWeaoj>`V[.SqjPi@Z#JA#ldpo^C=)\n'*8<^%fY2geI_=@H/SmY]
%gsI+Zdm3o<k=ibT]Us+,,((5l#A27X9H\/@+<$[ST#<"H9N/bc6&kJ(.5=c%Um^BMPSb=mZG7__"S3(c&rEEkfH0L<EXjtk%$HFF
%D0s$O3I<=rG9&(Y_q%?KO,U8A_*X:_,8W?2BJ[Q<8A:8r!.&QpDKA,)RBV3YF#/1gU;Klk[rNC7&9;S?@]aNPncIj4XXgEK8@?W@
%UieE5RU23\ZMT/?f&p)j:Tsp"_oU*N2mVteD8J@VoEiRp0<VQ\S;.hA^J^IlVOgmGQ0@I#%EhFKCt#]+##9S.po&X%pa7"BnA<s@
%r%^%g<hTdG"rpjr%(VZmiIr3MN#MVU%Rb9*pN'f]nXWcDA<-!>#q-FnR+cR0$Qt>:Go]r&7<YJ[7tko"E'ht]ml0d)"=IA\gI]*1
%ip77&dB)),Ab,(<(i-2k6*(?4KF)BF8*'Tke<=lnV0$iLfn@f/9n5a%4Qf7d0WR]a/!,mXR=kj!:3s]7!:UcS#n8W+Y[P-H:B]rE
%j$SOY*=*/E6oY0*26i=Gg*RHj=\h6\c8a4UN&SL@G<u8;3:aK8B_T'Q>@%DG<e*&RZ>s&@m;5VY)mn6;'ZsLpVZE&r??/1g`j.n;
%/Lu:Q8>4$s19"`[REnRIKB6L[&/g\l,*q:hIU2?c-*;s?I$CHi;0oS`JXoUnL.)!B9c!U5O;LB_PQXKB_$\?PVbss:j*q3P!Cl>f
%D91N9ZWKcMWl@Y^=6&0W\.j>YSCPej0*<]ifQ95VNm-Raf>(e1W,*p9=KrK?Y]q=eH=G=IG%*kimAbG()XFokc&D_<Q1@*7`0Z+m
%QE^D%n:'5%"F^,ZXA$BXpN?e3n[@k)[fS8!'b\>B+I#c7!]Vcjq6Y87+A7`T1##Zd25j2HFc=u[q1O`l(3W)cDLVB%899'"&-l!?
%ZVYo%D^#is=i\$LLP`7Cg_P0N86p-FZnabb>ar%X"PNm]%jD!H<fnPs+M&iW.bWO[,*<nP[9?O8KC6lMQuA0mLY._3$mQrUn'u2`
%Q,/AsiFW(p???t0ep)9PnVcXFE;4&A7Ta^D4TeP0KJuR2O?Cnqk[XYnE'Imf0mf\%qb'[LARXn7F[iQ4P0+Db_pt"1HE%dKK![pc
%Ii>8qGpPSs\WWj*34Y\$@2fAf*H7FoMqND5R+RGP>7KFlRDe1%d6p(ai7ZSlg$@.'T>"g]<-8T"b6<3'd>M6fd(RB8Og`=8?mb>!
%.)h,V%Z]>_L'O$?ffc5ELXf_tR+F@/E4r3_-:`0$*S3\QMj5P&:K.<Vh%$?,VJ6RnQ-e.Q?(W=Z#<%:'0%=%7ce0Uh8p&#dq[.KY
%qeDHuDpuk<.&mM+4a+%TigWK'P=-55qt/T-AJ45V$O'MA61HuL3&5Ea\K@%0jJ8q48$Er2I`RPi#]pViU*oj%.#`,Dntk#CSK^.L
%3@:f!.RkZhGSY953:QU2'8TQO=s[BQ0k`=A3p1HgKJo=1O:GkF<`^IT=\`e?d$^>;'Z*?mk.Y@!7a9rt0"]fb>Eb'ZH.60.8tL7m
%[AOrtKH]$'dmC;'"pn)[`[V8g<imR@-(,tXENEN3#\6=kP,9]GWtr)09nueA>["8S?9'uR:1QbEdXnq!LdOLpD1[sg2#g]7^*-?>
%-@;KRXG;ddO'*Fo:LM>Iq1`&CPU`SFi8X-V6'X+*&%[rjf[s-`$KDcW5Fdk:_I\L/)_k20$]Pn6K[SHZC"i^9FJ`X%&0^6[*24XI
%<\8U-%X.7X9EQEeA>V2s]_')+lXR*N*/DNsN#Dc_1L^7fHUm"9R(@@i^i<7ESnDT"bsD:n[HhhJ#&T@V>h'6E*T^5aii(EL[UGDB
%HY2l=VCI\[<Lm<j83'e5?itLhm&Wj`4jQrRTH"U;,#\,[ApP0u-q.3)_"bCKS_=D"=?m&'edO;M@I@Qm2J'W(eW.mhXtS&NC(ZaO
%66h;%.9Rg?G'6>$.YXOE^H2"kAjnI=[_N`\q+U+/KEkEa7BRQ*FW;fl8ee^k4Pd;[*mjO[LC,/ifii5nUPeL)-C5ZGGmhb,Z'n/P
%=gq_P"NS#/JLLoIpGGFgQKRU8blQUl$./b=e["ILH^0AL!SleP:=9QVP8q(\[]c6kX]9F:@A]C.)IT>D`2O:<TGYU=BQj;+)8M79
%06YQ@,e2&=#j\?K/luIm-nCB)UR,uS&o"WrS':F)X'*-?>*Hq4IF(tD0$R;`QEA*"h=J!DY<CDaP@/:]m']$.*5E8rORkghn3Q<\
%C2#c6"@]1#%<t9aeIdd/5^WrjFInCEiS86D2EBe[Rq1:S_?:2C_A48!8.;*.7<O@<%rs\L@7&d.8JL&akrm0P!CMNWRP0[7:K%'V
%'OA]M&POF)MOlW)[i$`0Lk2&FAha4tQmE`\e">73D)-72JXZd1I]`ggQ.%*++6TY`(oBJ%CfZ;U(UB[TP4jF!@[-E4TUI<PUW,I+
%VUagj6O0/n$tp!apZ?q3!0ZE'F13sei;h&8>j."^X5RqjOe=JRSQ/p:FYjF<J@3(XX&T&Z_(<*$V%]o;l23@$-o1X='WJqM-!4Df
%G<5?u6trAQj-nK!HlGF../8<>V]F4&S;lGs8teTsXm8q.R[hHWZ1:T68g8#R*"(->bgpMXb+qC-JTTs4@^FaGElDbPn?q#,6/e8d
%f8.n][E8p76FV/CK0)VZP/=T/iKXBcS5SG$L.nlV\A`iOe'?1oW8Rc^1_[&ceY6q.\L'DOH@:Tk0g9SfpnimOeh!M=`>N3MHB>\i
%0\YY5$]_<q&)XVnbutAVYZMATeE5l[R(^JlrDVjWM&L2*J0^C1,KN';?^uo=Nt'36"i2SgCid-ED++DcMX_V4_8AH>,Mc26QQ?(n
%X<t/Pcct=HOg$+:iMk?=qt`L8>BbDcg5.@+F4KTldSqa2);BmH`M`oF7m@c#d%T&'6`Z"DZ=.5KgHh>been[./A6A0bKnGil4>sO
%"s8p=,:$3eaP[Oem`JtM(OkNn]>t-+iXaS';;Z3P@4EF.f$.*4M8mUI/Opd?_%n<OK+9:NVX9ba;5m_F0P_uWlm1Uta+6UQq"eR"
%?9:h"Y!.ko1Z=s2,/I'J.X9<W`41Kd9_AeUjFHdSP_UIG-+M5#2]":g%e%VUal/e[Xjq.(`1Xh@9fNI]Wk6iFfY\k8pT*m>EdA!k
%R<Ch(.f&7:2B=p!j$HdAFCKm&q^7QnRQ/VcmVttm7sE2.C,/SV#8pN027A3.P.p>Vl%_5Eh`DRnq(b^4Tot*P#CAKA;K9?0"%D;Q
%$9N6`M^-Z)=:N:WHo&tD;$EUsMM5X4$GEZ3)--gQ=rYl5).a$-klgsGPNdSIQ*_;@*9/$XPYlVJf'9Jm$@%4ZJ.W6[VOIWb4NsAi
%lrTOk(RrG''hD1d]O&k0ps_)D9eFuFk+e;+jXO\3Aht%r*NM,5`(6T&7L"&qeK(;p5`!/+UY#6Y;HMs-L7Waf+>;tC8S=TPGK^ei
%0r9f=A^+=%"6?M@O=6l.&:b+94#ktLS$No)!Yn-6boFf:1=<o`f=<EWkju><ogYHpf6+$!/K`JpF0[(6`$P47]lh?u'[&hp;>gA[
%p'R6]ZSrdb^1c%2+\0a?;b>uRe#CrZea*&q30uS[B-pK`\j<LFK%7Brh'mF$F\W[2Cl?9f3#<YN7/$B=:=?me[T6HPP&NaWR+I<e
%ViF^D7(R/KRNC%b__I=(8dI!@Z&XrmcMdm1,"+sq)Wa-oX:3qc-7Tee@."sifT+WgD8mtoc#ntu5o,Mt[XlBE:8_D9Zj]724<1s7
%V?HG`ilk!c5-&#`6.V-]Vj95:7;U&Y6r-+F`]YCX>K&C3c&5AAbgrdmF[@8f'g,$W9nd^$\/iS-ClgIPC^Qt<WE5BJOA90oG`]J*
%neFTNg.d9VCVh/md-<lFJ^;4F3J^%$nOCjLenDC!,BO\t7LTj[p['@jg[!>S".(t(:"9h$_naK)i>Rjua?!)_6U1J7=.hbVf3`Af
%dGnTQ3e#A\p<Waa=%N#0o_aV#ZBVH\ELDQX6ilU/BekY,SrM;W-:__q:+ZV5p>)ZZk*2!pAoH5l_B\V^8VND(C#n4QO\/(G*\(7p
%TlTapkksNc(GS%M7,_:,I96]Rin\;iDutFg'<N[coI,-/M5%J)B!jNkJ<d$2Vurf^Xf9Mf9PR8-?M*Kih--<WXTOmj*2>t%/_ZU!
%1r!imA<a9.5H'L&r+*Gd%g@o<>U'i`8ZET8=A>o-a8Fj51:]d1/bH]BP!q&NIRf2c'7rjrK=TGB*=#0DS"pdU/Bp//eZ\]m$p52p
%UcuZ.l@&`AFDNV3embe:&4)UD1tubFpjg=)/=1]HHKD^6rk9n(R7`O780lm?0!%]Gd*B5O755ELrs0plpg0m\(i?*P1.<:Y?!f1)
%;ZVYU9)%L\CDF$gk/`!>/VMN&-85]C@rlP<02L7F>2W9f=UXTX[-u6Hkhs#JN(Oqs=/*&tR;A5O7_YGU*S#Vmb5%T3]h+LFZa48*
%+..^;K<8a5n=<=fH5(E%pV)/;@3Z]>*,UXO@5,/=(bD`,G1&@5;:/;Ze[NSU)$aB%CF:^-,hh#fYhZ3uj3m40%R5p+4FK)$1?J_5
%J>0O\+5f%L7<!GR6V]kU!>9.&fp%nIn2.B4!mW#!!mlF<$_C`F20rMtS;Da9m&e8B75O<<>8l<ZE$,7if;VhpPqXbqfVeiX$@'!V
%;2ns.+2QHG#D?4t2`EGI<6e-rEGBsS86_P1A!L(0rpQ8WeWNsDZaHN.LE1D4^7B_t&20@JXr?^LW`NXW@Q^!a;,ik2=#Vqi:TSV8
%g+#oqQ&t4/i_,Z;!G[UcS#t(HF`0<LWGJ7F`BL;`.+PQNXk,2L$TKkHrW<?O4rfU9_MYuU":ZD_Y&T$"1Bp!YBhj`P#"5n-.ioN1
%Ob5dHjl^5o[2k:.6<C3Wi!=1\K_Y[EQaqQF78/RTBIu9t$"t6B?U\Lc4Q'q0%U`MdE!0VO()&rheGbb;aedNl'O(fhC(@V,:`t#`
%`(bZ`8,qO1gkn-_,FAVtX,2'CAjZ.G`N=H-n;:ed###ld8r;uj=(%[OH'>8_f_nTgq750^m8i@@a-Za-IMqbJB#0j')g<\,?+$)#
%8F#TP]8hieK?EV6mI[Z>Sf"m]201r37&44KX+Xq#Qe7>KgK_6KYVG@8"C>a-M/;ZfT76PT+=eTD1s?jUe9GE8[q3%BPbSP9%\NbD
%s$nm,fpa/h5T;s<QMHYKK9=r!!(($rDa4*?[ai0q<skFtAs=0%YJ[FBHSC@RN3KrkO6G)Hg.,kSSs[&bp7((H+nNF-b`c7`,W3!I
%F8AI87\'tWg'E=Wn1]V!/jOjr;fAE?Kb`Ye)TPpS:#K'*5M*$GEJI!a825.*51R)gA2s=\aB"+"m\dLf+FjIi,;XWK=!+i+Ne=G$
%n]a/3ms$*AkWJ_^"O2klo^Fkd,c.>VIJ03DEa6J3b(4OXmAU@.")&&g^%DB4-X.*AS_,^f!VuM24>LJ;ot=K!g\Jo%jgG&>]eB[u
%3Ldq'#n=nrA(tuN*gs@"]Grkuj8^1W4@.q>WYb3$_src9.pi!K69pY21uINQ<re-l&bV<XPhO)P0RO+##3XrG5#HXWO82K(aFZ!V
%i?.j]gB^!J*RBQe1O<T$B.$EJk6@A;\p9KpqIKVYhL5H6N1AeNMZKD]Gb\fC."K@HGd7I&-l-lcX;Ds'D&5DA.0_Yig[PGTXn^2D
%5CRtF`tS$Rm8`h:RZ4WtN@i'VJ,jP6!ML`)fo"A=Q_7^neRuTPYCFJBd,.<mQ_Cg^\di]G[@g<$!N$]$P7Mq[m>VZF8XloBEh7$V
%-eWC9AL=B4]:,3CFUj)P.ms(ER?FbQ@;`-@Xu9Arl4J,3Wr&0O71o,\c_Jqig:"'XjGJe92*L9LrHB=NZctt-io,1:c/*eSgMtYc
%40G="W%h961D3>&\^Z1k;7)A,HE1?\ZT5gi"Oc2TgdSnKU48<R-*aUiSH1>E-b"Vl[7DZIX&XkYc@h3qSW8695`N-fh1b^)Bj!T)
%hRqHuBX\Lr.Ql$=I3R>Sc^qOF?ZsW[#;0_OplbENgXO#!,K^`,9Fj(,(aN-8\9<Cn"uVpLD>\l-:G'`WiS8FBN[NrS=0EYC?GhRc
%0ngkr&^"siaU6<]b<KIl\q0Qd(X[^8+[-A>.(Z)b"XFW%$oV4\/!O&VKkeaY?cE3T,'B*X3LCs]VTKPD$u%fm\Ud\@1S%@p**&a@
%JN/RZ;.Bj_"/F,:N3E:)Xo^ClaTp1,dYTX?ZRMFg_c402^qn@263Oe@,`"5WHU':tCN=2c.nK_#-<@,tpuVX06Ak"0%KD6C=gr<(
%&Equ"Mg9NPr1EEl)6o'>\@nno#7ESa2HkMq<:(?i=.RI$%I8*>%VZt:B;Q!je^5kiO`/;)\CpX"'q6+C(LF6OFNBR=P)_W'=<3D'
%c3!W++uGAjh2>oAj`%cA[j#G96h*q++IC>de*oc[/+:.IFk:_o;:DJ(jG#,7\Z#4[h54:?ftODl"f@Uq;[iJ*DHV..;s-K_K19>B
%[V1;N`qil;a9Qdb?-M1La(sd0\rR1Z$;,g+/+Rt=B9s&p%gDj:*A1E!DFN..(^G;`mEoLGl\Y2WhM_CFgLX4kKSFdU(!gq[X6>c0
%U)gJ$+`Wr2XSDq(aq%p8F!+\,;h0Ke;tQER8-%gbhUXI<$Qs.[:Z%U$`GB-9_jQo"/aCT<qV>DM.BMuB^b$HP4VER)f[shLEtJKe
%8VKS5L`m)*$>c9jaB#^PMqQQ3O$8T8d-S8@`Mj;[^h7VpU(3H!R//B5lk?p"6kV27mVb.KdCb`IfI:o8#KN!3D7+!sc.3W:$2;ae
%"SWIE3jmnDZ3#*9]iClKi`N<T"-R8HO`.Z&b[aYc"'U>DTU(Fp[BNQE6)>]Fni_uJ'[@9VDd"iG2ukXd7*9gTR6&+)&2`7H?5$j!
%nE5dmo>OfL3bmg[0oFa(X%toEckB&tHdkunc/sQ]]R_Y,A?STH4-EHf)aT@--p7p@j7qf3!Xp<MisSB]#Sr0km`+5`6sJMCILJB:
%BJ.<pO5KLR.((G;kLjo-a3$?R*uF&!7JZc_PiGsLm6XrYUPGZ)$ren<95;_'_\<S*%TNRMSGjEODW#JM*aeF3l$%(Dn_5#/OIW<0
%[6/@'lJti^%D+T#:5:"FDtMiq_lsG]GVT]$.]SC$P@4aM[Pgkc,&Q^h+S,)]ES+OWo4T+5SaDr+_m$.::W=O`G&'2\LI#Z5a5c[[
%c2TN<+_:nBq3\&^OnsA%mi%"/XZq8]lYuhn'U-B=*JroN>s7HU;Gs;`Yla2m/Pd<>Qo0&[E.aZoVFp#2fG^=P/h!2pXt`srDQN(2
%o+ioi?=KK3::i*5'?oWl0X9`9E=/G:])ZO_'m&)K.;Y^=\$!#`$aLQ9H88n]f(cX=<#*biE\np6\OEGT"-\A==.)am#A4&L3ZahY
%-?9+f5n92+X6-K`nJCP7\rW6m='6&J59j@tq:^VR5o".Om;sGEm;sGujn<OV`?0NKMoZE;4jCln8eL;UgG!OW/kB&q5Ju;7cPL_7
%-kF3@0]Bd&*=\V-p]!F*kPLc&IHX>Yrct99'M%F7Xp;8gA>gtNcX)BV*lH1b2+P3>MJC=imYEe`rVdt+^,QWr*us`G/f$\Pb%e4.
%.WHd]gFM%HqA4*EHLbj^I`]+YO4U>SMPBXd`j,I3ZtGsfc2:7`b?B2e,WqM.0P5g:r5BU:4jk3Y!AU+b6R@X?Q;5/j#T,UfaDe06
%Ht$LqcE*t")E\oGW0lQI#?@pd()1)N`*?Xk_#p#,GCrR`8O4HfNBngZ$p0+Wf[a)s)Q7pjJV014\ZfXT`rQ=GM6/0.ITa!IXaF[3
%VUaj2U*&.7cC9/>rHcdI<d#S=@)bJuKK>,+\'CFBO+HRtB%XA4B`%5u2V.$2=>d0-NaTH2Pr\$X%2Fs.C-`,D)C`mdmUGjtB"Qfh
%BH*r(@WF9"<RTEoP6O:21:7=f)\JQ^r'WZ&g0W5P2a4tHN&\U30W*\`Eg<1Y[R5iF`#a]:X",`WQ=Mra%*ndUh+_C'J,.rP62fBM
%+O-Iu@/.&"_%Q#^R32P6A&o9e_C.t^oe97ZFcfK2#k0rK>lV]=UBt#>HRJlZT-VqRAF'rUGLC=V@*_?:T_37,5N'%3$.3F%V]Unb
%GMc$4>V8X%^hX\ocfa:Uq%qXM't#bF<(/TuXX*,/$$<8J_8W*g[8F;or$&mcaLia`Ci:=L8.Z[7L[I"/?hZPBHD7)rHn(u=B.q65
%nCX"giG6:lCZ#;QLYeCWHi:*Yk]hBj"NH@%3dR+U\SV]1C;"FqWg,`iV:C=j&."2./og&C&nGNGF!]!L@BOMZ78`kpDiQ&2Z(]$N
%C6\MX6rj=_-4r(&#WVoCFF<P8<S^aGj&NdBQW5%CdHL<*H3+!%mEgS3o!3tN7D3.[,gSjg$0(Hb&JQE+o0auN]b,2V3aA:d&'tt#
%?lhcEUS*nS9.7u0"6CFO:R/a[_GDE%`$b\AD(otdV=('L8<RPWeJT8*HZ$*lR3.+KQpQrg1MeYr?B\?%IU\4+?>;NmRTgIP_O3E8
%EqA?e34XV)ka>t-HM.EG50,dZo!.NO!O@`*HC#9a+,Fd*R/-LfBBJla7lOU7EnRAJQ?*#d,&k2Ap?9n:pJ5/R^%h0Wr[<#ErV"o'
%p]'d6h4O-X4o4R%M_?.>?iBulq7Xb0(JP&bAtOHoJ+mo'g?t_+:L:b]EW>=1].]bhq>/L6A8V82pFfl:^O%rPmDWXdr$rg3g-oKS
%E(Xt1ns3M9^Nb2,l>s_ZVuQYebD/$[cen-RK$Rc;H1AlI#Mg`ZL#FW.J#\P*VsjH(nU7%M08qi^4F[*Hk;Ei(TDn(.cb=jhBC],p
%5^Q!8rdS.5rqH<(6+./jO>$M*poe=;]`.3n^I!CAOlR>?RnnM-iq:8dJ+qsUlXtDPs8M0KMcY*U?@2]j/*=8DmQ]3>n"5%(ea)sT
%QM6gTiI*qEhsI$h-MS\N?JRdEqCR3R9-)^6PE+5-o@7*sgU3FCP;SLREB:1`rS5CMo#Y(Bdp\4UhWV3^?8cY$]\T8.Ls7QWcJ*dC
%0gp6oF3hP'Rfu+CAtT(O6?2/J2_s-OZe%/-Xj#Tr%1b%@#pmO=3t8E\p5=\Ecol'?c[WMpkWR8$NT$4rD_ed<B'X7#-KX<P>^Xp0
%E]>ok",&DE0kfg/$2ihomgg:N:c[aX#C^BN(D+eBDUb44eLHm4Q[&@BiU]siq<7Ro&qD,WeTWp2Qm.0P2dSU9g\b6Oc&[>NQH(*K
%G[6_aIu"iA*&)d/?%<->kZ/M=.E0T)b8^qhN:7]iAQ5o%M[:i*[X^\i@kfUtmK]M+0!c@3G(f]k$m+)95nh*Vr%>qU<RrtGH%:hk
%dQKrnWA4sU+g$@jWWu.+dE@haJ?r3OGOH7V&b.[1Z)<\fgPlEOm,"eX$[D`;V\-]8_$q"i<euM)0_/#`/2-cfRFRgt758B:fk#%-
%c]$r_HG*c_l5%61Y6aCVAX\Rg%qRA$N?Ii*Q!BN/5S^\;'G'#RSUb"A1hL"JBt8D`;Yir0dRI91Vj<u)9?CRn++[n-?:+]JXJdJl
%?i428gLoi>jPR@\$^u4CUCN[,F.'.:3J^BD&Fn8^1T+3V5'#R`GpVa*7]l+Xa&K_kRCc)<CCni#V*:SebX7W7DB2]17V'5Ba2Dqd
%=$uPYGVL%H0Jgn,c-j0liX+YpBg"rGi%?M9qNrR1Q/UKC9>@N3[hr]23kf[E,-b_SlnCk4pftA8'`7/"-pHUfD+O1'SVVYF-a$><
%`Mf#T*>UOTYmC^E"M;(E_Q6V&B`k:">gsXtfO@[qnu>3[R?7(C=XtjJkp*7N@7<B]KmA+&HaIbM'I!#Nr,(#GgYN6!r8*omCYo2s
%^MT%nn#:UnXs6*/I^u8u5?4#C!e?Z/\7ZcVq@`>&C]c/3W>?V?mk#qohc@a8Zo5=pA4nh;<d_V4"gggW$hIo7.-DegMXag-$e/]"
%Y2Fuk[)+3B:G]Be]&+t/[*F!697fU-2;pIpKAh]QM4(2SJqC]4P#I;P)7B2FgI@oXbjilkV,&.s.QVT]:c"GcP=';_,Y-MDZ4HV/
%Q+#C)::J2[]?N9<2OcE5K>N<Zd,;[7mc="IK(<*u>q3fYHXc1;hsea*EB*j[n*9rNk/A.GGCR;Up$p(liMV18qss`IYO8!!_=L/]
%q=<j`DshQ3?G+(X])VBqVjf>Hh1,D"jfA9JYJ5DZ(KbY(]&9JNrQW+Ub==em)g]Zd_u~>
%AI9_PrivateDataEnd
